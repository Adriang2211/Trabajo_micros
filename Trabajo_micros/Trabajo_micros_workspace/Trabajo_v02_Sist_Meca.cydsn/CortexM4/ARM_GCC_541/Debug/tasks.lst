ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB148:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task.h is included from an application file. */
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* FreeRTOS includes. */
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "FreeRTOS.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "task.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "timers.h"
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "stack_macros.h"
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** functions but without including stdio.h here. */
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#include <stdio.h>
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * global, rather than file scope.
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define static
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	microcontroller architecture. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	state task. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			--uxTopPriority;																			\
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	being used. */
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	architecture being used. */
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																								\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** count overflows. */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {																									\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** to its original value when it is released. */
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* See the comments above the definition of
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** } tskTCB;
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef tskTCB TCB_t;
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** which static variables must be declared volatile. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** accessed from a critical section. */
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -restore */
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /**
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is in any other state.
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * creation of the first user task.
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and its TCB deleted.
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * a suspended list, etc.).
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * set to a value other than 1.
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * will exit the Blocked state.
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * human readable tables of task information.
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 */
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * under the control of the scheduler.
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * called by the function.
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure. */
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function - use them. */
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = NULL;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							void * const pvParameters,
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the TCB then the stack. */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allocation is being used. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				be deleted later if required. */
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB = NULL;
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxStack;
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxStack != NULL )
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it again. */
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxStack );
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = NULL;
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t x;
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	by the port. */
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			debugging. */
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		performed. */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			break;
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xRegions;
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the top of stack variable is updated. */
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	updated. */
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				fails, but we will report the failure. */
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			so far. */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTaskNumber++;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then it should run now. */
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being deleted. */
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not return. */
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTaskNumber++;
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that has just been deleted. */
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been deleted. */
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			block. */
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				tick time is less than the wake time. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY();
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is resumed.
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				executing task. */
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxStateList;
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eRunning;
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lists. */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eBlocked;
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					indefinitely? */
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eSuspended;
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eBlocked;
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					all. */
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					eReturn = eDeleted;
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eReady;
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being queried. */
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being changed. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority than the calling task. */
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						raised above that of the running task? */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but the running task must already be the highest
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					there may now be another task of higher priority that
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is ready to execute. */
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					require a yield as the running task must be above the
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new priority of the task being modified. */
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					currently using an inherited priority. */
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				being used for anything else. */
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						there is no need to check again and the port level
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						reset macro can be called directly. */
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				optimised task selection is not being used. */
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being suspended. */
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			suspended list. */
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 31


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is. */
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vTaskSwitchContext();
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
  28              		.loc 1 1732 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 32


1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		section. */
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1740 0
  35 0000 0246     		mov	r2, r0
  36 0002 40B9     		cbnz	r0, .L2
  37              	.LBB96:
  38              	.LBB97:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 33


  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 34


 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  40              		.loc 2 156 0
  41              		.syntax unified
  42              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 35


  43 0004 4FF03F03 			mov r3, #63												
  44 0008 83F31188 		msr basepri, r3											
  45 000c BFF36F8F 		isb														
  46 0010 BFF34F8F 		dsb														
  47              	
  48              	@ 0 "" 2
  49              	.LVL1:
  50              		.thumb
  51              		.syntax unified
  52              	.L3:
  53 0014 FEE7     		b	.L3
  54              	.L2:
  55              	.LBE97:
  56              	.LBE96:
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  57              		.loc 1 1743 0
  58 0016 4169     		ldr	r1, [r0, #20]
  59 0018 0A4B     		ldr	r3, .L12
  60 001a 9942     		cmp	r1, r3
  61 001c 01D1     		bne	.L7
  62 001e 0123     		movs	r3, #1
  63 0020 00E0     		b	.L4
  64              	.L7:
  65 0022 0023     		movs	r3, #0
  66              	.L4:
  67              		.loc 1 1743 0 is_stmt 0 discriminator 4
  68 0024 43B1     		cbz	r3, .L8
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  69              		.loc 1 1746 0 is_stmt 1
  70 0026 926A     		ldr	r2, [r2, #40]
  71 0028 0749     		ldr	r1, .L12+4
  72 002a 8A42     		cmp	r2, r1
  73 002c 06D0     		beq	.L9
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  74              		.loc 1 1750 0
  75 002e 02B1     		cbz	r2, .L6
  76 0030 0023     		movs	r3, #0
  77              	.L6:
  78              		.loc 1 1750 0 is_stmt 0 discriminator 4
  79 0032 2BB9     		cbnz	r3, .L11
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  80              		.loc 1 1733 0 is_stmt 1
  81 0034 0020     		movs	r0, #0
  82              	.LVL2:
  83 0036 7047     		bx	lr
  84              	.LVL3:
  85              	.L8:
  86 0038 0020     		movs	r0, #0
  87              	.LVL4:
  88 003a 7047     		bx	lr
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 36


  89              	.LVL5:
  90              	.L9:
  91 003c 0020     		movs	r0, #0
  92              	.LVL6:
  93 003e 7047     		bx	lr
  94              	.LVL7:
  95              	.L11:
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
  96              		.loc 1 1752 0
  97 0040 0120     		movs	r0, #1
  98              	.LVL8:
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  99              		.loc 1 1770 0
 100 0042 7047     		bx	lr
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 14000000 		.word	.LANCHOR0+20
 106              		.cfi_endproc
 107              	.LFE148:
 108              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
 109              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	prvTaskCheckFreeStackSpace, %function
 114              	prvTaskCheckFreeStackSpace:
 115              	.LFB180:
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 37


1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		currently executing task. */
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						next yield. */
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 38


1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unsuspended. */
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 39


1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xYieldRequired;
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskStartScheduler( void )
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( void * ) NULL,
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 40


1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the only macro called by the function. */
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		starts to run. */
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portable interface. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function will not return. */
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 41


2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		or the timer task. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskEndScheduler( void )
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSuspendAll( void )
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xReturn;
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		running. */
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 42


2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			processed. */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 43


2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				appropriate ready list. */
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					task then a yield must be performed. */
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					important for low power tickless implementations, where
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				time. */
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						do
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							else
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							--uxPendedCounts;
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 44


2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						uxPendedTicks = 0;
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xAlreadyYielded;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTicks = xTickCount;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xTicks;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 45


2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTickCount;
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t. */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queried. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t x;
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cNextChar;
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 46


2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mismatch. */
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Characters didn't match. */
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						found. */
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxReturn != NULL )
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The handle has been found. */
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxReturn;
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t* pxTCB;
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 47


2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the ready lists. */
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxQueue--;
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Found the handle. */
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the delayed lists. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the suspended list. */
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the deleted list. */
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 48


2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Ready state. */
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				do
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxQueue--;
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Blocked state. */
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task in the Suspended state. */
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 49


2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xIdleTaskHandle;
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 1. */
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		each stepped tick. */
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 50


2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended. */
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch if preemption is turned off. */
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						is unsuspended. */
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 51


2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xItemValue;
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks to be unblocked. */
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		block. */
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		look any further down the list. */
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( ;; )
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unlikely that the
2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					next time through. */
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 52


2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be removed from the Blocked state. */
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						item value is the time at which the task at the head
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						state -	so record the item value in
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it from the event list. */
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list. */
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority that is equal to or higher than the
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						currently executing task. */
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 53


2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationTickHook();
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		++uxPendedTicks;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler is locked. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationTickHook();
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 54


2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xSwitchRequired;
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		getting set. */
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 55


2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSwitchContext( void )
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		switch. */
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 56


2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																									\
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																											\
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		optimised asm code. */
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to this task. */
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 57


2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event groups implementation. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	task that is not in the Blocked state. */
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the task level). */
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function should not be called by application code hence the
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		can be used in place of vListInsert. */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 58


2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TIMERS */
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	called from a critical section within an ISR. */
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the delayed list, and add it to the ready list.
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxEventList is not empty. */
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pending until the scheduler is resumed. */
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should force a context switch now. */
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 59


3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdFALSE;
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event flags implementation. */
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the new item value in the event list. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event flags. */
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	lists. */
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		a context switch is required.  This function is called with the
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 60


3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				but has the same result. */
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				specified is the maximum block time then the task should block
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 61


3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The tick count is greater than the time at which
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			was called. */
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait = 0;
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskMissedYield( void )
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = 0U;
3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 62


3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * -----------------------------------------------------------
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The Idle task.
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * ----------------------------------------------------------
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) pvParameters;
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	any. */
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( ;; )
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			see if any other task has become available.  If we are using
3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			will automatically get the processor anyway. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD();
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 63


3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timeslice.
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskYIELD();
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allows the application designer to add background functionality
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			without the overhead of a separate task.
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationIdleHook();
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		user defined low power mode	implementations require
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			test of the expected idle time is performed without the
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			valid. */
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskSuspendAll();
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					time can be sampled again, and this time its value can
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 64


3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be used. */
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if the application does not want
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) xTaskResumeAll();
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupts. */
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 65


3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = NULL;
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pvReturn;
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 66


3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the calling task. */
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	using list2. */
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TCB_t *pxTCB;
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		being called too often in the idle task. */
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 67


3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		state is just set to whatever is passed in. */
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( eState != eInvalid )
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 68


3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( eState == eSuspended )
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						vTaskSuspendAll();
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) xTaskResumeAll();
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 69


3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 116              		.loc 1 3640 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL9:
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulCount = 0U;
 122              		.loc 1 3641 0
 123 0000 0023     		movs	r3, #0
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 124              		.loc 1 3643 0
 125 0002 01E0     		b	.L15
 126              	.LVL10:
 127              	.L16:
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
 128              		.loc 1 3645 0
 129 0004 0130     		adds	r0, r0, #1
 130              	.LVL11:
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulCount++;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 70


 131              		.loc 1 3646 0
 132 0006 0133     		adds	r3, r3, #1
 133              	.LVL12:
 134              	.L15:
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 135              		.loc 1 3643 0
 136 0008 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 137 000a A52A     		cmp	r2, #165
 138 000c FAD0     		beq	.L16
 139              	.LVL13:
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 140              		.loc 1 3652 0
 141 000e C3F38F00 		ubfx	r0, r3, #2, #16
 142              	.LVL14:
 143 0012 7047     		bx	lr
 144              		.cfi_endproc
 145              	.LFE180:
 146              		.size	prvTaskCheckFreeStackSpace, .-prvTaskCheckFreeStackSpace
 147              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 148              		.align	2
 149              		.thumb
 150              		.thumb_func
 151              		.type	prvResetNextTaskUnblockTime, %function
 152              	prvResetNextTaskUnblockTime:
 153              	.LFB182:
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 71


3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the stack and TCB. */
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			check what was statically allocated before trying to free the
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			memory. */
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be freed. */
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				only memory that must be freed. */
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing needs to be freed. */
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 72


3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 154              		.loc 1 3742 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 159              		.loc 1 3745 0
 160 0000 094B     		ldr	r3, .L22
 161 0002 9B6A     		ldr	r3, [r3, #40]
 162 0004 1B68     		ldr	r3, [r3]
 163 0006 0BB9     		cbnz	r3, .L21
 164 0008 0123     		movs	r3, #1
 165 000a 00E0     		b	.L18
 166              	.L21:
 167 000c 0023     		movs	r3, #0
 168              	.L18:
 169              		.loc 1 3745 0 is_stmt 0 discriminator 4
 170 000e 23B1     		cbz	r3, .L19
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		there is an item in the delayed list. */
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 171              		.loc 1 3751 0 is_stmt 1
 172 0010 4FF0FF32 		mov	r2, #-1
 173 0014 044B     		ldr	r3, .L22
 174 0016 DA62     		str	r2, [r3, #44]
 175 0018 7047     		bx	lr
 176              	.L19:
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from the Blocked state. */
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 177              		.loc 1 3759 0
 178 001a 034B     		ldr	r3, .L22
 179 001c 9A6A     		ldr	r2, [r3, #40]
 180 001e D268     		ldr	r2, [r2, #12]
 181 0020 D268     		ldr	r2, [r2, #12]
 182              	.LVL15:
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 183              		.loc 1 3760 0
 184 0022 5268     		ldr	r2, [r2, #4]
 185              	.LVL16:
 186 0024 DA62     		str	r2, [r3, #44]
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 73


 187 0026 7047     		bx	lr
 188              	.L23:
 189              		.align	2
 190              	.L22:
 191 0028 00000000 		.word	.LANCHOR0
 192              		.cfi_endproc
 193              	.LFE182:
 194              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 195              		.section	.text.prvDeleteTCB,"ax",%progbits
 196              		.align	2
 197              		.thumb
 198              		.thumb_func
 199              		.type	prvDeleteTCB, %function
 200              	prvDeleteTCB:
 201              	.LFB181:
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 202              		.loc 1 3688 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              	.LVL17:
 207 0000 10B5     		push	{r4, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
 211 0002 0446     		mov	r4, r0
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
 212              		.loc 1 3706 0
 213 0004 006B     		ldr	r0, [r0, #48]
 214              	.LVL18:
 215 0006 FFF7FEFF 		bl	vPortFree
 216              	.LVL19:
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 217              		.loc 1 3707 0
 218 000a 2046     		mov	r0, r4
 219 000c FFF7FEFF 		bl	vPortFree
 220              	.LVL20:
 221 0010 10BD     		pop	{r4, pc}
 222              		.cfi_endproc
 223              	.LFE181:
 224              		.size	prvDeleteTCB, .-prvDeleteTCB
 225 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 226              		.align	2
 227              		.thumb
 228              		.thumb_func
 229              		.type	prvInitialiseNewTask, %function
 230              	prvInitialiseNewTask:
 231              	.LFB138:
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 232              		.loc 1 831 0
 233              		.cfi_startproc
 234              		@ args = 16, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL21:
 237 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 238              		.cfi_def_cfa_offset 32
 239              		.cfi_offset 4, -32
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 74


 240              		.cfi_offset 5, -28
 241              		.cfi_offset 6, -24
 242              		.cfi_offset 7, -20
 243              		.cfi_offset 8, -16
 244              		.cfi_offset 9, -12
 245              		.cfi_offset 10, -8
 246              		.cfi_offset 14, -4
 247 0004 8246     		mov	r10, r0
 248 0006 8946     		mov	r9, r1
 249 0008 1546     		mov	r5, r2
 250 000a 9846     		mov	r8, r3
 251 000c 089F     		ldr	r7, [sp, #32]
 252 000e 099E     		ldr	r6, [sp, #36]
 253 0010 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 254              		.loc 1 853 0
 255 0012 9200     		lsls	r2, r2, #2
 256              	.LVL22:
 257 0014 A521     		movs	r1, #165
 258              	.LVL23:
 259 0016 206B     		ldr	r0, [r4, #48]
 260              	.LVL24:
 261 0018 FFF7FEFF 		bl	memset
 262              	.LVL25:
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 263              		.loc 1 863 0
 264 001c 236B     		ldr	r3, [r4, #48]
 265 001e 05F18042 		add	r2, r5, #1073741824
 266 0022 013A     		subs	r2, r2, #1
 267 0024 03EB8205 		add	r5, r3, r2, lsl #2
 268              	.LVL26:
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 269              		.loc 1 864 0
 270 0028 25F00705 		bic	r5, r5, #7
 271              	.LVL27:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 272              		.loc 1 891 0
 273 002c 0023     		movs	r3, #0
 274 002e 08E0     		b	.L27
 275              	.LVL28:
 276              	.L29:
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277              		.loc 1 893 0
 278 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 279 0034 E218     		adds	r2, r4, r3
 280 0036 82F83410 		strb	r1, [r2, #52]
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 281              		.loc 1 898 0
 282 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 283 003e 12B1     		cbz	r2, .L28
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 284              		.loc 1 891 0 discriminator 2
 285 0040 0133     		adds	r3, r3, #1
 286              	.LVL29:
 287              	.L27:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 288              		.loc 1 891 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 75


 289 0042 0F2B     		cmp	r3, #15
 290 0044 F4D9     		bls	.L29
 291              	.L28:
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 292              		.loc 1 910 0 is_stmt 1
 293 0046 0023     		movs	r3, #0
 294              	.LVL30:
 295 0048 84F84330 		strb	r3, [r4, #67]
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 296              		.loc 1 914 0
 297 004c 062F     		cmp	r7, #6
 298 004e 00D9     		bls	.L30
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 299              		.loc 1 916 0
 300 0050 0627     		movs	r7, #6
 301              	.L30:
 302              	.LVL31:
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 303              		.loc 1 923 0
 304 0052 E762     		str	r7, [r4, #44]
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 305              		.loc 1 931 0
 306 0054 201D     		adds	r0, r4, #4
 307 0056 FFF7FEFF 		bl	vListInitialiseItem
 308              	.LVL32:
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309              		.loc 1 932 0
 310 005a 04F11800 		add	r0, r4, #24
 311 005e FFF7FEFF 		bl	vListInitialiseItem
 312              	.LVL33:
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313              		.loc 1 936 0
 314 0062 2461     		str	r4, [r4, #16]
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 315              		.loc 1 939 0
 316 0064 C7F10703 		rsb	r3, r7, #7
 317 0068 A361     		str	r3, [r4, #24]
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 318              		.loc 1 940 0
 319 006a 6462     		str	r4, [r4, #36]
 320              	.LVL34:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 321              		.loc 1 973 0
 322 006c 0023     		movs	r3, #0
 323 006e 06E0     		b	.L31
 324              	.LVL35:
 325              	.L32:
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 326              		.loc 1 975 0 discriminator 3
 327 0070 03F11202 		add	r2, r3, #18
 328 0074 04EB8202 		add	r2, r4, r2, lsl #2
 329 0078 0021     		movs	r1, #0
 330 007a 5160     		str	r1, [r2, #4]
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 331              		.loc 1 973 0 discriminator 3
 332 007c 0133     		adds	r3, r3, #1
 333              	.LVL36:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 76


 334              	.L31:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 335              		.loc 1 973 0 is_stmt 0 discriminator 1
 336 007e 042B     		cmp	r3, #4
 337 0080 F6D9     		bls	.L32
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 338              		.loc 1 982 0 is_stmt 1
 339 0082 0023     		movs	r3, #0
 340              	.LVL37:
 341 0084 2366     		str	r3, [r4, #96]
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 342              		.loc 1 983 0
 343 0086 84F86430 		strb	r3, [r4, #100]
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 344              		.loc 1 1010 0
 345 008a 4246     		mov	r2, r8
 346 008c 5146     		mov	r1, r10
 347 008e 2846     		mov	r0, r5
 348 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 349              	.LVL38:
 350 0094 2060     		str	r0, [r4]
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 351              		.loc 1 1014 0
 352 0096 06B1     		cbz	r6, .L26
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 353              		.loc 1 1018 0
 354 0098 3460     		str	r4, [r6]
 355              	.L26:
 356 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 357              		.cfi_endproc
 358              	.LFE138:
 359              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 360 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 361              		.align	2
 362              		.thumb
 363              		.thumb_func
 364              		.type	prvInitialiseTaskLists, %function
 365              	prvInitialiseTaskLists:
 366              	.LFB176:
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
 367              		.loc 1 3448 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 70B5     		push	{r4, r5, r6, lr}
 372              		.cfi_def_cfa_offset 16
 373              		.cfi_offset 4, -16
 374              		.cfi_offset 5, -12
 375              		.cfi_offset 6, -8
 376              		.cfi_offset 14, -4
 377              	.LVL39:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 378              		.loc 1 3451 0
 379 0002 0024     		movs	r4, #0
 380 0004 07E0     		b	.L37
 381              	.LVL40:
 382              	.L38:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 77


3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 383              		.loc 1 3453 0 discriminator 3
 384 0006 04EB8402 		add	r2, r4, r4, lsl #2
 385 000a 9300     		lsls	r3, r2, #2
 386 000c 1048     		ldr	r0, .L40
 387 000e 1844     		add	r0, r0, r3
 388 0010 FFF7FEFF 		bl	vListInitialise
 389              	.LVL41:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 390              		.loc 1 3451 0 discriminator 3
 391 0014 0134     		adds	r4, r4, #1
 392              	.LVL42:
 393              	.L37:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 394              		.loc 1 3451 0 is_stmt 0 discriminator 1
 395 0016 062C     		cmp	r4, #6
 396 0018 F5D9     		bls	.L38
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 397              		.loc 1 3456 0 is_stmt 1
 398 001a 0E4C     		ldr	r4, .L40+4
 399              	.LVL43:
 400 001c 04F1BC06 		add	r6, r4, #188
 401 0020 3046     		mov	r0, r6
 402 0022 FFF7FEFF 		bl	vListInitialise
 403              	.LVL44:
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 404              		.loc 1 3457 0
 405 0026 04F1D005 		add	r5, r4, #208
 406 002a 2846     		mov	r0, r5
 407 002c FFF7FEFF 		bl	vListInitialise
 408              	.LVL45:
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409              		.loc 1 3458 0
 410 0030 04F11400 		add	r0, r4, #20
 411 0034 FFF7FEFF 		bl	vListInitialise
 412              	.LVL46:
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 413              		.loc 1 3462 0
 414 0038 04F1E400 		add	r0, r4, #228
 415 003c FFF7FEFF 		bl	vListInitialise
 416              	.LVL47:
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 417              		.loc 1 3468 0
 418 0040 2046     		mov	r0, r4
 419 0042 FFF7FEFF 		bl	vListInitialise
 420              	.LVL48:
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 421              		.loc 1 3474 0
 422 0046 A662     		str	r6, [r4, #40]
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 423              		.loc 1 3475 0
 424 0048 C4F8F850 		str	r5, [r4, #248]
 425 004c 70BD     		pop	{r4, r5, r6, pc}
 426              	.L41:
 427 004e 00BF     		.align	2
 428              	.L40:
 429 0050 30000000 		.word	.LANCHOR0+48
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 78


 430 0054 00000000 		.word	.LANCHOR0
 431              		.cfi_endproc
 432              	.LFE176:
 433              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 434              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 435              		.align	2
 436              		.thumb
 437              		.thumb_func
 438              		.type	prvAddNewTaskToReadyList, %function
 439              	prvAddNewTaskToReadyList:
 440              	.LFB139:
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 441              		.loc 1 1028 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              	.LVL49:
 446 0000 38B5     		push	{r3, r4, r5, lr}
 447              		.cfi_def_cfa_offset 16
 448              		.cfi_offset 3, -16
 449              		.cfi_offset 4, -12
 450              		.cfi_offset 5, -8
 451              		.cfi_offset 14, -4
 452 0002 0446     		mov	r4, r0
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 453              		.loc 1 1031 0
 454 0004 FFF7FEFF 		bl	vPortEnterCritical
 455              	.LVL50:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 456              		.loc 1 1033 0
 457 0008 264B     		ldr	r3, .L48
 458 000a D3F8FC20 		ldr	r2, [r3, #252]
 459 000e 0132     		adds	r2, r2, #1
 460 0010 C3F8FC20 		str	r2, [r3, #252]
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 461              		.loc 1 1034 0
 462 0014 D3F80031 		ldr	r3, [r3, #256]
 463 0018 4BB9     		cbnz	r3, .L43
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464              		.loc 1 1038 0
 465 001a 224B     		ldr	r3, .L48
 466 001c C3F80041 		str	r4, [r3, #256]
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 467              		.loc 1 1040 0
 468 0020 D3F8FC30 		ldr	r3, [r3, #252]
 469 0024 012B     		cmp	r3, #1
 470 0026 10D1     		bne	.L44
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 471              		.loc 1 1045 0
 472 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 473              	.LVL51:
 474 002c 0DE0     		b	.L44
 475              	.L43:
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 476              		.loc 1 1057 0
 477 002e 1D4B     		ldr	r3, .L48
 478 0030 D3F80431 		ldr	r3, [r3, #260]
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 79


 479 0034 4BB9     		cbnz	r3, .L44
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 480              		.loc 1 1059 0
 481 0036 1B4B     		ldr	r3, .L48
 482 0038 D3F80031 		ldr	r3, [r3, #256]
 483 003c DA6A     		ldr	r2, [r3, #44]
 484 003e E36A     		ldr	r3, [r4, #44]
 485 0040 9A42     		cmp	r2, r3
 486 0042 02D8     		bhi	.L44
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 487              		.loc 1 1061 0
 488 0044 174B     		ldr	r3, .L48
 489 0046 C3F80041 		str	r4, [r3, #256]
 490              	.L44:
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491              		.loc 1 1074 0
 492 004a 164A     		ldr	r2, .L48
 493 004c D2F80831 		ldr	r3, [r2, #264]
 494 0050 0133     		adds	r3, r3, #1
 495 0052 C2F80831 		str	r3, [r2, #264]
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 496              		.loc 1 1079 0
 497 0056 6364     		str	r3, [r4, #68]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 498              		.loc 1 1084 0
 499 0058 E36A     		ldr	r3, [r4, #44]
 500 005a D2F80C21 		ldr	r2, [r2, #268]
 501 005e 9342     		cmp	r3, r2
 502 0060 02D9     		bls	.L45
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503              		.loc 1 1084 0 is_stmt 0 discriminator 1
 504 0062 104A     		ldr	r2, .L48
 505 0064 C2F80C31 		str	r3, [r2, #268]
 506              	.L45:
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 507              		.loc 1 1084 0 discriminator 3
 508 0068 0E4D     		ldr	r5, .L48
 509 006a 05F13000 		add	r0, r5, #48
 510 006e 03EB8303 		add	r3, r3, r3, lsl #2
 511 0072 9A00     		lsls	r2, r3, #2
 512 0074 211D     		adds	r1, r4, #4
 513 0076 1044     		add	r0, r0, r2
 514 0078 FFF7FEFF 		bl	vListInsertEnd
 515              	.LVL52:
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516              		.loc 1 1088 0 is_stmt 1 discriminator 3
 517 007c FFF7FEFF 		bl	vPortExitCritical
 518              	.LVL53:
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 519              		.loc 1 1090 0 discriminator 3
 520 0080 D5F80431 		ldr	r3, [r5, #260]
 521 0084 6BB1     		cbz	r3, .L42
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 522              		.loc 1 1094 0
 523 0086 D5F80031 		ldr	r3, [r5, #256]
 524 008a DA6A     		ldr	r2, [r3, #44]
 525 008c E36A     		ldr	r3, [r4, #44]
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 80


 526 008e 9A42     		cmp	r2, r3
 527 0090 07D2     		bcs	.L42
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 528              		.loc 1 1096 0
 529 0092 4FF08052 		mov	r2, #268435456
 530 0096 044B     		ldr	r3, .L48+4
 531 0098 1A60     		str	r2, [r3]
 532              		.syntax unified
 533              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 534 009a BFF34F8F 		dsb
 535              	@ 0 "" 2
 536              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 537 009e BFF36F8F 		isb
 538              	@ 0 "" 2
 539              		.thumb
 540              		.syntax unified
 541              	.L42:
 542 00a2 38BD     		pop	{r3, r4, r5, pc}
 543              	.LVL54:
 544              	.L49:
 545              		.align	2
 546              	.L48:
 547 00a4 00000000 		.word	.LANCHOR0
 548 00a8 04ED00E0 		.word	-536810236
 549              		.cfi_endproc
 550              	.LFE139:
 551              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 552              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 553              		.align	2
 554              		.thumb
 555              		.thumb_func
 556              		.type	prvCheckTasksWaitingTermination, %function
 557              	prvCheckTasksWaitingTermination:
 558              	.LFB177:
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 559              		.loc 1 3480 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563 0000 38B5     		push	{r3, r4, r5, lr}
 564              		.cfi_def_cfa_offset 16
 565              		.cfi_offset 3, -16
 566              		.cfi_offset 4, -12
 567              		.cfi_offset 5, -8
 568              		.cfi_offset 14, -4
 569              	.LBB98:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 570              		.loc 1 3490 0
 571 0002 17E0     		b	.L51
 572              	.L52:
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 573              		.loc 1 3492 0
 574 0004 FFF7FEFF 		bl	vPortEnterCritical
 575              	.LVL55:
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 576              		.loc 1 3494 0
 577 0008 0D4C     		ldr	r4, .L54
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 81


 578 000a D4F8F030 		ldr	r3, [r4, #240]
 579 000e DD68     		ldr	r5, [r3, #12]
 580              	.LVL56:
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 581              		.loc 1 3495 0
 582 0010 281D     		adds	r0, r5, #4
 583 0012 FFF7FEFF 		bl	uxListRemove
 584              	.LVL57:
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 585              		.loc 1 3496 0
 586 0016 D4F8FC30 		ldr	r3, [r4, #252]
 587 001a 013B     		subs	r3, r3, #1
 588 001c C4F8FC30 		str	r3, [r4, #252]
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 589              		.loc 1 3497 0
 590 0020 D4F81031 		ldr	r3, [r4, #272]
 591 0024 013B     		subs	r3, r3, #1
 592 0026 C4F81031 		str	r3, [r4, #272]
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 593              		.loc 1 3499 0
 594 002a FFF7FEFF 		bl	vPortExitCritical
 595              	.LVL58:
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 596              		.loc 1 3501 0
 597 002e 2846     		mov	r0, r5
 598 0030 FFF7FEFF 		bl	prvDeleteTCB
 599              	.LVL59:
 600              	.L51:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 601              		.loc 1 3490 0
 602 0034 024B     		ldr	r3, .L54
 603 0036 D3F81031 		ldr	r3, [r3, #272]
 604 003a 002B     		cmp	r3, #0
 605 003c E2D1     		bne	.L52
 606              	.LBE98:
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 607              		.loc 1 3505 0
 608 003e 38BD     		pop	{r3, r4, r5, pc}
 609              	.L55:
 610              		.align	2
 611              	.L54:
 612 0040 00000000 		.word	.LANCHOR0
 613              		.cfi_endproc
 614              	.LFE177:
 615              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 616              		.section	.text.prvIdleTask,"ax",%progbits
 617              		.align	2
 618              		.thumb
 619              		.thumb_func
 620              		.type	prvIdleTask, %function
 621              	prvIdleTask:
 622              	.LFB173:
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
 623              		.loc 1 3236 0
 624              		.cfi_startproc
 625              		@ Volatile: function does not return.
 626              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 82


 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              	.LVL60:
 629 0000 08B5     		push	{r3, lr}
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 3, -8
 632              		.cfi_offset 14, -4
 633              	.LVL61:
 634              	.L57:
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635              		.loc 1 3252 0
 636 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 637              	.LVL62:
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 638              		.loc 1 3275 0
 639 0006 064B     		ldr	r3, .L60
 640 0008 1B6B     		ldr	r3, [r3, #48]
 641 000a 012B     		cmp	r3, #1
 642 000c F9D9     		bls	.L57
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 643              		.loc 1 3277 0
 644 000e 4FF08052 		mov	r2, #268435456
 645 0012 044B     		ldr	r3, .L60+4
 646 0014 1A60     		str	r2, [r3]
 647              		.syntax unified
 648              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 649 0016 BFF34F8F 		dsb
 650              	@ 0 "" 2
 651              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 652 001a BFF36F8F 		isb
 653              	@ 0 "" 2
 654              		.thumb
 655              		.syntax unified
 656 001e F0E7     		b	.L57
 657              	.L61:
 658              		.align	2
 659              	.L60:
 660 0020 00000000 		.word	.LANCHOR0
 661 0024 04ED00E0 		.word	-536810236
 662              		.cfi_endproc
 663              	.LFE173:
 664              		.size	prvIdleTask, .-prvIdleTask
 665              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 666              		.align	2
 667              		.thumb
 668              		.thumb_func
 669              		.type	prvAddCurrentTaskToDelayedList, %function
 670              	prvAddCurrentTaskToDelayedList:
 671              	.LFB194:
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 83


3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		individual execution thread. */
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 84


3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not being used for anything else. */
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to be moved into a new list. */
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Just inherit the priority. */
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Inheritance occurred. */
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					not been the case. */
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 85


3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			be the running state task. */
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task? */
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the holding task from the ready list. */
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new	ready list. */
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 86


3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					running to give back the mutex. */
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This is only actually required in the corner case whereby
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					in an order different to that in which they were taken.
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a task is waiting on it or not. */
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			one mutex. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 87


3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Does the priority need to change? */
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					its own priority. */
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority to facilitate determining the subject task's
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					being used for anything else. */
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					from its current state list if it is in the Ready state as
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the task's priority is going to change and there is one
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready list per priority. */
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 88


4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskEnterCritical( void )
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			critical section. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskExitCritical( void )
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 89


4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Start by copying the entire string. */
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		printed out. */
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Terminate. */
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return the new end of string. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 90


4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cStatus;
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays task names, states and stack usage.
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * snprintf() implementation!).
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskList().
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 91


4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										to prevent static checking errors. */
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										cStatus = 0x00;
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				can be printed in tabular form more easily. */
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the rest of the string. */
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 92


4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * in both absolute and percentage terms.
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a full snprintf() implementation!).
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* For percentage calculations. */
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulTotalTime /= 100UL;
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulTotalTime > 0 )
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Write the task name to the string, padding with
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					easily. */
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 93


4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 94


4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queues and semaphores. */
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxReturn;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxCurrentTCB;
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 95


4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulReturn != 0UL )
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ulReturn;
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				clear the value to zero. */
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 96


4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				have changed. */
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			unblocked because of a timeout. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was not received. */
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was already pending or a notification was
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				received while the task was waiting. */
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 97


4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction:
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 98


4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY();
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					because it will automatically get reset to a new value when
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					earliest possible time. */
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 99


4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 100


4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction :
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 101


4796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			semaphore. */
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 102


4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
4896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		its notification state cleared. */
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
4908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 103


4910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
4912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 672              		.loc 1 4924 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              	.LVL63:
 677 0000 70B5     		push	{r4, r5, r6, lr}
 678              		.cfi_def_cfa_offset 16
 679              		.cfi_offset 4, -16
 680              		.cfi_offset 5, -12
 681              		.cfi_offset 6, -8
 682              		.cfi_offset 14, -4
 683 0002 0446     		mov	r4, r0
 684 0004 0E46     		mov	r6, r1
4925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTimeToWake;
4926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 685              		.loc 1 4926 0
 686 0006 174B     		ldr	r3, .L67
 687 0008 D3F81451 		ldr	r5, [r3, #276]
 688              	.LVL64:
4927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		when the task leaves the Blocked state. */
4933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
4936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	as the same list item is used for both lists. */
4939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 689              		.loc 1 4939 0
 690 000c D3F80001 		ldr	r0, [r3, #256]
 691              	.LVL65:
 692 0010 0430     		adds	r0, r0, #4
 693 0012 FFF7FEFF 		bl	uxListRemove
 694              	.LVL66:
4940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 104


4944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
4946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 695              		.loc 1 4952 0
 696 0016 B4F1FF3F 		cmp	r4, #-1
 697 001a 07D1     		bne	.L63
 698              		.loc 1 4952 0 is_stmt 0 discriminator 1
 699 001c 36B1     		cbz	r6, .L63
4953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			indefinitely. */
4957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 700              		.loc 1 4957 0 is_stmt 1
 701 001e 1148     		ldr	r0, .L67
 702 0020 D0F80011 		ldr	r1, [r0, #256]
 703 0024 0431     		adds	r1, r1, #4
 704 0026 FFF7FEFF 		bl	vListInsertEnd
 705              	.LVL67:
 706 002a 70BD     		pop	{r4, r5, r6, pc}
 707              	.LVL68:
 708              	.L63:
4958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			kernel will manage it correctly. */
4964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 709              		.loc 1 4964 0
 710 002c 2C44     		add	r4, r4, r5
 711              	.LVL69:
4965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 712              		.loc 1 4967 0
 713 002e 0D4B     		ldr	r3, .L67
 714 0030 D3F80031 		ldr	r3, [r3, #256]
 715 0034 5C60     		str	r4, [r3, #4]
4968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 716              		.loc 1 4969 0
 717 0036 A542     		cmp	r5, r4
 718 0038 08D9     		bls	.L65
4970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list. */
4973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 719              		.loc 1 4973 0
 720 003a 0A4B     		ldr	r3, .L67
 721 003c D3F8F800 		ldr	r0, [r3, #248]
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 105


 722 0040 D3F80011 		ldr	r1, [r3, #256]
 723 0044 0431     		adds	r1, r1, #4
 724 0046 FFF7FEFF 		bl	vListInsert
 725              	.LVL70:
 726 004a 70BD     		pop	{r4, r5, r6, pc}
 727              	.LVL71:
 728              	.L65:
4974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
4979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 729              		.loc 1 4979 0
 730 004c 054D     		ldr	r5, .L67
 731              	.LVL72:
 732 004e A86A     		ldr	r0, [r5, #40]
 733 0050 D5F80011 		ldr	r1, [r5, #256]
 734 0054 0431     		adds	r1, r1, #4
 735 0056 FFF7FEFF 		bl	vListInsert
 736              	.LVL73:
4980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				needs to be updated too. */
4984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 737              		.loc 1 4984 0
 738 005a EB6A     		ldr	r3, [r5, #44]
 739 005c 9C42     		cmp	r4, r3
 740 005e 00D2     		bcs	.L62
4985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 741              		.loc 1 4986 0
 742 0060 EC62     		str	r4, [r5, #44]
 743              	.L62:
 744 0062 70BD     		pop	{r4, r5, r6, pc}
 745              	.LVL74:
 746              	.L68:
 747              		.align	2
 748              	.L67:
 749 0064 00000000 		.word	.LANCHOR0
 750              		.cfi_endproc
 751              	.LFE194:
 752              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 753              		.section	.text.prvWriteNameToBuffer,"ax",%progbits
 754              		.align	2
 755              		.thumb
 756              		.thumb_func
 757              		.type	prvWriteNameToBuffer, %function
 758              	prvWriteNameToBuffer:
 759              	.LFB185:
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
 760              		.loc 1 4145 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              	.LVL75:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 106


 765 0000 10B5     		push	{r4, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 4, -8
 768              		.cfi_offset 14, -4
 769 0002 0446     		mov	r4, r0
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 770              		.loc 1 4149 0
 771 0004 FFF7FEFF 		bl	strcpy
 772              	.LVL76:
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 773              		.loc 1 4153 0
 774 0008 2046     		mov	r0, r4
 775 000a FFF7FEFF 		bl	strlen
 776              	.LVL77:
 777 000e 02E0     		b	.L70
 778              	.L71:
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 779              		.loc 1 4155 0 discriminator 3
 780 0010 2023     		movs	r3, #32
 781 0012 2354     		strb	r3, [r4, r0]
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 782              		.loc 1 4153 0 discriminator 3
 783 0014 0130     		adds	r0, r0, #1
 784              	.LVL78:
 785              	.L70:
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 786              		.loc 1 4153 0 is_stmt 0 discriminator 1
 787 0016 0E28     		cmp	r0, #14
 788 0018 FAD9     		bls	.L71
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 789              		.loc 1 4159 0 is_stmt 1
 790 001a 0023     		movs	r3, #0
 791 001c 2354     		strb	r3, [r4, r0]
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 792              		.loc 1 4163 0
 793 001e 2044     		add	r0, r0, r4
 794              	.LVL79:
 795 0020 10BD     		pop	{r4, pc}
 796              		.cfi_endproc
 797              	.LFE185:
 798              		.size	prvWriteNameToBuffer, .-prvWriteNameToBuffer
 799 0022 00BF     		.section	.text.xTaskCreate,"ax",%progbits
 800              		.align	2
 801              		.global	xTaskCreate
 802              		.thumb
 803              		.thumb_func
 804              		.type	xTaskCreate, %function
 805              	xTaskCreate:
 806              	.LFB137:
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 807              		.loc 1 738 0
 808              		.cfi_startproc
 809              		@ args = 8, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              	.LVL80:
 812 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 813              		.cfi_def_cfa_offset 28
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 107


 814              		.cfi_offset 4, -28
 815              		.cfi_offset 5, -24
 816              		.cfi_offset 6, -20
 817              		.cfi_offset 7, -16
 818              		.cfi_offset 8, -12
 819              		.cfi_offset 9, -8
 820              		.cfi_offset 14, -4
 821 0004 85B0     		sub	sp, sp, #20
 822              		.cfi_def_cfa_offset 48
 823 0006 0646     		mov	r6, r0
 824 0008 0F46     		mov	r7, r1
 825 000a 1546     		mov	r5, r2
 826 000c 9846     		mov	r8, r3
 827              	.LBB99:
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 828              		.loc 1 772 0
 829 000e 9000     		lsls	r0, r2, #2
 830              	.LVL81:
 831 0010 FFF7FEFF 		bl	pvPortMalloc
 832              	.LVL82:
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 833              		.loc 1 774 0
 834 0014 60B1     		cbz	r0, .L77
 835 0016 8146     		mov	r9, r0
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 836              		.loc 1 777 0
 837 0018 6820     		movs	r0, #104
 838              	.LVL83:
 839 001a FFF7FEFF 		bl	pvPortMalloc
 840              	.LVL84:
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 841              		.loc 1 779 0
 842 001e 0446     		mov	r4, r0
 843 0020 10B1     		cbz	r0, .L75
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 844              		.loc 1 782 0
 845 0022 C0F83090 		str	r9, [r0, #48]
 846 0026 04E0     		b	.L74
 847              	.L75:
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 848              		.loc 1 788 0
 849 0028 4846     		mov	r0, r9
 850              	.LVL85:
 851 002a FFF7FEFF 		bl	vPortFree
 852              	.LVL86:
 853 002e 00E0     		b	.L74
 854              	.LVL87:
 855              	.L77:
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 856              		.loc 1 793 0
 857 0030 0024     		movs	r4, #0
 858              	.LVL88:
 859              	.L74:
 860              	.LBE99:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 861              		.loc 1 798 0
 862 0032 8CB1     		cbz	r4, .L78
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 108


 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 863              		.loc 1 808 0
 864 0034 0023     		movs	r3, #0
 865 0036 0393     		str	r3, [sp, #12]
 866 0038 0294     		str	r4, [sp, #8]
 867 003a 0D9B     		ldr	r3, [sp, #52]
 868 003c 0193     		str	r3, [sp, #4]
 869 003e 0C9B     		ldr	r3, [sp, #48]
 870 0040 0093     		str	r3, [sp]
 871 0042 4346     		mov	r3, r8
 872 0044 2A46     		mov	r2, r5
 873 0046 3946     		mov	r1, r7
 874 0048 3046     		mov	r0, r6
 875 004a FFF7FEFF 		bl	prvInitialiseNewTask
 876              	.LVL89:
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 877              		.loc 1 809 0
 878 004e 2046     		mov	r0, r4
 879 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 880              	.LVL90:
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 881              		.loc 1 810 0
 882 0054 0120     		movs	r0, #1
 883 0056 01E0     		b	.L76
 884              	.LVL91:
 885              	.L78:
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 886              		.loc 1 814 0
 887 0058 4FF0FF30 		mov	r0, #-1
 888              	.L76:
 889              	.LVL92:
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890              		.loc 1 818 0
 891 005c 05B0     		add	sp, sp, #20
 892              		.cfi_def_cfa_offset 28
 893              		@ sp needed
 894 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 895              		.cfi_endproc
 896              	.LFE137:
 897              		.size	xTaskCreate, .-xTaskCreate
 898 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 899              		.align	2
 900              		.global	vTaskDelete
 901              		.thumb
 902              		.thumb_func
 903              		.type	vTaskDelete, %function
 904              	vTaskDelete:
 905              	.LFB140:
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 906              		.loc 1 1113 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              	.LVL93:
 911 0000 70B5     		push	{r4, r5, r6, lr}
 912              		.cfi_def_cfa_offset 16
 913              		.cfi_offset 4, -16
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 109


 914              		.cfi_offset 5, -12
 915              		.cfi_offset 6, -8
 916              		.cfi_offset 14, -4
 917 0002 0446     		mov	r4, r0
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 918              		.loc 1 1116 0
 919 0004 FFF7FEFF 		bl	vPortEnterCritical
 920              	.LVL94:
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 921              		.loc 1 1120 0
 922 0008 14B9     		cbnz	r4, .L81
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923              		.loc 1 1120 0 is_stmt 0 discriminator 1
 924 000a 274B     		ldr	r3, .L89
 925 000c D3F80041 		ldr	r4, [r3, #256]
 926              	.LVL95:
 927              	.L81:
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 928              		.loc 1 1123 0 is_stmt 1 discriminator 4
 929 0010 261D     		adds	r6, r4, #4
 930 0012 3046     		mov	r0, r6
 931 0014 FFF7FEFF 		bl	uxListRemove
 932              	.LVL96:
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 933              		.loc 1 1133 0 discriminator 4
 934 0018 A36A     		ldr	r3, [r4, #40]
 935 001a 1BB1     		cbz	r3, .L82
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 936              		.loc 1 1135 0
 937 001c 04F11800 		add	r0, r4, #24
 938 0020 FFF7FEFF 		bl	uxListRemove
 939              	.LVL97:
 940              	.L82:
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 941              		.loc 1 1146 0
 942 0024 204B     		ldr	r3, .L89
 943 0026 D3F80821 		ldr	r2, [r3, #264]
 944 002a 0132     		adds	r2, r2, #1
 945 002c C3F80821 		str	r2, [r3, #264]
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 946              		.loc 1 1148 0
 947 0030 D3F80031 		ldr	r3, [r3, #256]
 948 0034 9C42     		cmp	r4, r3
 949 0036 0BD1     		bne	.L83
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 950              		.loc 1 1155 0
 951 0038 1B4D     		ldr	r5, .L89
 952 003a 3146     		mov	r1, r6
 953 003c 05F1E400 		add	r0, r5, #228
 954 0040 FFF7FEFF 		bl	vListInsertEnd
 955              	.LVL98:
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 956              		.loc 1 1160 0
 957 0044 D5F81031 		ldr	r3, [r5, #272]
 958 0048 0133     		adds	r3, r3, #1
 959 004a C5F81031 		str	r3, [r5, #272]
 960 004e 0AE0     		b	.L84
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 110


 961              	.L83:
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 962              		.loc 1 1171 0
 963 0050 154A     		ldr	r2, .L89
 964 0052 D2F8FC30 		ldr	r3, [r2, #252]
 965 0056 013B     		subs	r3, r3, #1
 966 0058 C2F8FC30 		str	r3, [r2, #252]
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 967              		.loc 1 1172 0
 968 005c 2046     		mov	r0, r4
 969 005e FFF7FEFF 		bl	prvDeleteTCB
 970              	.LVL99:
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 971              		.loc 1 1176 0
 972 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 973              	.LVL100:
 974              	.L84:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 975              		.loc 1 1181 0
 976 0066 FFF7FEFF 		bl	vPortExitCritical
 977              	.LVL101:
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 978              		.loc 1 1185 0
 979 006a 0F4B     		ldr	r3, .L89
 980 006c D3F80431 		ldr	r3, [r3, #260]
 981 0070 CBB1     		cbz	r3, .L80
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 982              		.loc 1 1187 0
 983 0072 0D4B     		ldr	r3, .L89
 984 0074 D3F80031 		ldr	r3, [r3, #256]
 985 0078 9C42     		cmp	r4, r3
 986 007a 14D1     		bne	.L80
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 987              		.loc 1 1189 0
 988 007c 0A4B     		ldr	r3, .L89
 989 007e D3F81831 		ldr	r3, [r3, #280]
 990 0082 43B1     		cbz	r3, .L86
 991              	.LBB100:
 992              	.LBB101:
 993              		.loc 2 156 0
 994              		.syntax unified
 995              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 996 0084 4FF03F03 			mov r3, #63												
 997 0088 83F31188 		msr basepri, r3											
 998 008c BFF36F8F 		isb														
 999 0090 BFF34F8F 		dsb														
 1000              	
 1001              	@ 0 "" 2
 1002              	.LVL102:
 1003              		.thumb
 1004              		.syntax unified
 1005              	.L87:
 1006 0094 FEE7     		b	.L87
 1007              	.L86:
 1008              	.LBE101:
 1009              	.LBE100:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 111


 1010              		.loc 1 1190 0
 1011 0096 4FF08052 		mov	r2, #268435456
 1012 009a 044B     		ldr	r3, .L89+4
 1013 009c 1A60     		str	r2, [r3]
 1014              		.syntax unified
 1015              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1016 009e BFF34F8F 		dsb
 1017              	@ 0 "" 2
 1018              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1019 00a2 BFF36F8F 		isb
 1020              	@ 0 "" 2
 1021              		.thumb
 1022              		.syntax unified
 1023              	.L80:
 1024 00a6 70BD     		pop	{r4, r5, r6, pc}
 1025              	.LVL103:
 1026              	.L90:
 1027              		.align	2
 1028              	.L89:
 1029 00a8 00000000 		.word	.LANCHOR0
 1030 00ac 04ED00E0 		.word	-536810236
 1031              		.cfi_endproc
 1032              	.LFE140:
 1033              		.size	vTaskDelete, .-vTaskDelete
 1034              		.section	.text.eTaskGetState,"ax",%progbits
 1035              		.align	2
 1036              		.global	eTaskGetState
 1037              		.thumb
 1038              		.thumb_func
 1039              		.type	eTaskGetState, %function
 1040              	eTaskGetState:
 1041              	.LFB143:
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
 1042              		.loc 1 1334 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              	.LVL104:
 1047 0000 38B5     		push	{r3, r4, r5, lr}
 1048              		.cfi_def_cfa_offset 16
 1049              		.cfi_offset 3, -16
 1050              		.cfi_offset 4, -12
 1051              		.cfi_offset 5, -8
 1052              		.cfi_offset 14, -4
 1053              	.LVL105:
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1054              		.loc 1 1339 0
 1055 0002 40B9     		cbnz	r0, .L92
 1056              	.LBB102:
 1057              	.LBB103:
 1058              		.loc 2 156 0
 1059              		.syntax unified
 1060              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1061 0004 4FF03F03 			mov r3, #63												
 1062 0008 83F31188 		msr basepri, r3											
 1063 000c BFF36F8F 		isb														
 1064 0010 BFF34F8F 		dsb														
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 112


 1065              	
 1066              	@ 0 "" 2
 1067              	.LVL106:
 1068              		.thumb
 1069              		.syntax unified
 1070              	.L93:
 1071 0014 FEE7     		b	.L93
 1072              	.L92:
 1073 0016 0546     		mov	r5, r0
 1074              	.LBE103:
 1075              	.LBE102:
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1076              		.loc 1 1341 0
 1077 0018 154B     		ldr	r3, .L103
 1078 001a D3F80031 		ldr	r3, [r3, #256]
 1079 001e 9842     		cmp	r0, r3
 1080 0020 1AD0     		beq	.L96
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1081              		.loc 1 1348 0
 1082 0022 FFF7FEFF 		bl	vPortEnterCritical
 1083              	.LVL107:
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1084              		.loc 1 1350 0
 1085 0026 6C69     		ldr	r4, [r5, #20]
 1086              	.LVL108:
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1087              		.loc 1 1352 0
 1088 0028 FFF7FEFF 		bl	vPortExitCritical
 1089              	.LVL109:
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1090              		.loc 1 1354 0
 1091 002c 104B     		ldr	r3, .L103
 1092 002e 9B6A     		ldr	r3, [r3, #40]
 1093 0030 9C42     		cmp	r4, r3
 1094 0032 13D0     		beq	.L97
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1095              		.loc 1 1354 0 is_stmt 0 discriminator 1
 1096 0034 0E4B     		ldr	r3, .L103
 1097 0036 D3F8F830 		ldr	r3, [r3, #248]
 1098 003a 9C42     		cmp	r4, r3
 1099 003c 10D0     		beq	.L98
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1100              		.loc 1 1362 0 is_stmt 1
 1101 003e 0C4B     		ldr	r3, .L103
 1102 0040 9C42     		cmp	r4, r3
 1103 0042 03D1     		bne	.L95
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1104              		.loc 1 1367 0
 1105 0044 AB6A     		ldr	r3, [r5, #40]
 1106 0046 6BB9     		cbnz	r3, .L99
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1107              		.loc 1 1369 0
 1108 0048 0320     		movs	r0, #3
 1109 004a 38BD     		pop	{r3, r4, r5, pc}
 1110              	.LVL110:
 1111              	.L95:
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 113


 1112              		.loc 1 1379 0
 1113 004c 094B     		ldr	r3, .L103+4
 1114 004e 9C42     		cmp	r4, r3
 1115 0050 0AD0     		beq	.L100
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1116              		.loc 1 1379 0 is_stmt 0 discriminator 1
 1117 0052 5CB9     		cbnz	r4, .L101
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1118              		.loc 1 1384 0 is_stmt 1
 1119 0054 0420     		movs	r0, #4
 1120 0056 38BD     		pop	{r3, r4, r5, pc}
 1121              	.LVL111:
 1122              	.L96:
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1123              		.loc 1 1344 0
 1124 0058 0020     		movs	r0, #0
 1125              	.LVL112:
 1126 005a 38BD     		pop	{r3, r4, r5, pc}
 1127              	.LVL113:
 1128              	.L97:
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1129              		.loc 1 1358 0
 1130 005c 0220     		movs	r0, #2
 1131 005e 38BD     		pop	{r3, r4, r5, pc}
 1132              	.LVL114:
 1133              	.L98:
 1134 0060 0220     		movs	r0, #2
 1135 0062 38BD     		pop	{r3, r4, r5, pc}
 1136              	.LVL115:
 1137              	.L99:
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1138              		.loc 1 1373 0
 1139 0064 0220     		movs	r0, #2
 1140 0066 38BD     		pop	{r3, r4, r5, pc}
 1141              	.LVL116:
 1142              	.L100:
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1143              		.loc 1 1384 0
 1144 0068 0420     		movs	r0, #4
 1145 006a 38BD     		pop	{r3, r4, r5, pc}
 1146              	.LVL117:
 1147              	.L101:
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1148              		.loc 1 1392 0
 1149 006c 0120     		movs	r0, #1
 1150              	.LVL118:
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1151              		.loc 1 1397 0
 1152 006e 38BD     		pop	{r3, r4, r5, pc}
 1153              	.LVL119:
 1154              	.L104:
 1155              		.align	2
 1156              	.L103:
 1157 0070 00000000 		.word	.LANCHOR0
 1158 0074 E4000000 		.word	.LANCHOR0+228
 1159              		.cfi_endproc
 1160              	.LFE143:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 114


 1161              		.size	eTaskGetState, .-eTaskGetState
 1162              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1163              		.align	2
 1164              		.global	uxTaskPriorityGet
 1165              		.thumb
 1166              		.thumb_func
 1167              		.type	uxTaskPriorityGet, %function
 1168              	uxTaskPriorityGet:
 1169              	.LFB144:
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1170              		.loc 1 1405 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              	.LVL120:
 1175 0000 10B5     		push	{r4, lr}
 1176              		.cfi_def_cfa_offset 8
 1177              		.cfi_offset 4, -8
 1178              		.cfi_offset 14, -4
 1179 0002 0446     		mov	r4, r0
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1180              		.loc 1 1409 0
 1181 0004 FFF7FEFF 		bl	vPortEnterCritical
 1182              	.LVL121:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1183              		.loc 1 1413 0
 1184 0008 14B9     		cbnz	r4, .L106
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1185              		.loc 1 1413 0 is_stmt 0 discriminator 1
 1186 000a 044B     		ldr	r3, .L108
 1187 000c D3F80041 		ldr	r4, [r3, #256]
 1188              	.LVL122:
 1189              	.L106:
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1190              		.loc 1 1414 0 is_stmt 1 discriminator 4
 1191 0010 E46A     		ldr	r4, [r4, #44]
 1192              	.LVL123:
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1193              		.loc 1 1416 0 discriminator 4
 1194 0012 FFF7FEFF 		bl	vPortExitCritical
 1195              	.LVL124:
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1196              		.loc 1 1419 0 discriminator 4
 1197 0016 2046     		mov	r0, r4
 1198 0018 10BD     		pop	{r4, pc}
 1199              	.LVL125:
 1200              	.L109:
 1201 001a 00BF     		.align	2
 1202              	.L108:
 1203 001c 00000000 		.word	.LANCHOR0
 1204              		.cfi_endproc
 1205              	.LFE144:
 1206              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 1207              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1208              		.align	2
 1209              		.global	uxTaskPriorityGetFromISR
 1210              		.thumb
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 115


 1211              		.thumb_func
 1212              		.type	uxTaskPriorityGetFromISR, %function
 1213              	uxTaskPriorityGetFromISR:
 1214              	.LFB145:
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1215              		.loc 1 1427 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219              	.LVL126:
 1220 0000 10B5     		push	{r4, lr}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 4, -8
 1223              		.cfi_offset 14, -4
 1224 0002 0446     		mov	r4, r0
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1225              		.loc 1 1447 0
 1226 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1227              	.LVL127:
 1228              	.LBB104:
 1229              	.LBB105:
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1230              		.loc 2 172 0
 1231              		.syntax unified
 1232              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1233 0008 EFF31183 			mrs r3, basepri											
 1234 000c 4FF03F02 		mov r2, #63												
 1235 0010 82F31188 		msr basepri, r2											
 1236 0014 BFF36F8F 		isb														
 1237 0018 BFF34F8F 		dsb														
 1238              	
 1239              	@ 0 "" 2
 1240              		.thumb
 1241              		.syntax unified
 1242              	.LBE105:
 1243              	.LBE104:
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1244              		.loc 1 1453 0
 1245 001c 14B9     		cbnz	r4, .L111
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1246              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1247 001e 034A     		ldr	r2, .L113
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 116


 1248 0020 D2F80041 		ldr	r4, [r2, #256]
 1249              	.LVL128:
 1250              	.L111:
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1251              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1252 0024 E06A     		ldr	r0, [r4, #44]
 1253              	.LVL129:
 1254              	.LBB106:
 1255              	.LBB107:
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	warnings. */
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1256              		.loc 2 190 0 discriminator 4
 1257              		.syntax unified
 1258              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1259 0026 83F31188 			msr basepri, r3	
 1260              	@ 0 "" 2
 1261              	.LVL130:
 1262              		.thumb
 1263              		.syntax unified
 1264              	.LBE107:
 1265              	.LBE106:
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1266              		.loc 1 1459 0 discriminator 4
 1267 002a 10BD     		pop	{r4, pc}
 1268              	.LVL131:
 1269              	.L114:
 1270              		.align	2
 1271              	.L113:
 1272 002c 00000000 		.word	.LANCHOR0
 1273              		.cfi_endproc
 1274              	.LFE145:
 1275              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1276              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1277              		.align	2
 1278              		.global	vTaskPrioritySet
 1279              		.thumb
 1280              		.thumb_func
 1281              		.type	vTaskPrioritySet, %function
 1282              	vTaskPrioritySet:
 1283              	.LFB146:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 117


 1284              		.loc 1 1467 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              	.LVL132:
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1289              		.loc 1 1472 0
 1290 0000 0629     		cmp	r1, #6
 1291 0002 08D9     		bls	.L116
 1292              	.LBB108:
 1293              	.LBB109:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1294              		.loc 2 156 0
 1295              		.syntax unified
 1296              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1297 0004 4FF03F03 			mov r3, #63												
 1298 0008 83F31188 		msr basepri, r3											
 1299 000c BFF36F8F 		isb														
 1300 0010 BFF34F8F 		dsb														
 1301              	
 1302              	@ 0 "" 2
 1303              	.LVL133:
 1304              		.thumb
 1305              		.syntax unified
 1306              	.L117:
 1307 0014 FEE7     		b	.L117
 1308              	.L116:
 1309              	.LBE109:
 1310              	.LBE108:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1311              		.loc 1 1467 0
 1312 0016 70B5     		push	{r4, r5, r6, lr}
 1313              		.cfi_def_cfa_offset 16
 1314              		.cfi_offset 4, -16
 1315              		.cfi_offset 5, -12
 1316              		.cfi_offset 6, -8
 1317              		.cfi_offset 14, -4
 1318 0018 0446     		mov	r4, r0
 1319 001a 0D46     		mov	r5, r1
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1320              		.loc 1 1475 0
 1321 001c 0629     		cmp	r1, #6
 1322 001e 00D9     		bls	.L118
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1323              		.loc 1 1477 0
 1324 0020 0625     		movs	r5, #6
 1325              	.L118:
 1326              	.LVL134:
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1327              		.loc 1 1484 0
 1328 0022 FFF7FEFF 		bl	vPortEnterCritical
 1329              	.LVL135:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1330              		.loc 1 1488 0
 1331 0026 14B9     		cbnz	r4, .L119
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1332              		.loc 1 1488 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 118


 1333 0028 294B     		ldr	r3, .L133
 1334 002a D3F80041 		ldr	r4, [r3, #256]
 1335              	.LVL136:
 1336              	.L119:
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1337              		.loc 1 1498 0 is_stmt 1 discriminator 4
 1338 002e E36A     		ldr	r3, [r4, #44]
 1339              	.LVL137:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1340              		.loc 1 1502 0 discriminator 4
 1341 0030 9D42     		cmp	r5, r3
 1342 0032 4AD0     		beq	.L120
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1343              		.loc 1 1506 0
 1344 0034 0CD9     		bls	.L121
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1345              		.loc 1 1508 0
 1346 0036 264A     		ldr	r2, .L133
 1347 0038 D2F80021 		ldr	r2, [r2, #256]
 1348 003c 9442     		cmp	r4, r2
 1349 003e 0ED0     		beq	.L128
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1350              		.loc 1 1513 0
 1351 0040 234A     		ldr	r2, .L133
 1352 0042 D2F80021 		ldr	r2, [r2, #256]
 1353 0046 D26A     		ldr	r2, [r2, #44]
 1354 0048 9542     		cmp	r5, r2
 1355 004a 0AD2     		bcs	.L129
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1356              		.loc 1 1470 0
 1357 004c 0026     		movs	r6, #0
 1358 004e 0BE0     		b	.L122
 1359              	.L121:
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1360              		.loc 1 1529 0
 1361 0050 1F4A     		ldr	r2, .L133
 1362 0052 D2F80021 		ldr	r2, [r2, #256]
 1363 0056 9442     		cmp	r4, r2
 1364 0058 05D0     		beq	.L130
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1365              		.loc 1 1470 0
 1366 005a 0026     		movs	r6, #0
 1367 005c 04E0     		b	.L122
 1368              	.L128:
 1369 005e 0026     		movs	r6, #0
 1370 0060 02E0     		b	.L122
 1371              	.L129:
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1372              		.loc 1 1515 0
 1373 0062 0126     		movs	r6, #1
 1374 0064 00E0     		b	.L122
 1375              	.L130:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1376              		.loc 1 1534 0
 1377 0066 0126     		movs	r6, #1
 1378              	.L122:
 1379              	.LVL138:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 119


1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1380              		.loc 1 1566 0
 1381 0068 E562     		str	r5, [r4, #44]
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1382              		.loc 1 1572 0
 1383 006a A269     		ldr	r2, [r4, #24]
 1384 006c 002A     		cmp	r2, #0
 1385 006e 02DB     		blt	.L123
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1386              		.loc 1 1574 0
 1387 0070 C5F10705 		rsb	r5, r5, #7
 1388              	.LVL139:
 1389 0074 A561     		str	r5, [r4, #24]
 1390              	.L123:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1391              		.loc 1 1585 0
 1392 0076 6169     		ldr	r1, [r4, #20]
 1393 0078 03EB8303 		add	r3, r3, r3, lsl #2
 1394              	.LVL140:
 1395 007c 9A00     		lsls	r2, r3, #2
 1396 007e 154B     		ldr	r3, .L133+4
 1397 0080 1A44     		add	r2, r2, r3
 1398 0082 9142     		cmp	r1, r2
 1399 0084 01D1     		bne	.L131
 1400 0086 0123     		movs	r3, #1
 1401 0088 00E0     		b	.L124
 1402              	.L131:
 1403 008a 0023     		movs	r3, #0
 1404              	.L124:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1405              		.loc 1 1585 0 is_stmt 0 discriminator 4
 1406 008c A3B1     		cbz	r3, .L125
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1407              		.loc 1 1590 0 is_stmt 1
 1408 008e 251D     		adds	r5, r4, #4
 1409 0090 2846     		mov	r0, r5
 1410 0092 FFF7FEFF 		bl	uxListRemove
 1411              	.LVL141:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1412              		.loc 1 1601 0
 1413 0096 E36A     		ldr	r3, [r4, #44]
 1414 0098 0D4A     		ldr	r2, .L133
 1415 009a D2F80C21 		ldr	r2, [r2, #268]
 1416 009e 9342     		cmp	r3, r2
 1417 00a0 02D9     		bls	.L126
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1418              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1419 00a2 0B4A     		ldr	r2, .L133
 1420 00a4 C2F80C31 		str	r3, [r2, #268]
 1421              	.L126:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1422              		.loc 1 1601 0 discriminator 3
 1423 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1424 00ac 9A00     		lsls	r2, r3, #2
 1425 00ae 2946     		mov	r1, r5
 1426 00b0 0848     		ldr	r0, .L133+4
 1427 00b2 1044     		add	r0, r0, r2
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 120


 1428 00b4 FFF7FEFF 		bl	vListInsertEnd
 1429              	.LVL142:
 1430              	.L125:
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1431              		.loc 1 1608 0 is_stmt 1
 1432 00b8 3EB1     		cbz	r6, .L120
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1433              		.loc 1 1610 0
 1434 00ba 4FF08052 		mov	r2, #268435456
 1435 00be 064B     		ldr	r3, .L133+8
 1436 00c0 1A60     		str	r2, [r3]
 1437              		.syntax unified
 1438              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1439 00c2 BFF34F8F 		dsb
 1440              	@ 0 "" 2
 1441              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1442 00c6 BFF36F8F 		isb
 1443              	@ 0 "" 2
 1444              	.LVL143:
 1445              		.thumb
 1446              		.syntax unified
 1447              	.L120:
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1448              		.loc 1 1622 0
 1449 00ca FFF7FEFF 		bl	vPortExitCritical
 1450              	.LVL144:
 1451 00ce 70BD     		pop	{r4, r5, r6, pc}
 1452              	.LVL145:
 1453              	.L134:
 1454              		.align	2
 1455              	.L133:
 1456 00d0 00000000 		.word	.LANCHOR0
 1457 00d4 30000000 		.word	.LANCHOR0+48
 1458 00d8 04ED00E0 		.word	-536810236
 1459              		.cfi_endproc
 1460              	.LFE146:
 1461              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1462              		.section	.text.vTaskResume,"ax",%progbits
 1463              		.align	2
 1464              		.global	vTaskResume
 1465              		.thumb
 1466              		.thumb_func
 1467              		.type	vTaskResume, %function
 1468              	vTaskResume:
 1469              	.LFB149:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1470              		.loc 1 1778 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 0
 1473              		@ frame_needed = 0, uses_anonymous_args = 0
 1474              	.LVL146:
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1475              		.loc 1 1782 0
 1476 0000 40B9     		cbnz	r0, .L136
 1477              	.LBB110:
 1478              	.LBB111:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 121


 1479              		.loc 2 156 0
 1480              		.syntax unified
 1481              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1482 0002 4FF03F03 			mov r3, #63												
 1483 0006 83F31188 		msr basepri, r3											
 1484 000a BFF36F8F 		isb														
 1485 000e BFF34F8F 		dsb														
 1486              	
 1487              	@ 0 "" 2
 1488              	.LVL147:
 1489              		.thumb
 1490              		.syntax unified
 1491              	.L137:
 1492 0012 FEE7     		b	.L137
 1493              	.L136:
 1494              	.LBE111:
 1495              	.LBE110:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1496              		.loc 1 1778 0
 1497 0014 70B5     		push	{r4, r5, r6, lr}
 1498              		.cfi_def_cfa_offset 16
 1499              		.cfi_offset 4, -16
 1500              		.cfi_offset 5, -12
 1501              		.cfi_offset 6, -8
 1502              		.cfi_offset 14, -4
 1503 0016 0446     		mov	r4, r0
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1504              		.loc 1 1786 0
 1505 0018 88B3     		cbz	r0, .L135
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1506              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1507 001a 194B     		ldr	r3, .L142
 1508 001c D3F80031 		ldr	r3, [r3, #256]
 1509 0020 9842     		cmp	r0, r3
 1510 0022 2CD0     		beq	.L135
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1511              		.loc 1 1788 0 is_stmt 1
 1512 0024 FFF7FEFF 		bl	vPortEnterCritical
 1513              	.LVL148:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1514              		.loc 1 1790 0
 1515 0028 2046     		mov	r0, r4
 1516 002a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1517              	.LVL149:
 1518 002e 20B3     		cbz	r0, .L139
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1519              		.loc 1 1796 0
 1520 0030 261D     		adds	r6, r4, #4
 1521 0032 3046     		mov	r0, r6
 1522 0034 FFF7FEFF 		bl	uxListRemove
 1523              	.LVL150:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1524              		.loc 1 1797 0
 1525 0038 E36A     		ldr	r3, [r4, #44]
 1526 003a 114A     		ldr	r2, .L142
 1527 003c D2F80C21 		ldr	r2, [r2, #268]
 1528 0040 9342     		cmp	r3, r2
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 122


 1529 0042 02D9     		bls	.L140
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1530              		.loc 1 1797 0 is_stmt 0 discriminator 1
 1531 0044 0E4A     		ldr	r2, .L142
 1532 0046 C2F80C31 		str	r3, [r2, #268]
 1533              	.L140:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1534              		.loc 1 1797 0 discriminator 3
 1535 004a 0D4D     		ldr	r5, .L142
 1536 004c 05F13000 		add	r0, r5, #48
 1537 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1538 0054 9A00     		lsls	r2, r3, #2
 1539 0056 3146     		mov	r1, r6
 1540 0058 1044     		add	r0, r0, r2
 1541 005a FFF7FEFF 		bl	vListInsertEnd
 1542              	.LVL151:
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1543              		.loc 1 1800 0 is_stmt 1 discriminator 3
 1544 005e E26A     		ldr	r2, [r4, #44]
 1545 0060 D5F80031 		ldr	r3, [r5, #256]
 1546 0064 DB6A     		ldr	r3, [r3, #44]
 1547 0066 9A42     		cmp	r2, r3
 1548 0068 07D3     		bcc	.L139
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1549              		.loc 1 1805 0
 1550 006a 4FF08052 		mov	r2, #268435456
 1551 006e 054B     		ldr	r3, .L142+4
 1552 0070 1A60     		str	r2, [r3]
 1553              		.syntax unified
 1554              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1555 0072 BFF34F8F 		dsb
 1556              	@ 0 "" 2
 1557              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1558 0076 BFF36F8F 		isb
 1559              	@ 0 "" 2
 1560              		.thumb
 1561              		.syntax unified
 1562              	.L139:
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1563              		.loc 1 1817 0
 1564 007a FFF7FEFF 		bl	vPortExitCritical
 1565              	.LVL152:
 1566              	.L135:
 1567 007e 70BD     		pop	{r4, r5, r6, pc}
 1568              	.LVL153:
 1569              	.L143:
 1570              		.align	2
 1571              	.L142:
 1572 0080 00000000 		.word	.LANCHOR0
 1573 0084 04ED00E0 		.word	-536810236
 1574              		.cfi_endproc
 1575              	.LFE149:
 1576              		.size	vTaskResume, .-vTaskResume
 1577              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1578              		.align	2
 1579              		.global	xTaskResumeFromISR
 1580              		.thumb
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 123


 1581              		.thumb_func
 1582              		.type	xTaskResumeFromISR, %function
 1583              	xTaskResumeFromISR:
 1584              	.LFB150:
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1585              		.loc 1 1832 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 1589              	.LVL154:
 1590 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1591              		.cfi_def_cfa_offset 24
 1592              		.cfi_offset 3, -24
 1593              		.cfi_offset 4, -20
 1594              		.cfi_offset 5, -16
 1595              		.cfi_offset 6, -12
 1596              		.cfi_offset 7, -8
 1597              		.cfi_offset 14, -4
 1598              	.LVL155:
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1599              		.loc 1 1837 0
 1600 0002 40B9     		cbnz	r0, .L145
 1601              	.LBB112:
 1602              	.LBB113:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1603              		.loc 2 156 0
 1604              		.syntax unified
 1605              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1606 0004 4FF03F03 			mov r3, #63												
 1607 0008 83F31188 		msr basepri, r3											
 1608 000c BFF36F8F 		isb														
 1609 0010 BFF34F8F 		dsb														
 1610              	
 1611              	@ 0 "" 2
 1612              	.LVL156:
 1613              		.thumb
 1614              		.syntax unified
 1615              	.L146:
 1616 0014 FEE7     		b	.L146
 1617              	.L145:
 1618 0016 0446     		mov	r4, r0
 1619              	.LBE113:
 1620              	.LBE112:
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1621              		.loc 1 1855 0
 1622 0018 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1623              	.LVL157:
 1624              	.LBB114:
 1625              	.LBB115:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1626              		.loc 2 172 0
 1627              		.syntax unified
 1628              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1629 001c EFF31187 			mrs r7, basepri											
 1630 0020 4FF03F03 		mov r3, #63												
 1631 0024 83F31188 		msr basepri, r3											
 1632 0028 BFF36F8F 		isb														
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 124


 1633 002c BFF34F8F 		dsb														
 1634              	
 1635              	@ 0 "" 2
 1636              		.thumb
 1637              		.syntax unified
 1638              	.LBE115:
 1639              	.LBE114:
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1640              		.loc 1 1859 0
 1641 0030 2046     		mov	r0, r4
 1642 0032 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1643              	.LVL158:
 1644 0036 50B3     		cbz	r0, .L151
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1645              		.loc 1 1864 0
 1646 0038 174B     		ldr	r3, .L154
 1647 003a D3F81831 		ldr	r3, [r3, #280]
 1648 003e FBB9     		cbnz	r3, .L148
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1649              		.loc 1 1868 0
 1650 0040 E26A     		ldr	r2, [r4, #44]
 1651 0042 154B     		ldr	r3, .L154
 1652 0044 D3F80031 		ldr	r3, [r3, #256]
 1653 0048 DB6A     		ldr	r3, [r3, #44]
 1654 004a 9A42     		cmp	r2, r3
 1655 004c 01D2     		bcs	.L152
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1656              		.loc 1 1833 0
 1657 004e 0025     		movs	r5, #0
 1658 0050 00E0     		b	.L149
 1659              	.L152:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1660              		.loc 1 1870 0
 1661 0052 0125     		movs	r5, #1
 1662              	.L149:
 1663              	.LVL159:
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1664              		.loc 1 1877 0
 1665 0054 261D     		adds	r6, r4, #4
 1666 0056 3046     		mov	r0, r6
 1667 0058 FFF7FEFF 		bl	uxListRemove
 1668              	.LVL160:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1669              		.loc 1 1878 0
 1670 005c E36A     		ldr	r3, [r4, #44]
 1671 005e 0E4A     		ldr	r2, .L154
 1672 0060 D2F80C21 		ldr	r2, [r2, #268]
 1673 0064 9342     		cmp	r3, r2
 1674 0066 02D9     		bls	.L150
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1675              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1676 0068 0B4A     		ldr	r2, .L154
 1677 006a C2F80C31 		str	r3, [r2, #268]
 1678              	.L150:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1679              		.loc 1 1878 0 discriminator 3
 1680 006e 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 125


 1681 0072 9A00     		lsls	r2, r3, #2
 1682 0074 3146     		mov	r1, r6
 1683 0076 0948     		ldr	r0, .L154+4
 1684 0078 1044     		add	r0, r0, r2
 1685 007a FFF7FEFF 		bl	vListInsertEnd
 1686              	.LVL161:
 1687 007e 07E0     		b	.L147
 1688              	.LVL162:
 1689              	.L148:
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1690              		.loc 1 1885 0 is_stmt 1
 1691 0080 04F11801 		add	r1, r4, #24
 1692 0084 0648     		ldr	r0, .L154+8
 1693 0086 FFF7FEFF 		bl	vListInsertEnd
 1694              	.LVL163:
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1695              		.loc 1 1833 0
 1696 008a 0025     		movs	r5, #0
 1697 008c 00E0     		b	.L147
 1698              	.L151:
 1699 008e 0025     		movs	r5, #0
 1700              	.LVL164:
 1701              	.L147:
 1702              	.LBB116:
 1703              	.LBB117:
 1704              		.loc 2 190 0
 1705              		.syntax unified
 1706              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1707 0090 87F31188 			msr basepri, r7	
 1708              	@ 0 "" 2
 1709              	.LVL165:
 1710              		.thumb
 1711              		.syntax unified
 1712              	.LBE117:
 1713              	.LBE116:
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1714              		.loc 1 1896 0
 1715 0094 2846     		mov	r0, r5
 1716 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1717              	.LVL166:
 1718              	.L155:
 1719              		.align	2
 1720              	.L154:
 1721 0098 00000000 		.word	.LANCHOR0
 1722 009c 30000000 		.word	.LANCHOR0+48
 1723 00a0 14000000 		.word	.LANCHOR0+20
 1724              		.cfi_endproc
 1725              	.LFE150:
 1726              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1727              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1728              		.align	2
 1729              		.global	vTaskStartScheduler
 1730              		.thumb
 1731              		.thumb_func
 1732              		.type	vTaskStartScheduler, %function
 1733              	vTaskStartScheduler:
 1734              	.LFB151:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 126


1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 1735              		.loc 1 1902 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 0
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739 0000 00B5     		push	{lr}
 1740              		.cfi_def_cfa_offset 4
 1741              		.cfi_offset 14, -4
 1742 0002 83B0     		sub	sp, sp, #12
 1743              		.cfi_def_cfa_offset 16
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1744              		.loc 1 1935 0
 1745 0004 194B     		ldr	r3, .L162
 1746 0006 0193     		str	r3, [sp, #4]
 1747 0008 0023     		movs	r3, #0
 1748 000a 0093     		str	r3, [sp]
 1749 000c 8022     		movs	r2, #128
 1750 000e 1849     		ldr	r1, .L162+4
 1751 0010 1848     		ldr	r0, .L162+8
 1752 0012 FFF7FEFF 		bl	xTaskCreate
 1753              	.LVL167:
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1754              		.loc 1 1946 0
 1755 0016 0128     		cmp	r0, #1
 1756 0018 01D1     		bne	.L157
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1757              		.loc 1 1948 0
 1758 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1759              	.LVL168:
 1760              	.L157:
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1761              		.loc 1 1957 0
 1762 001e 0128     		cmp	r0, #1
 1763 0020 14D1     		bne	.L158
 1764              	.LBB118:
 1765              	.LBB119:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1766              		.loc 2 156 0
 1767              		.syntax unified
 1768              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1769 0022 4FF03F03 			mov r3, #63												
 1770 0026 83F31188 		msr basepri, r3											
 1771 002a BFF36F8F 		isb														
 1772 002e BFF34F8F 		dsb														
 1773              	
 1774              	@ 0 "" 2
 1775              		.thumb
 1776              		.syntax unified
 1777              	.LBE119:
 1778              	.LBE118:
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1779              		.loc 1 1983 0
 1780 0032 114B     		ldr	r3, .L162+12
 1781 0034 4FF0FF32 		mov	r2, #-1
 1782 0038 DA62     		str	r2, [r3, #44]
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1783              		.loc 1 1984 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 127


 1784 003a 0122     		movs	r2, #1
 1785 003c C3F80421 		str	r2, [r3, #260]
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1786              		.loc 1 1985 0
 1787 0040 0022     		movs	r2, #0
 1788 0042 C3F81421 		str	r2, [r3, #276]
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1789              		.loc 1 1997 0
 1790 0046 FFF7FEFF 		bl	xPortStartScheduler
 1791              	.LVL169:
 1792 004a 0BE0     		b	.L156
 1793              	.LVL170:
 1794              	.L158:
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1795              		.loc 1 2012 0
 1796 004c B0F1FF3F 		cmp	r0, #-1
 1797 0050 08D1     		bne	.L156
 1798              	.LBB120:
 1799              	.LBB121:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1800              		.loc 2 156 0
 1801              		.syntax unified
 1802              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1803 0052 4FF03F03 			mov r3, #63												
 1804 0056 83F31188 		msr basepri, r3											
 1805 005a BFF36F8F 		isb														
 1806 005e BFF34F8F 		dsb														
 1807              	
 1808              	@ 0 "" 2
 1809              	.LVL171:
 1810              		.thumb
 1811              		.syntax unified
 1812              	.L160:
 1813 0062 FEE7     		b	.L160
 1814              	.LVL172:
 1815              	.L156:
 1816              	.LBE121:
 1817              	.LBE120:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1818              		.loc 1 2018 0
 1819 0064 03B0     		add	sp, sp, #12
 1820              		.cfi_def_cfa_offset 4
 1821              		@ sp needed
 1822 0066 5DF804FB 		ldr	pc, [sp], #4
 1823              	.L163:
 1824 006a 00BF     		.align	2
 1825              	.L162:
 1826 006c 1C010000 		.word	.LANCHOR0+284
 1827 0070 00000000 		.word	.LC0
 1828 0074 00000000 		.word	prvIdleTask
 1829 0078 00000000 		.word	.LANCHOR0
 1830              		.cfi_endproc
 1831              	.LFE151:
 1832              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1833              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1834              		.align	2
 1835              		.global	vTaskEndScheduler
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 128


 1836              		.thumb
 1837              		.thumb_func
 1838              		.type	vTaskEndScheduler, %function
 1839              	vTaskEndScheduler:
 1840              	.LFB152:
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1841              		.loc 1 2022 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845 0000 08B5     		push	{r3, lr}
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 3, -8
 1848              		.cfi_offset 14, -4
 1849              	.LBB122:
 1850              	.LBB123:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1851              		.loc 2 156 0
 1852              		.syntax unified
 1853              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1854 0002 4FF03F03 			mov r3, #63												
 1855 0006 83F31188 		msr basepri, r3											
 1856 000a BFF36F8F 		isb														
 1857 000e BFF34F8F 		dsb														
 1858              	
 1859              	@ 0 "" 2
 1860              		.thumb
 1861              		.syntax unified
 1862              	.LBE123:
 1863              	.LBE122:
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
 1864              		.loc 1 2027 0
 1865 0012 0022     		movs	r2, #0
 1866 0014 024B     		ldr	r3, .L166
 1867 0016 C3F80421 		str	r2, [r3, #260]
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1868              		.loc 1 2028 0
 1869 001a FFF7FEFF 		bl	vPortEndScheduler
 1870              	.LVL173:
 1871 001e 08BD     		pop	{r3, pc}
 1872              	.L167:
 1873              		.align	2
 1874              	.L166:
 1875 0020 00000000 		.word	.LANCHOR0
 1876              		.cfi_endproc
 1877              	.LFE152:
 1878              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1879              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1880              		.align	2
 1881              		.global	vTaskSuspendAll
 1882              		.thumb
 1883              		.thumb_func
 1884              		.type	vTaskSuspendAll, %function
 1885              	vTaskSuspendAll:
 1886              	.LFB153:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1887              		.loc 1 2033 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 129


 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              		@ link register save eliminated.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1892              		.loc 1 2038 0
 1893 0000 034A     		ldr	r2, .L169
 1894 0002 D2F81831 		ldr	r3, [r2, #280]
 1895 0006 0133     		adds	r3, r3, #1
 1896 0008 C2F81831 		str	r3, [r2, #280]
 1897 000c 7047     		bx	lr
 1898              	.L170:
 1899 000e 00BF     		.align	2
 1900              	.L169:
 1901 0010 00000000 		.word	.LANCHOR0
 1902              		.cfi_endproc
 1903              	.LFE153:
 1904              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1905              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1906              		.align	2
 1907              		.global	xTaskGetTickCount
 1908              		.thumb
 1909              		.thumb_func
 1910              		.type	xTaskGetTickCount, %function
 1911              	xTaskGetTickCount:
 1912              	.LFB155:
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
 1913              		.loc 1 2216 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 1917              		@ link register save eliminated.
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1918              		.loc 1 2222 0
 1919 0000 014B     		ldr	r3, .L172
 1920 0002 D3F81401 		ldr	r0, [r3, #276]
 1921              	.LVL174:
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1922              		.loc 1 2227 0
 1923 0006 7047     		bx	lr
 1924              	.L173:
 1925              		.align	2
 1926              	.L172:
 1927 0008 00000000 		.word	.LANCHOR0
 1928              		.cfi_endproc
 1929              	.LFE155:
 1930              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1931              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1932              		.align	2
 1933              		.global	xTaskGetTickCountFromISR
 1934              		.thumb
 1935              		.thumb_func
 1936              		.type	xTaskGetTickCountFromISR, %function
 1937              	xTaskGetTickCountFromISR:
 1938              	.LFB156:
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
 1939              		.loc 1 2231 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 130


 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 1943 0000 08B5     		push	{r3, lr}
 1944              		.cfi_def_cfa_offset 8
 1945              		.cfi_offset 3, -8
 1946              		.cfi_offset 14, -4
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1947              		.loc 1 2249 0
 1948 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1949              	.LVL175:
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1950              		.loc 1 2253 0
 1951 0006 024B     		ldr	r3, .L176
 1952 0008 D3F81401 		ldr	r0, [r3, #276]
 1953              	.LVL176:
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1954              		.loc 1 2258 0
 1955 000c 08BD     		pop	{r3, pc}
 1956              	.L177:
 1957 000e 00BF     		.align	2
 1958              	.L176:
 1959 0010 00000000 		.word	.LANCHOR0
 1960              		.cfi_endproc
 1961              	.LFE156:
 1962              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1963              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1964              		.align	2
 1965              		.global	uxTaskGetNumberOfTasks
 1966              		.thumb
 1967              		.thumb_func
 1968              		.type	uxTaskGetNumberOfTasks, %function
 1969              	uxTaskGetNumberOfTasks:
 1970              	.LFB157:
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1971              		.loc 1 2262 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 0
 1974              		@ frame_needed = 0, uses_anonymous_args = 0
 1975              		@ link register save eliminated.
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1976              		.loc 1 2265 0
 1977 0000 014B     		ldr	r3, .L179
 1978 0002 D3F8FC00 		ldr	r0, [r3, #252]
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1979              		.loc 1 2266 0
 1980 0006 7047     		bx	lr
 1981              	.L180:
 1982              		.align	2
 1983              	.L179:
 1984 0008 00000000 		.word	.LANCHOR0
 1985              		.cfi_endproc
 1986              	.LFE157:
 1987              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1988              		.section	.text.pcTaskGetName,"ax",%progbits
 1989              		.align	2
 1990              		.global	pcTaskGetName
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 131


 1991              		.thumb
 1992              		.thumb_func
 1993              		.type	pcTaskGetName, %function
 1994              	pcTaskGetName:
 1995              	.LFB158:
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
 1996              		.loc 1 2270 0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 0
 1999              		@ frame_needed = 0, uses_anonymous_args = 0
 2000              		@ link register save eliminated.
 2001              	.LVL177:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 2002              		.loc 1 2275 0
 2003 0000 0346     		mov	r3, r0
 2004 0002 10B9     		cbnz	r0, .L182
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 2005              		.loc 1 2275 0 is_stmt 0 discriminator 1
 2006 0004 074B     		ldr	r3, .L185
 2007 0006 D3F80031 		ldr	r3, [r3, #256]
 2008              	.LVL178:
 2009              	.L182:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2010              		.loc 1 2276 0 is_stmt 1 discriminator 4
 2011 000a 43B9     		cbnz	r3, .L183
 2012              	.LBB124:
 2013              	.LBB125:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2014              		.loc 2 156 0
 2015              		.syntax unified
 2016              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2017 000c 4FF03F03 			mov r3, #63												
 2018 0010 83F31188 		msr basepri, r3											
 2019 0014 BFF36F8F 		isb														
 2020 0018 BFF34F8F 		dsb														
 2021              	
 2022              	@ 0 "" 2
 2023              	.LVL179:
 2024              		.thumb
 2025              		.syntax unified
 2026              	.L184:
 2027 001c FEE7     		b	.L184
 2028              	.LVL180:
 2029              	.L183:
 2030              	.LBE125:
 2031              	.LBE124:
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2032              		.loc 1 2278 0
 2033 001e 03F13400 		add	r0, r3, #52
 2034 0022 7047     		bx	lr
 2035              	.L186:
 2036              		.align	2
 2037              	.L185:
 2038 0024 00000000 		.word	.LANCHOR0
 2039              		.cfi_endproc
 2040              	.LFE158:
 2041              		.size	pcTaskGetName, .-pcTaskGetName
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 132


 2042              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2043              		.align	2
 2044              		.global	xTaskIncrementTick
 2045              		.thumb
 2046              		.thumb_func
 2047              		.type	xTaskIncrementTick, %function
 2048              	xTaskIncrementTick:
 2049              	.LFB160:
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
 2050              		.loc 1 2590 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 0
 2053              		@ frame_needed = 0, uses_anonymous_args = 0
 2054 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2055              		.cfi_def_cfa_offset 24
 2056              		.cfi_offset 4, -24
 2057              		.cfi_offset 5, -20
 2058              		.cfi_offset 6, -16
 2059              		.cfi_offset 7, -12
 2060              		.cfi_offset 8, -8
 2061              		.cfi_offset 14, -4
 2062              	.LVL181:
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2063              		.loc 1 2599 0
 2064 0004 3C4B     		ldr	r3, .L207
 2065 0006 D3F81831 		ldr	r3, [r3, #280]
 2066 000a 002B     		cmp	r3, #0
 2067 000c 65D1     		bne	.L188
 2068              	.LBB126:
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2069              		.loc 1 2603 0
 2070 000e 3A4B     		ldr	r3, .L207
 2071 0010 D3F81441 		ldr	r4, [r3, #276]
 2072 0014 0134     		adds	r4, r4, #1
 2073              	.LVL182:
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2074              		.loc 1 2607 0
 2075 0016 C3F81441 		str	r4, [r3, #276]
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2076              		.loc 1 2609 0
 2077 001a CCB9     		cbnz	r4, .L189
 2078              	.LBB127:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2079              		.loc 1 2611 0
 2080 001c 9B6A     		ldr	r3, [r3, #40]
 2081 001e 1B68     		ldr	r3, [r3]
 2082 0020 43B1     		cbz	r3, .L190
 2083              	.LBB128:
 2084              	.LBB129:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2085              		.loc 2 156 0
 2086              		.syntax unified
 2087              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2088 0022 4FF03F03 			mov r3, #63												
 2089 0026 83F31188 		msr basepri, r3											
 2090 002a BFF36F8F 		isb														
 2091 002e BFF34F8F 		dsb														
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 133


 2092              	
 2093              	@ 0 "" 2
 2094              	.LVL183:
 2095              		.thumb
 2096              		.syntax unified
 2097              	.L191:
 2098 0032 FEE7     		b	.L191
 2099              	.L190:
 2100              	.LBE129:
 2101              	.LBE128:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2102              		.loc 1 2611 0 discriminator 2
 2103 0034 304B     		ldr	r3, .L207
 2104 0036 9A6A     		ldr	r2, [r3, #40]
 2105              	.LVL184:
 2106 0038 D3F8F810 		ldr	r1, [r3, #248]
 2107 003c 9962     		str	r1, [r3, #40]
 2108 003e C3F8F820 		str	r2, [r3, #248]
 2109 0042 D3F82021 		ldr	r2, [r3, #288]
 2110              	.LVL185:
 2111 0046 0132     		adds	r2, r2, #1
 2112 0048 C3F82021 		str	r2, [r3, #288]
 2113              	.LVL186:
 2114 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2115              	.LVL187:
 2116              	.L189:
 2117              	.LBE127:
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2118              		.loc 1 2622 0
 2119 0050 294B     		ldr	r3, .L207
 2120 0052 DB6A     		ldr	r3, [r3, #44]
 2121 0054 9C42     		cmp	r4, r3
 2122 0056 03D2     		bcs	.L202
 2123              	.LBE126:
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2124              		.loc 1 2593 0
 2125 0058 0026     		movs	r6, #0
 2126 005a 45E0     		b	.L193
 2127              	.LVL188:
 2128              	.L204:
 2129              	.LBB130:
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 2130              		.loc 1 2688 0
 2131 005c 0126     		movs	r6, #1
 2132              	.LVL189:
 2133 005e 00E0     		b	.L192
 2134              	.LVL190:
 2135              	.L202:
 2136 0060 0026     		movs	r6, #0
 2137              	.LVL191:
 2138              	.L192:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2139              		.loc 1 2626 0
 2140 0062 254B     		ldr	r3, .L207
 2141 0064 9B6A     		ldr	r3, [r3, #40]
 2142 0066 1B68     		ldr	r3, [r3]
 2143 0068 0BB9     		cbnz	r3, .L203
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 134


 2144 006a 0123     		movs	r3, #1
 2145 006c 00E0     		b	.L194
 2146              	.L203:
 2147 006e 0023     		movs	r3, #0
 2148              	.L194:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2149              		.loc 1 2626 0 is_stmt 0 discriminator 4
 2150 0070 23B1     		cbz	r3, .L195
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 2151              		.loc 1 2633 0 is_stmt 1
 2152 0072 4FF0FF32 		mov	r2, #-1
 2153 0076 204B     		ldr	r3, .L207
 2154 0078 DA62     		str	r2, [r3, #44]
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2155              		.loc 1 2634 0
 2156 007a 35E0     		b	.L193
 2157              	.L195:
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2158              		.loc 1 2642 0
 2159 007c 1E4B     		ldr	r3, .L207
 2160 007e 9B6A     		ldr	r3, [r3, #40]
 2161 0080 DB68     		ldr	r3, [r3, #12]
 2162 0082 DD68     		ldr	r5, [r3, #12]
 2163              	.LVL192:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2164              		.loc 1 2643 0
 2165 0084 6B68     		ldr	r3, [r5, #4]
 2166              	.LVL193:
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2167              		.loc 1 2645 0
 2168 0086 9C42     		cmp	r4, r3
 2169 0088 02D2     		bcs	.L196
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
 2170              		.loc 1 2652 0
 2171 008a 1B4A     		ldr	r2, .L207
 2172 008c D362     		str	r3, [r2, #44]
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2173              		.loc 1 2653 0
 2174 008e 2BE0     		b	.L193
 2175              	.L196:
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2176              		.loc 1 2661 0
 2177 0090 05F10408 		add	r8, r5, #4
 2178 0094 4046     		mov	r0, r8
 2179 0096 FFF7FEFF 		bl	uxListRemove
 2180              	.LVL194:
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2181              		.loc 1 2665 0
 2182 009a AB6A     		ldr	r3, [r5, #40]
 2183 009c 1BB1     		cbz	r3, .L197
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2184              		.loc 1 2667 0
 2185 009e 05F11800 		add	r0, r5, #24
 2186 00a2 FFF7FEFF 		bl	uxListRemove
 2187              	.LVL195:
 2188              	.L197:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 135


 2189              		.loc 1 2676 0
 2190 00a6 EB6A     		ldr	r3, [r5, #44]
 2191 00a8 134A     		ldr	r2, .L207
 2192 00aa D2F80C21 		ldr	r2, [r2, #268]
 2193 00ae 9342     		cmp	r3, r2
 2194 00b0 02D9     		bls	.L198
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2195              		.loc 1 2676 0 is_stmt 0 discriminator 1
 2196 00b2 114A     		ldr	r2, .L207
 2197 00b4 C2F80C31 		str	r3, [r2, #268]
 2198              	.L198:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2199              		.loc 1 2676 0 discriminator 3
 2200 00b8 0F4F     		ldr	r7, .L207
 2201 00ba 07F13000 		add	r0, r7, #48
 2202 00be 03EB8303 		add	r3, r3, r3, lsl #2
 2203 00c2 9A00     		lsls	r2, r3, #2
 2204 00c4 4146     		mov	r1, r8
 2205 00c6 1044     		add	r0, r0, r2
 2206 00c8 FFF7FEFF 		bl	vListInsertEnd
 2207              	.LVL196:
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 2208              		.loc 1 2686 0 is_stmt 1 discriminator 3
 2209 00cc EA6A     		ldr	r2, [r5, #44]
 2210 00ce D7F80031 		ldr	r3, [r7, #256]
 2211 00d2 DB6A     		ldr	r3, [r3, #44]
 2212 00d4 9A42     		cmp	r2, r3
 2213 00d6 C1D2     		bcs	.L204
 2214 00d8 C3E7     		b	.L192
 2215              	.LVL197:
 2216              	.L188:
 2217              	.LBE130:
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2218              		.loc 1 2733 0
 2219 00da 074A     		ldr	r2, .L207
 2220 00dc D2F82431 		ldr	r3, [r2, #292]
 2221 00e0 0133     		adds	r3, r3, #1
 2222 00e2 C2F82431 		str	r3, [r2, #292]
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2223              		.loc 1 2593 0
 2224 00e6 0026     		movs	r6, #0
 2225              	.LVL198:
 2226              	.L193:
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2227              		.loc 1 2746 0
 2228 00e8 034B     		ldr	r3, .L207
 2229 00ea D3F82831 		ldr	r3, [r3, #296]
 2230 00ee 03B1     		cbz	r3, .L201
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2231              		.loc 1 2748 0
 2232 00f0 0126     		movs	r6, #1
 2233              	.LVL199:
 2234              	.L201:
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2235              		.loc 1 2758 0
 2236 00f2 3046     		mov	r0, r6
 2237 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 136


 2238              	.LVL200:
 2239              	.L208:
 2240              		.align	2
 2241              	.L207:
 2242 00f8 00000000 		.word	.LANCHOR0
 2243              		.cfi_endproc
 2244              	.LFE160:
 2245              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2246              		.section	.text.xTaskResumeAll,"ax",%progbits
 2247              		.align	2
 2248              		.global	xTaskResumeAll
 2249              		.thumb
 2250              		.thumb_func
 2251              		.type	xTaskResumeAll, %function
 2252              	xTaskResumeAll:
 2253              	.LFB154:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2254              		.loc 1 2106 0
 2255              		.cfi_startproc
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 0, uses_anonymous_args = 0
 2258              	.LVL201:
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2259              		.loc 1 2112 0
 2260 0000 394B     		ldr	r3, .L225
 2261 0002 D3F81831 		ldr	r3, [r3, #280]
 2262 0006 43B9     		cbnz	r3, .L210
 2263              	.LBB131:
 2264              	.LBB132:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2265              		.loc 2 156 0
 2266              		.syntax unified
 2267              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2268 0008 4FF03F03 			mov r3, #63												
 2269 000c 83F31188 		msr basepri, r3											
 2270 0010 BFF36F8F 		isb														
 2271 0014 BFF34F8F 		dsb														
 2272              	
 2273              	@ 0 "" 2
 2274              	.LVL202:
 2275              		.thumb
 2276              		.syntax unified
 2277              	.L211:
 2278 0018 FEE7     		b	.L211
 2279              	.L210:
 2280              	.LBE132:
 2281              	.LBE131:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2282              		.loc 1 2106 0
 2283 001a 70B5     		push	{r4, r5, r6, lr}
 2284              		.cfi_def_cfa_offset 16
 2285              		.cfi_offset 4, -16
 2286              		.cfi_offset 5, -12
 2287              		.cfi_offset 6, -8
 2288              		.cfi_offset 14, -4
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2289              		.loc 1 2119 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 137


 2290 001c FFF7FEFF 		bl	vPortEnterCritical
 2291              	.LVL203:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2292              		.loc 1 2121 0
 2293 0020 314B     		ldr	r3, .L225
 2294 0022 D3F81821 		ldr	r2, [r3, #280]
 2295 0026 013A     		subs	r2, r2, #1
 2296 0028 C3F81821 		str	r2, [r3, #280]
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2297              		.loc 1 2123 0
 2298 002c D3F81831 		ldr	r3, [r3, #280]
 2299 0030 002B     		cmp	r3, #0
 2300 0032 52D1     		bne	.L221
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2301              		.loc 1 2125 0
 2302 0034 2C4B     		ldr	r3, .L225
 2303 0036 D3F8FC30 		ldr	r3, [r3, #252]
 2304 003a 3BBB     		cbnz	r3, .L222
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2305              		.loc 1 2108 0
 2306 003c 0024     		movs	r4, #0
 2307 003e 4FE0     		b	.L212
 2308              	.LVL204:
 2309              	.L216:
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2310              		.loc 1 2131 0
 2311 0040 294D     		ldr	r5, .L225
 2312 0042 2B6A     		ldr	r3, [r5, #32]
 2313 0044 DC68     		ldr	r4, [r3, #12]
 2314              	.LVL205:
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2315              		.loc 1 2132 0
 2316 0046 04F11800 		add	r0, r4, #24
 2317 004a FFF7FEFF 		bl	uxListRemove
 2318              	.LVL206:
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2319              		.loc 1 2133 0
 2320 004e 261D     		adds	r6, r4, #4
 2321 0050 3046     		mov	r0, r6
 2322 0052 FFF7FEFF 		bl	uxListRemove
 2323              	.LVL207:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2324              		.loc 1 2134 0
 2325 0056 E36A     		ldr	r3, [r4, #44]
 2326 0058 D5F80C21 		ldr	r2, [r5, #268]
 2327 005c 9342     		cmp	r3, r2
 2328 005e 01D9     		bls	.L214
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2329              		.loc 1 2134 0 is_stmt 0 discriminator 1
 2330 0060 C5F80C31 		str	r3, [r5, #268]
 2331              	.L214:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2332              		.loc 1 2134 0 discriminator 3
 2333 0064 204D     		ldr	r5, .L225
 2334 0066 05F13000 		add	r0, r5, #48
 2335 006a 03EB8303 		add	r3, r3, r3, lsl #2
 2336 006e 9A00     		lsls	r2, r3, #2
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 138


 2337 0070 3146     		mov	r1, r6
 2338 0072 1044     		add	r0, r0, r2
 2339 0074 FFF7FEFF 		bl	vListInsertEnd
 2340              	.LVL208:
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2341              		.loc 1 2138 0 is_stmt 1 discriminator 3
 2342 0078 E26A     		ldr	r2, [r4, #44]
 2343 007a D5F80031 		ldr	r3, [r5, #256]
 2344 007e DB6A     		ldr	r3, [r3, #44]
 2345 0080 9A42     		cmp	r2, r3
 2346 0082 04D3     		bcc	.L213
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2347              		.loc 1 2140 0
 2348 0084 0122     		movs	r2, #1
 2349 0086 C5F82821 		str	r2, [r5, #296]
 2350 008a 00E0     		b	.L213
 2351              	.LVL209:
 2352              	.L222:
 2353 008c 0024     		movs	r4, #0
 2354              	.LVL210:
 2355              	.L213:
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2356              		.loc 1 2129 0
 2357 008e 164B     		ldr	r3, .L225
 2358 0090 5B69     		ldr	r3, [r3, #20]
 2359 0092 002B     		cmp	r3, #0
 2360 0094 D4D1     		bne	.L216
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2361              		.loc 1 2148 0
 2362 0096 0CB1     		cbz	r4, .L217
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2363              		.loc 1 2156 0
 2364 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2365              	.LVL211:
 2366              	.L217:
 2367              	.LBB133:
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2368              		.loc 1 2164 0
 2369 009c 124B     		ldr	r3, .L225
 2370 009e D3F82441 		ldr	r4, [r3, #292]
 2371              	.LVL212:
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2372              		.loc 1 2166 0
 2373 00a2 64B1     		cbz	r4, .L218
 2374              	.L220:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 2375              		.loc 1 2170 0
 2376 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2377              	.LVL213:
 2378 00a8 18B1     		cbz	r0, .L219
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
 2379              		.loc 1 2172 0
 2380 00aa 0122     		movs	r2, #1
 2381 00ac 0E4B     		ldr	r3, .L225
 2382 00ae C3F82821 		str	r2, [r3, #296]
 2383              	.L219:
 2384              	.LVL214:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 139


2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2385              		.loc 1 2179 0
 2386 00b2 013C     		subs	r4, r4, #1
 2387              	.LVL215:
 2388 00b4 F6D1     		bne	.L220
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2389              		.loc 1 2181 0
 2390 00b6 0022     		movs	r2, #0
 2391 00b8 0B4B     		ldr	r3, .L225
 2392 00ba C3F82421 		str	r2, [r3, #292]
 2393              	.L218:
 2394              	.LBE133:
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2395              		.loc 1 2189 0
 2396 00be 0A4B     		ldr	r3, .L225
 2397 00c0 D3F82831 		ldr	r3, [r3, #296]
 2398 00c4 5BB1     		cbz	r3, .L223
 2399              	.LVL216:
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2400              		.loc 1 2196 0
 2401 00c6 4FF08052 		mov	r2, #268435456
 2402 00ca 084B     		ldr	r3, .L225+4
 2403 00cc 1A60     		str	r2, [r3]
 2404              		.syntax unified
 2405              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2406 00ce BFF34F8F 		dsb
 2407              	@ 0 "" 2
 2408              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2409 00d2 BFF36F8F 		isb
 2410              	@ 0 "" 2
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2411              		.loc 1 2193 0
 2412              		.thumb
 2413              		.syntax unified
 2414 00d6 0124     		movs	r4, #1
 2415              	.LVL217:
 2416 00d8 02E0     		b	.L212
 2417              	.LVL218:
 2418              	.L221:
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2419              		.loc 1 2108 0
 2420 00da 0024     		movs	r4, #0
 2421 00dc 00E0     		b	.L212
 2422              	.LVL219:
 2423              	.L223:
 2424 00de 0024     		movs	r4, #0
 2425              	.LVL220:
 2426              	.L212:
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2427              		.loc 1 2209 0
 2428 00e0 FFF7FEFF 		bl	vPortExitCritical
 2429              	.LVL221:
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2430              		.loc 1 2212 0
 2431 00e4 2046     		mov	r0, r4
 2432 00e6 70BD     		pop	{r4, r5, r6, pc}
 2433              	.LVL222:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 140


 2434              	.L226:
 2435              		.align	2
 2436              	.L225:
 2437 00e8 00000000 		.word	.LANCHOR0
 2438 00ec 04ED00E0 		.word	-536810236
 2439              		.cfi_endproc
 2440              	.LFE154:
 2441              		.size	xTaskResumeAll, .-xTaskResumeAll
 2442              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2443              		.align	2
 2444              		.global	vTaskDelayUntil
 2445              		.thumb
 2446              		.thumb_func
 2447              		.type	vTaskDelayUntil, %function
 2448              	vTaskDelayUntil:
 2449              	.LFB141:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
 2450              		.loc 1 1205 0
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 0
 2453              		@ frame_needed = 0, uses_anonymous_args = 0
 2454              	.LVL223:
 2455 0000 38B5     		push	{r3, r4, r5, lr}
 2456              		.cfi_def_cfa_offset 16
 2457              		.cfi_offset 3, -16
 2458              		.cfi_offset 4, -12
 2459              		.cfi_offset 5, -8
 2460              		.cfi_offset 14, -4
 2461              	.LVL224:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2462              		.loc 1 1209 0
 2463 0002 40B9     		cbnz	r0, .L228
 2464              	.LBB134:
 2465              	.LBB135:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2466              		.loc 2 156 0
 2467              		.syntax unified
 2468              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2469 0004 4FF03F03 			mov r3, #63												
 2470 0008 83F31188 		msr basepri, r3											
 2471 000c BFF36F8F 		isb														
 2472 0010 BFF34F8F 		dsb														
 2473              	
 2474              	@ 0 "" 2
 2475              	.LVL225:
 2476              		.thumb
 2477              		.syntax unified
 2478              	.L229:
 2479 0014 FEE7     		b	.L229
 2480              	.L228:
 2481 0016 0546     		mov	r5, r0
 2482              	.LBE135:
 2483              	.LBE134:
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2484              		.loc 1 1210 0
 2485 0018 41B9     		cbnz	r1, .L230
 2486              	.LBB136:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 141


 2487              	.LBB137:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2488              		.loc 2 156 0
 2489              		.syntax unified
 2490              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2491 001a 4FF03F03 			mov r3, #63												
 2492 001e 83F31188 		msr basepri, r3											
 2493 0022 BFF36F8F 		isb														
 2494 0026 BFF34F8F 		dsb														
 2495              	
 2496              	@ 0 "" 2
 2497              	.LVL226:
 2498              		.thumb
 2499              		.syntax unified
 2500              	.L231:
 2501 002a FEE7     		b	.L231
 2502              	.L230:
 2503              	.LBE137:
 2504              	.LBE136:
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2505              		.loc 1 1211 0
 2506 002c 1D4B     		ldr	r3, .L243
 2507 002e D3F81831 		ldr	r3, [r3, #280]
 2508 0032 43B1     		cbz	r3, .L232
 2509              	.LBB138:
 2510              	.LBB139:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2511              		.loc 2 156 0
 2512              		.syntax unified
 2513              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2514 0034 4FF03F03 			mov r3, #63												
 2515 0038 83F31188 		msr basepri, r3											
 2516 003c BFF36F8F 		isb														
 2517 0040 BFF34F8F 		dsb														
 2518              	
 2519              	@ 0 "" 2
 2520              	.LVL227:
 2521              		.thumb
 2522              		.syntax unified
 2523              	.L233:
 2524 0044 FEE7     		b	.L233
 2525              	.L232:
 2526 0046 0C46     		mov	r4, r1
 2527              	.LBE139:
 2528              	.LBE138:
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2529              		.loc 1 1213 0
 2530 0048 FFF7FEFF 		bl	vTaskSuspendAll
 2531              	.LVL228:
 2532              	.LBB140:
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2533              		.loc 1 1217 0
 2534 004c 154B     		ldr	r3, .L243
 2535 004e D3F81401 		ldr	r0, [r3, #276]
 2536              	.LVL229:
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2537              		.loc 1 1220 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 142


 2538 0052 2A68     		ldr	r2, [r5]
 2539 0054 A318     		adds	r3, r4, r2
 2540              	.LVL230:
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2541              		.loc 1 1222 0
 2542 0056 9042     		cmp	r0, r2
 2543 0058 05D2     		bcs	.L234
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2544              		.loc 1 1229 0
 2545 005a 9A42     		cmp	r2, r3
 2546 005c 09D9     		bls	.L238
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2547              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2548 005e 9842     		cmp	r0, r3
 2549 0060 09D3     		bcc	.L239
 2550              	.LBE140:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2551              		.loc 1 1207 0 is_stmt 1
 2552 0062 0022     		movs	r2, #0
 2553 0064 0CE0     		b	.L235
 2554              	.L234:
 2555              	.LBB141:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2556              		.loc 1 1243 0
 2557 0066 9A42     		cmp	r2, r3
 2558 0068 07D8     		bhi	.L240
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2559              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2560 006a 9842     		cmp	r0, r3
 2561 006c 07D3     		bcc	.L241
 2562              	.LBE141:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2563              		.loc 1 1207 0 is_stmt 1
 2564 006e 0022     		movs	r2, #0
 2565 0070 06E0     		b	.L235
 2566              	.L238:
 2567 0072 0022     		movs	r2, #0
 2568 0074 04E0     		b	.L235
 2569              	.L239:
 2570              	.LBB142:
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2571              		.loc 1 1231 0
 2572 0076 0122     		movs	r2, #1
 2573 0078 02E0     		b	.L235
 2574              	.L240:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2575              		.loc 1 1245 0
 2576 007a 0122     		movs	r2, #1
 2577 007c 00E0     		b	.L235
 2578              	.L241:
 2579 007e 0122     		movs	r2, #1
 2580              	.L235:
 2581              	.LVL231:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2582              		.loc 1 1254 0
 2583 0080 2B60     		str	r3, [r5]
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 143


 2584              		.loc 1 1256 0
 2585 0082 1AB1     		cbz	r2, .L236
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2586              		.loc 1 1262 0
 2587 0084 0021     		movs	r1, #0
 2588 0086 181A     		subs	r0, r3, r0
 2589              	.LVL232:
 2590 0088 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2591              	.LVL233:
 2592              	.L236:
 2593              	.LBE142:
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2594              		.loc 1 1269 0
 2595 008c FFF7FEFF 		bl	xTaskResumeAll
 2596              	.LVL234:
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2597              		.loc 1 1273 0
 2598 0090 38B9     		cbnz	r0, .L227
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2599              		.loc 1 1275 0
 2600 0092 4FF08052 		mov	r2, #268435456
 2601 0096 044B     		ldr	r3, .L243+4
 2602 0098 1A60     		str	r2, [r3]
 2603              		.syntax unified
 2604              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2605 009a BFF34F8F 		dsb
 2606              	@ 0 "" 2
 2607              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2608 009e BFF36F8F 		isb
 2609              	@ 0 "" 2
 2610              		.thumb
 2611              		.syntax unified
 2612              	.L227:
 2613 00a2 38BD     		pop	{r3, r4, r5, pc}
 2614              	.LVL235:
 2615              	.L244:
 2616              		.align	2
 2617              	.L243:
 2618 00a4 00000000 		.word	.LANCHOR0
 2619 00a8 04ED00E0 		.word	-536810236
 2620              		.cfi_endproc
 2621              	.LFE141:
 2622              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2623              		.section	.text.vTaskDelay,"ax",%progbits
 2624              		.align	2
 2625              		.global	vTaskDelay
 2626              		.thumb
 2627              		.thumb_func
 2628              		.type	vTaskDelay, %function
 2629              	vTaskDelay:
 2630              	.LFB142:
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2631              		.loc 1 1289 0
 2632              		.cfi_startproc
 2633              		@ args = 0, pretend = 0, frame = 0
 2634              		@ frame_needed = 0, uses_anonymous_args = 0
 2635              	.LVL236:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 144


 2636 0000 10B5     		push	{r4, lr}
 2637              		.cfi_def_cfa_offset 8
 2638              		.cfi_offset 4, -8
 2639              		.cfi_offset 14, -4
 2640              	.LVL237:
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2641              		.loc 1 1293 0
 2642 0002 B0B1     		cbz	r0, .L250
 2643 0004 0446     		mov	r4, r0
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
 2644              		.loc 1 1295 0
 2645 0006 104B     		ldr	r3, .L252
 2646 0008 D3F81831 		ldr	r3, [r3, #280]
 2647 000c 43B1     		cbz	r3, .L247
 2648              	.LBB143:
 2649              	.LBB144:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2650              		.loc 2 156 0
 2651              		.syntax unified
 2652              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2653 000e 4FF03F03 			mov r3, #63												
 2654 0012 83F31188 		msr basepri, r3											
 2655 0016 BFF36F8F 		isb														
 2656 001a BFF34F8F 		dsb														
 2657              	
 2658              	@ 0 "" 2
 2659              	.LVL238:
 2660              		.thumb
 2661              		.syntax unified
 2662              	.L248:
 2663 001e FEE7     		b	.L248
 2664              	.L247:
 2665              	.LBE144:
 2666              	.LBE143:
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2667              		.loc 1 1296 0
 2668 0020 FFF7FEFF 		bl	vTaskSuspendAll
 2669              	.LVL239:
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2670              		.loc 1 1307 0
 2671 0024 0021     		movs	r1, #0
 2672 0026 2046     		mov	r0, r4
 2673 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2674              	.LVL240:
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2675              		.loc 1 1309 0
 2676 002c FFF7FEFF 		bl	xTaskResumeAll
 2677              	.LVL241:
 2678 0030 00E0     		b	.L246
 2679              	.LVL242:
 2680              	.L250:
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2681              		.loc 1 1290 0
 2682 0032 0020     		movs	r0, #0
 2683              	.LVL243:
 2684              	.L246:
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 145


 2685              		.loc 1 1318 0
 2686 0034 38B9     		cbnz	r0, .L245
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2687              		.loc 1 1320 0
 2688 0036 4FF08052 		mov	r2, #268435456
 2689 003a 044B     		ldr	r3, .L252+4
 2690 003c 1A60     		str	r2, [r3]
 2691              		.syntax unified
 2692              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2693 003e BFF34F8F 		dsb
 2694              	@ 0 "" 2
 2695              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2696 0042 BFF36F8F 		isb
 2697              	@ 0 "" 2
 2698              		.thumb
 2699              		.syntax unified
 2700              	.L245:
 2701 0046 10BD     		pop	{r4, pc}
 2702              	.L253:
 2703              		.align	2
 2704              	.L252:
 2705 0048 00000000 		.word	.LANCHOR0
 2706 004c 04ED00E0 		.word	-536810236
 2707              		.cfi_endproc
 2708              	.LFE142:
 2709              		.size	vTaskDelay, .-vTaskDelay
 2710              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2711              		.align	2
 2712              		.global	vTaskSwitchContext
 2713              		.thumb
 2714              		.thumb_func
 2715              		.type	vTaskSwitchContext, %function
 2716              	vTaskSwitchContext:
 2717              	.LFB161:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2718              		.loc 1 2852 0
 2719              		.cfi_startproc
 2720              		@ args = 0, pretend = 0, frame = 0
 2721              		@ frame_needed = 0, uses_anonymous_args = 0
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2722              		.loc 1 2853 0
 2723 0000 304B     		ldr	r3, .L265
 2724 0002 D3F81831 		ldr	r3, [r3, #280]
 2725 0006 23B1     		cbz	r3, .L255
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 2726              		.loc 1 2857 0
 2727 0008 0122     		movs	r2, #1
 2728 000a 2E4B     		ldr	r3, .L265
 2729 000c C3F82821 		str	r2, [r3, #296]
 2730 0010 7047     		bx	lr
 2731              	.L255:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2732              		.loc 1 2852 0
 2733 0012 10B5     		push	{r4, lr}
 2734              		.cfi_def_cfa_offset 8
 2735              		.cfi_offset 4, -8
 2736              		.cfi_offset 14, -4
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 146


2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2737              		.loc 1 2861 0
 2738 0014 2B4B     		ldr	r3, .L265
 2739 0016 0022     		movs	r2, #0
 2740 0018 C3F82821 		str	r2, [r3, #296]
 2741              	.LBB145:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2742              		.loc 1 2893 0
 2743 001c D3F80031 		ldr	r3, [r3, #256]
 2744 0020 1B6B     		ldr	r3, [r3, #48]
 2745              	.LVL244:
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2746              		.loc 1 2896 0
 2747 0022 1A68     		ldr	r2, [r3]
 2748 0024 B2F1A53F 		cmp	r2, #-1515870811
 2749 0028 0BD1     		bne	.L257
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2750              		.loc 1 2897 0 discriminator 1
 2751 002a 5A68     		ldr	r2, [r3, #4]
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2752              		.loc 1 2896 0 discriminator 1
 2753 002c B2F1A53F 		cmp	r2, #-1515870811
 2754 0030 07D1     		bne	.L257
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2755              		.loc 1 2898 0
 2756 0032 9A68     		ldr	r2, [r3, #8]
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2757              		.loc 1 2897 0
 2758 0034 B2F1A53F 		cmp	r2, #-1515870811
 2759 0038 03D1     		bne	.L257
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
 2760              		.loc 1 2899 0
 2761 003a DB68     		ldr	r3, [r3, #12]
 2762              	.LVL245:
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2763              		.loc 1 2898 0
 2764 003c B3F1A53F 		cmp	r3, #-1515870811
 2765 0040 07D0     		beq	.L258
 2766              	.L257:
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
 2767              		.loc 1 2901 0
 2768 0042 204B     		ldr	r3, .L265
 2769 0044 D3F80001 		ldr	r0, [r3, #256]
 2770 0048 D3F80011 		ldr	r1, [r3, #256]
 2771 004c 3431     		adds	r1, r1, #52
 2772 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2773              	.LVL246:
 2774              	.L258:
 2775              	.LBE145:
 2776              	.LBB146:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2777              		.loc 1 2907 0
 2778 0052 1C4B     		ldr	r3, .L265
 2779 0054 D3F80C31 		ldr	r3, [r3, #268]
 2780              	.LVL247:
 2781 0058 0AE0     		b	.L259
 2782              	.L262:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 147


2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2783              		.loc 1 2907 0 is_stmt 0 discriminator 5
 2784 005a 43B9     		cbnz	r3, .L260
 2785              	.LBB147:
 2786              	.LBB148:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2787              		.loc 2 156 0 is_stmt 1
 2788              		.syntax unified
 2789              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2790 005c 4FF03F03 			mov r3, #63												
 2791 0060 83F31188 		msr basepri, r3											
 2792 0064 BFF36F8F 		isb														
 2793 0068 BFF34F8F 		dsb														
 2794              	
 2795              	@ 0 "" 2
 2796              	.LVL248:
 2797              		.thumb
 2798              		.syntax unified
 2799              	.L261:
 2800 006c FEE7     		b	.L261
 2801              	.LVL249:
 2802              	.L260:
 2803              	.LBE148:
 2804              	.LBE147:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2805              		.loc 1 2907 0 discriminator 3
 2806 006e 013B     		subs	r3, r3, #1
 2807              	.LVL250:
 2808              	.L259:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2809              		.loc 1 2907 0 is_stmt 0 discriminator 4
 2810 0070 03EB8301 		add	r1, r3, r3, lsl #2
 2811 0074 8A00     		lsls	r2, r1, #2
 2812 0076 1349     		ldr	r1, .L265
 2813 0078 0A44     		add	r2, r2, r1
 2814 007a 126B     		ldr	r2, [r2, #48]
 2815 007c 002A     		cmp	r2, #0
 2816 007e ECD0     		beq	.L262
 2817              	.LVL251:
 2818              	.LBB149:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2819              		.loc 1 2907 0 discriminator 6
 2820 0080 0846     		mov	r0, r1
 2821 0082 9900     		lsls	r1, r3, #2
 2822 0084 CC18     		adds	r4, r1, r3
 2823 0086 A200     		lsls	r2, r4, #2
 2824 0088 0244     		add	r2, r2, r0
 2825 008a 546B     		ldr	r4, [r2, #52]
 2826 008c 6468     		ldr	r4, [r4, #4]
 2827 008e 5463     		str	r4, [r2, #52]
 2828 0090 3030     		adds	r0, r0, #48
 2829 0092 1944     		add	r1, r1, r3
 2830 0094 8A00     		lsls	r2, r1, #2
 2831 0096 0832     		adds	r2, r2, #8
 2832 0098 0244     		add	r2, r2, r0
 2833 009a 9442     		cmp	r4, r2
 2834 009c 06D1     		bne	.L263
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 148


2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2835              		.loc 1 2907 0 discriminator 7
 2836 009e 6068     		ldr	r0, [r4, #4]
 2837 00a0 03EB8301 		add	r1, r3, r3, lsl #2
 2838 00a4 8A00     		lsls	r2, r1, #2
 2839 00a6 0749     		ldr	r1, .L265
 2840 00a8 0A44     		add	r2, r2, r1
 2841 00aa 5063     		str	r0, [r2, #52]
 2842              	.L263:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2843              		.loc 1 2907 0 discriminator 9
 2844 00ac 0549     		ldr	r1, .L265
 2845 00ae 03EB8300 		add	r0, r3, r3, lsl #2
 2846 00b2 8200     		lsls	r2, r0, #2
 2847 00b4 0A44     		add	r2, r2, r1
 2848 00b6 526B     		ldr	r2, [r2, #52]
 2849 00b8 D268     		ldr	r2, [r2, #12]
 2850 00ba C1F80021 		str	r2, [r1, #256]
 2851              	.LBE149:
 2852 00be C1F80C31 		str	r3, [r1, #268]
 2853 00c2 10BD     		pop	{r4, pc}
 2854              	.L266:
 2855              		.align	2
 2856              	.L265:
 2857 00c4 00000000 		.word	.LANCHOR0
 2858              	.LBE146:
 2859              		.cfi_endproc
 2860              	.LFE161:
 2861              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2862              		.section	.text.vTaskSuspend,"ax",%progbits
 2863              		.align	2
 2864              		.global	vTaskSuspend
 2865              		.thumb
 2866              		.thumb_func
 2867              		.type	vTaskSuspend, %function
 2868              	vTaskSuspend:
 2869              	.LFB147:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 2870              		.loc 1 1631 0 is_stmt 1
 2871              		.cfi_startproc
 2872              		@ args = 0, pretend = 0, frame = 0
 2873              		@ frame_needed = 0, uses_anonymous_args = 0
 2874              	.LVL252:
 2875 0000 38B5     		push	{r3, r4, r5, lr}
 2876              		.cfi_def_cfa_offset 16
 2877              		.cfi_offset 3, -16
 2878              		.cfi_offset 4, -12
 2879              		.cfi_offset 5, -8
 2880              		.cfi_offset 14, -4
 2881 0002 0446     		mov	r4, r0
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2882              		.loc 1 1634 0
 2883 0004 FFF7FEFF 		bl	vPortEnterCritical
 2884              	.LVL253:
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2885              		.loc 1 1638 0
 2886 0008 14B9     		cbnz	r4, .L268
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 149


1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2887              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2888 000a 294B     		ldr	r3, .L278
 2889 000c D3F80041 		ldr	r4, [r3, #256]
 2890              	.LVL254:
 2891              	.L268:
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2892              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2893 0010 251D     		adds	r5, r4, #4
 2894 0012 2846     		mov	r0, r5
 2895 0014 FFF7FEFF 		bl	uxListRemove
 2896              	.LVL255:
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2897              		.loc 1 1654 0 discriminator 4
 2898 0018 A36A     		ldr	r3, [r4, #40]
 2899 001a 1BB1     		cbz	r3, .L269
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2900              		.loc 1 1656 0
 2901 001c 04F11800 		add	r0, r4, #24
 2902 0020 FFF7FEFF 		bl	uxListRemove
 2903              	.LVL256:
 2904              	.L269:
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2905              		.loc 1 1663 0
 2906 0024 2946     		mov	r1, r5
 2907 0026 2248     		ldr	r0, .L278
 2908 0028 FFF7FEFF 		bl	vListInsertEnd
 2909              	.LVL257:
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2910              		.loc 1 1667 0
 2911 002c 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 2912 0030 DBB2     		uxtb	r3, r3
 2913 0032 012B     		cmp	r3, #1
 2914 0034 02D1     		bne	.L270
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2915              		.loc 1 1671 0
 2916 0036 0023     		movs	r3, #0
 2917 0038 84F86430 		strb	r3, [r4, #100]
 2918              	.L270:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2919              		.loc 1 1676 0
 2920 003c FFF7FEFF 		bl	vPortExitCritical
 2921              	.LVL258:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2922              		.loc 1 1678 0
 2923 0040 1B4B     		ldr	r3, .L278
 2924 0042 D3F80431 		ldr	r3, [r3, #260]
 2925 0046 2BB1     		cbz	r3, .L271
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2926              		.loc 1 1682 0
 2927 0048 FFF7FEFF 		bl	vPortEnterCritical
 2928              	.LVL259:
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2929              		.loc 1 1684 0
 2930 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2931              	.LVL260:
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 150


 2932              		.loc 1 1686 0
 2933 0050 FFF7FEFF 		bl	vPortExitCritical
 2934              	.LVL261:
 2935              	.L271:
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2936              		.loc 1 1693 0
 2937 0054 164B     		ldr	r3, .L278
 2938 0056 D3F80031 		ldr	r3, [r3, #256]
 2939 005a 9C42     		cmp	r4, r3
 2940 005c 26D1     		bne	.L267
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2941              		.loc 1 1695 0
 2942 005e 144B     		ldr	r3, .L278
 2943 0060 D3F80431 		ldr	r3, [r3, #260]
 2944 0064 ABB1     		cbz	r3, .L273
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2945              		.loc 1 1698 0
 2946 0066 124B     		ldr	r3, .L278
 2947 0068 D3F81831 		ldr	r3, [r3, #280]
 2948 006c 43B1     		cbz	r3, .L274
 2949              	.LBB150:
 2950              	.LBB151:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2951              		.loc 2 156 0
 2952              		.syntax unified
 2953              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2954 006e 4FF03F03 			mov r3, #63												
 2955 0072 83F31188 		msr basepri, r3											
 2956 0076 BFF36F8F 		isb														
 2957 007a BFF34F8F 		dsb														
 2958              	
 2959              	@ 0 "" 2
 2960              	.LVL262:
 2961              		.thumb
 2962              		.syntax unified
 2963              	.L275:
 2964 007e FEE7     		b	.L275
 2965              	.L274:
 2966              	.LBE151:
 2967              	.LBE150:
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2968              		.loc 1 1699 0
 2969 0080 4FF08052 		mov	r2, #268435456
 2970 0084 0B4B     		ldr	r3, .L278+4
 2971 0086 1A60     		str	r2, [r3]
 2972              		.syntax unified
 2973              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2974 0088 BFF34F8F 		dsb
 2975              	@ 0 "" 2
 2976              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2977 008c BFF36F8F 		isb
 2978              	@ 0 "" 2
 2979              		.thumb
 2980              		.syntax unified
 2981 0090 38BD     		pop	{r3, r4, r5, pc}
 2982              	.LVL263:
 2983              	.L273:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 151


1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2984              		.loc 1 1706 0
 2985 0092 074B     		ldr	r3, .L278
 2986 0094 1A68     		ldr	r2, [r3]
 2987 0096 D3F8FC30 		ldr	r3, [r3, #252]
 2988 009a 9A42     		cmp	r2, r3
 2989 009c 04D1     		bne	.L276
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2990              		.loc 1 1712 0
 2991 009e 0022     		movs	r2, #0
 2992 00a0 034B     		ldr	r3, .L278
 2993 00a2 C3F80021 		str	r2, [r3, #256]
 2994 00a6 38BD     		pop	{r3, r4, r5, pc}
 2995              	.LVL264:
 2996              	.L276:
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2997              		.loc 1 1716 0
 2998 00a8 FFF7FEFF 		bl	vTaskSwitchContext
 2999              	.LVL265:
 3000              	.L267:
 3001 00ac 38BD     		pop	{r3, r4, r5, pc}
 3002              	.LVL266:
 3003              	.L279:
 3004 00ae 00BF     		.align	2
 3005              	.L278:
 3006 00b0 00000000 		.word	.LANCHOR0
 3007 00b4 04ED00E0 		.word	-536810236
 3008              		.cfi_endproc
 3009              	.LFE147:
 3010              		.size	vTaskSuspend, .-vTaskSuspend
 3011              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3012              		.align	2
 3013              		.global	vTaskPlaceOnEventList
 3014              		.thumb
 3015              		.thumb_func
 3016              		.type	vTaskPlaceOnEventList, %function
 3017              	vTaskPlaceOnEventList:
 3018              	.LFB162:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 3019              		.loc 1 2922 0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 0
 3022              		@ frame_needed = 0, uses_anonymous_args = 0
 3023              	.LVL267:
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3024              		.loc 1 2923 0
 3025 0000 40B9     		cbnz	r0, .L281
 3026              	.LBB152:
 3027              	.LBB153:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3028              		.loc 2 156 0
 3029              		.syntax unified
 3030              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3031 0002 4FF03F03 			mov r3, #63												
 3032 0006 83F31188 		msr basepri, r3											
 3033 000a BFF36F8F 		isb														
 3034 000e BFF34F8F 		dsb														
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 152


 3035              	
 3036              	@ 0 "" 2
 3037              	.LVL268:
 3038              		.thumb
 3039              		.syntax unified
 3040              	.L282:
 3041 0012 FEE7     		b	.L282
 3042              	.L281:
 3043              	.LBE153:
 3044              	.LBE152:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 3045              		.loc 1 2922 0
 3046 0014 10B5     		push	{r4, lr}
 3047              		.cfi_def_cfa_offset 8
 3048              		.cfi_offset 4, -8
 3049              		.cfi_offset 14, -4
 3050 0016 0C46     		mov	r4, r1
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3051              		.loc 1 2932 0
 3052 0018 054B     		ldr	r3, .L284
 3053 001a D3F80011 		ldr	r1, [r3, #256]
 3054              	.LVL269:
 3055 001e 1831     		adds	r1, r1, #24
 3056 0020 FFF7FEFF 		bl	vListInsert
 3057              	.LVL270:
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3058              		.loc 1 2934 0
 3059 0024 0121     		movs	r1, #1
 3060 0026 2046     		mov	r0, r4
 3061 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3062              	.LVL271:
 3063 002c 10BD     		pop	{r4, pc}
 3064              	.LVL272:
 3065              	.L285:
 3066 002e 00BF     		.align	2
 3067              	.L284:
 3068 0030 00000000 		.word	.LANCHOR0
 3069              		.cfi_endproc
 3070              	.LFE162:
 3071              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 3072              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3073              		.align	2
 3074              		.global	vTaskPlaceOnUnorderedEventList
 3075              		.thumb
 3076              		.thumb_func
 3077              		.type	vTaskPlaceOnUnorderedEventList, %function
 3078              	vTaskPlaceOnUnorderedEventList:
 3079              	.LFB163:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 3080              		.loc 1 2939 0
 3081              		.cfi_startproc
 3082              		@ args = 0, pretend = 0, frame = 0
 3083              		@ frame_needed = 0, uses_anonymous_args = 0
 3084              	.LVL273:
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3085              		.loc 1 2940 0
 3086 0000 40B9     		cbnz	r0, .L287
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 153


 3087              	.LBB154:
 3088              	.LBB155:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3089              		.loc 2 156 0
 3090              		.syntax unified
 3091              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3092 0002 4FF03F03 			mov r3, #63												
 3093 0006 83F31188 		msr basepri, r3											
 3094 000a BFF36F8F 		isb														
 3095 000e BFF34F8F 		dsb														
 3096              	
 3097              	@ 0 "" 2
 3098              	.LVL274:
 3099              		.thumb
 3100              		.syntax unified
 3101              	.L288:
 3102 0012 FEE7     		b	.L288
 3103              	.L287:
 3104 0014 0346     		mov	r3, r0
 3105              	.LBE155:
 3106              	.LBE154:
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3107              		.loc 1 2944 0
 3108 0016 1048     		ldr	r0, .L292
 3109              	.LVL275:
 3110 0018 D0F81801 		ldr	r0, [r0, #280]
 3111 001c 40B9     		cbnz	r0, .L289
 3112              	.LBB156:
 3113              	.LBB157:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3114              		.loc 2 156 0
 3115              		.syntax unified
 3116              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3117 001e 4FF03F03 			mov r3, #63												
 3118 0022 83F31188 		msr basepri, r3											
 3119 0026 BFF36F8F 		isb														
 3120 002a BFF34F8F 		dsb														
 3121              	
 3122              	@ 0 "" 2
 3123              	.LVL276:
 3124              		.thumb
 3125              		.syntax unified
 3126              	.L290:
 3127 002e FEE7     		b	.L290
 3128              	.LVL277:
 3129              	.L289:
 3130              	.LBE157:
 3131              	.LBE156:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 3132              		.loc 1 2939 0
 3133 0030 10B5     		push	{r4, lr}
 3134              		.cfi_def_cfa_offset 8
 3135              		.cfi_offset 4, -8
 3136              		.cfi_offset 14, -4
 3137 0032 1846     		mov	r0, r3
 3138 0034 1446     		mov	r4, r2
 3139 0036 0B46     		mov	r3, r1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 154


 3140              	.LVL278:
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3141              		.loc 1 2949 0
 3142 0038 074A     		ldr	r2, .L292
 3143              	.LVL279:
 3144 003a D2F80011 		ldr	r1, [r2, #256]
 3145              	.LVL280:
 3146 003e 43F00043 		orr	r3, r3, #-2147483648
 3147              	.LVL281:
 3148 0042 8B61     		str	r3, [r1, #24]
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3149              		.loc 1 2956 0
 3150 0044 D2F80011 		ldr	r1, [r2, #256]
 3151 0048 1831     		adds	r1, r1, #24
 3152 004a FFF7FEFF 		bl	vListInsertEnd
 3153              	.LVL282:
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3154              		.loc 1 2958 0
 3155 004e 0121     		movs	r1, #1
 3156 0050 2046     		mov	r0, r4
 3157 0052 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3158              	.LVL283:
 3159 0056 10BD     		pop	{r4, pc}
 3160              	.LVL284:
 3161              	.L293:
 3162              		.align	2
 3163              	.L292:
 3164 0058 00000000 		.word	.LANCHOR0
 3165              		.cfi_endproc
 3166              	.LFE163:
 3167              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 3168              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 3169              		.align	2
 3170              		.global	vTaskPlaceOnEventListRestricted
 3171              		.thumb
 3172              		.thumb_func
 3173              		.type	vTaskPlaceOnEventListRestricted, %function
 3174              	vTaskPlaceOnEventListRestricted:
 3175              	.LFB164:
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
 3176              		.loc 1 2965 0
 3177              		.cfi_startproc
 3178              		@ args = 0, pretend = 0, frame = 0
 3179              		@ frame_needed = 0, uses_anonymous_args = 0
 3180              	.LVL285:
 3181 0000 38B5     		push	{r3, r4, r5, lr}
 3182              		.cfi_def_cfa_offset 16
 3183              		.cfi_offset 3, -16
 3184              		.cfi_offset 4, -12
 3185              		.cfi_offset 5, -8
 3186              		.cfi_offset 14, -4
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3187              		.loc 1 2966 0
 3188 0002 40B9     		cbnz	r0, .L295
 3189              	.LBB158:
 3190              	.LBB159:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 155


 3191              		.loc 2 156 0
 3192              		.syntax unified
 3193              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3194 0004 4FF03F03 			mov r3, #63												
 3195 0008 83F31188 		msr basepri, r3											
 3196 000c BFF36F8F 		isb														
 3197 0010 BFF34F8F 		dsb														
 3198              	
 3199              	@ 0 "" 2
 3200              	.LVL286:
 3201              		.thumb
 3202              		.syntax unified
 3203              	.L296:
 3204 0014 FEE7     		b	.L296
 3205              	.L295:
 3206 0016 0C46     		mov	r4, r1
 3207 0018 1546     		mov	r5, r2
 3208              	.LBE159:
 3209              	.LBE158:
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3210              		.loc 1 2978 0
 3211 001a 074A     		ldr	r2, .L300
 3212              	.LVL287:
 3213 001c D2F80011 		ldr	r1, [r2, #256]
 3214              	.LVL288:
 3215 0020 1831     		adds	r1, r1, #24
 3216 0022 FFF7FEFF 		bl	vListInsertEnd
 3217              	.LVL289:
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3218              		.loc 1 2983 0
 3219 0026 0DB1     		cbz	r5, .L297
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3220              		.loc 1 2985 0
 3221 0028 4FF0FF34 		mov	r4, #-1
 3222              	.LVL290:
 3223              	.L297:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3224              		.loc 1 2989 0
 3225 002c 2946     		mov	r1, r5
 3226 002e 2046     		mov	r0, r4
 3227 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3228              	.LVL291:
 3229 0034 38BD     		pop	{r3, r4, r5, pc}
 3230              	.LVL292:
 3231              	.L301:
 3232 0036 00BF     		.align	2
 3233              	.L300:
 3234 0038 00000000 		.word	.LANCHOR0
 3235              		.cfi_endproc
 3236              	.LFE164:
 3237              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 3238              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3239              		.align	2
 3240              		.global	xTaskRemoveFromEventList
 3241              		.thumb
 3242              		.thumb_func
 3243              		.type	xTaskRemoveFromEventList, %function
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 156


 3244              	xTaskRemoveFromEventList:
 3245              	.LFB165:
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3246              		.loc 1 2996 0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 0
 3249              		@ frame_needed = 0, uses_anonymous_args = 0
 3250              	.LVL293:
 3251 0000 38B5     		push	{r3, r4, r5, lr}
 3252              		.cfi_def_cfa_offset 16
 3253              		.cfi_offset 3, -16
 3254              		.cfi_offset 4, -12
 3255              		.cfi_offset 5, -8
 3256              		.cfi_offset 14, -4
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3257              		.loc 1 3013 0
 3258 0002 C368     		ldr	r3, [r0, #12]
 3259 0004 DC68     		ldr	r4, [r3, #12]
 3260              	.LVL294:
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3261              		.loc 1 3014 0
 3262 0006 44B9     		cbnz	r4, .L303
 3263              	.LBB160:
 3264              	.LBB161:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3265              		.loc 2 156 0
 3266              		.syntax unified
 3267              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3268 0008 4FF03F03 			mov r3, #63												
 3269 000c 83F31188 		msr basepri, r3											
 3270 0010 BFF36F8F 		isb														
 3271 0014 BFF34F8F 		dsb														
 3272              	
 3273              	@ 0 "" 2
 3274              	.LVL295:
 3275              		.thumb
 3276              		.syntax unified
 3277              	.L304:
 3278 0018 FEE7     		b	.L304
 3279              	.L303:
 3280              	.LBE161:
 3281              	.LBE160:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3282              		.loc 1 3015 0
 3283 001a 04F11805 		add	r5, r4, #24
 3284 001e 2846     		mov	r0, r5
 3285              	.LVL296:
 3286 0020 FFF7FEFF 		bl	uxListRemove
 3287              	.LVL297:
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3288              		.loc 1 3017 0
 3289 0024 154B     		ldr	r3, .L311
 3290 0026 D3F81831 		ldr	r3, [r3, #280]
 3291 002a ABB9     		cbnz	r3, .L305
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3292              		.loc 1 3019 0
 3293 002c 251D     		adds	r5, r4, #4
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 157


 3294 002e 2846     		mov	r0, r5
 3295 0030 FFF7FEFF 		bl	uxListRemove
 3296              	.LVL298:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3297              		.loc 1 3020 0
 3298 0034 E36A     		ldr	r3, [r4, #44]
 3299 0036 114A     		ldr	r2, .L311
 3300 0038 D2F80C21 		ldr	r2, [r2, #268]
 3301 003c 9342     		cmp	r3, r2
 3302 003e 02D9     		bls	.L306
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3303              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3304 0040 0E4A     		ldr	r2, .L311
 3305 0042 C2F80C31 		str	r3, [r2, #268]
 3306              	.L306:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3307              		.loc 1 3020 0 discriminator 3
 3308 0046 03EB8303 		add	r3, r3, r3, lsl #2
 3309 004a 9A00     		lsls	r2, r3, #2
 3310 004c 2946     		mov	r1, r5
 3311 004e 0C48     		ldr	r0, .L311+4
 3312 0050 1044     		add	r0, r0, r2
 3313 0052 FFF7FEFF 		bl	vListInsertEnd
 3314              	.LVL299:
 3315 0056 03E0     		b	.L307
 3316              	.L305:
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3317              		.loc 1 3026 0 is_stmt 1
 3318 0058 2946     		mov	r1, r5
 3319 005a 0A48     		ldr	r0, .L311+8
 3320 005c FFF7FEFF 		bl	vListInsertEnd
 3321              	.LVL300:
 3322              	.L307:
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3323              		.loc 1 3029 0
 3324 0060 E26A     		ldr	r2, [r4, #44]
 3325 0062 064B     		ldr	r3, .L311
 3326 0064 D3F80031 		ldr	r3, [r3, #256]
 3327 0068 DB6A     		ldr	r3, [r3, #44]
 3328 006a 9A42     		cmp	r2, r3
 3329 006c 04D9     		bls	.L309
 3330              	.LVL301:
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3331              		.loc 1 3038 0
 3332 006e 0120     		movs	r0, #1
 3333 0070 024B     		ldr	r3, .L311
 3334 0072 C3F82801 		str	r0, [r3, #296]
 3335 0076 38BD     		pop	{r3, r4, r5, pc}
 3336              	.LVL302:
 3337              	.L309:
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3338              		.loc 1 3042 0
 3339 0078 0020     		movs	r0, #0
 3340              	.LVL303:
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3341              		.loc 1 3060 0
 3342 007a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 158


 3343              	.LVL304:
 3344              	.L312:
 3345              		.align	2
 3346              	.L311:
 3347 007c 00000000 		.word	.LANCHOR0
 3348 0080 30000000 		.word	.LANCHOR0+48
 3349 0084 14000000 		.word	.LANCHOR0+20
 3350              		.cfi_endproc
 3351              	.LFE165:
 3352              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3353              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3354              		.align	2
 3355              		.global	vTaskRemoveFromUnorderedEventList
 3356              		.thumb
 3357              		.thumb_func
 3358              		.type	vTaskRemoveFromUnorderedEventList, %function
 3359              	vTaskRemoveFromUnorderedEventList:
 3360              	.LFB166:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3361              		.loc 1 3064 0
 3362              		.cfi_startproc
 3363              		@ args = 0, pretend = 0, frame = 0
 3364              		@ frame_needed = 0, uses_anonymous_args = 0
 3365              	.LVL305:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3366              		.loc 1 3069 0
 3367 0000 1F4B     		ldr	r3, .L321
 3368 0002 D3F81831 		ldr	r3, [r3, #280]
 3369 0006 43B9     		cbnz	r3, .L314
 3370              	.LBB162:
 3371              	.LBB163:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3372              		.loc 2 156 0
 3373              		.syntax unified
 3374              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3375 0008 4FF03F03 			mov r3, #63												
 3376 000c 83F31188 		msr basepri, r3											
 3377 0010 BFF36F8F 		isb														
 3378 0014 BFF34F8F 		dsb														
 3379              	
 3380              	@ 0 "" 2
 3381              	.LVL306:
 3382              		.thumb
 3383              		.syntax unified
 3384              	.L315:
 3385 0018 FEE7     		b	.L315
 3386              	.L314:
 3387              	.LBE163:
 3388              	.LBE162:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3389              		.loc 1 3064 0
 3390 001a 70B5     		push	{r4, r5, r6, lr}
 3391              		.cfi_def_cfa_offset 16
 3392              		.cfi_offset 4, -16
 3393              		.cfi_offset 5, -12
 3394              		.cfi_offset 6, -8
 3395              		.cfi_offset 14, -4
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 159


3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3396              		.loc 1 3072 0
 3397 001c 41F00043 		orr	r3, r1, #-2147483648
 3398 0020 0360     		str	r3, [r0]
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3399              		.loc 1 3076 0
 3400 0022 C468     		ldr	r4, [r0, #12]
 3401              	.LVL307:
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3402              		.loc 1 3077 0
 3403 0024 44B9     		cbnz	r4, .L316
 3404              	.LBB164:
 3405              	.LBB165:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3406              		.loc 2 156 0
 3407              		.syntax unified
 3408              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3409 0026 4FF03F03 			mov r3, #63												
 3410 002a 83F31188 		msr basepri, r3											
 3411 002e BFF36F8F 		isb														
 3412 0032 BFF34F8F 		dsb														
 3413              	
 3414              	@ 0 "" 2
 3415              	.LVL308:
 3416              		.thumb
 3417              		.syntax unified
 3418              	.L317:
 3419 0036 FEE7     		b	.L317
 3420              	.L316:
 3421              	.LBE165:
 3422              	.LBE164:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3423              		.loc 1 3078 0
 3424 0038 FFF7FEFF 		bl	uxListRemove
 3425              	.LVL309:
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3426              		.loc 1 3083 0
 3427 003c 261D     		adds	r6, r4, #4
 3428 003e 3046     		mov	r0, r6
 3429 0040 FFF7FEFF 		bl	uxListRemove
 3430              	.LVL310:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3431              		.loc 1 3084 0
 3432 0044 E36A     		ldr	r3, [r4, #44]
 3433 0046 0E4A     		ldr	r2, .L321
 3434 0048 D2F80C21 		ldr	r2, [r2, #268]
 3435 004c 9342     		cmp	r3, r2
 3436 004e 02D9     		bls	.L318
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3437              		.loc 1 3084 0 is_stmt 0 discriminator 1
 3438 0050 0B4A     		ldr	r2, .L321
 3439 0052 C2F80C31 		str	r3, [r2, #268]
 3440              	.L318:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3441              		.loc 1 3084 0 discriminator 3
 3442 0056 0A4D     		ldr	r5, .L321
 3443 0058 05F13000 		add	r0, r5, #48
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 160


 3444 005c 03EB8303 		add	r3, r3, r3, lsl #2
 3445 0060 9A00     		lsls	r2, r3, #2
 3446 0062 3146     		mov	r1, r6
 3447 0064 1044     		add	r0, r0, r2
 3448 0066 FFF7FEFF 		bl	vListInsertEnd
 3449              	.LVL311:
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3450              		.loc 1 3086 0 is_stmt 1 discriminator 3
 3451 006a E26A     		ldr	r2, [r4, #44]
 3452 006c D5F80031 		ldr	r3, [r5, #256]
 3453 0070 DB6A     		ldr	r3, [r3, #44]
 3454 0072 9A42     		cmp	r2, r3
 3455 0074 02D9     		bls	.L313
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3456              		.loc 1 3092 0
 3457 0076 0122     		movs	r2, #1
 3458 0078 C5F82821 		str	r2, [r5, #296]
 3459              	.L313:
 3460 007c 70BD     		pop	{r4, r5, r6, pc}
 3461              	.LVL312:
 3462              	.L322:
 3463 007e 00BF     		.align	2
 3464              	.L321:
 3465 0080 00000000 		.word	.LANCHOR0
 3466              		.cfi_endproc
 3467              	.LFE166:
 3468              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 3469              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3470              		.align	2
 3471              		.global	vTaskSetTimeOutState
 3472              		.thumb
 3473              		.thumb_func
 3474              		.type	vTaskSetTimeOutState, %function
 3475              	vTaskSetTimeOutState:
 3476              	.LFB167:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3477              		.loc 1 3098 0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 0
 3480              		@ frame_needed = 0, uses_anonymous_args = 0
 3481              	.LVL313:
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
 3482              		.loc 1 3099 0
 3483 0000 40B9     		cbnz	r0, .L324
 3484              	.LBB166:
 3485              	.LBB167:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3486              		.loc 2 156 0
 3487              		.syntax unified
 3488              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3489 0002 4FF03F03 			mov r3, #63												
 3490 0006 83F31188 		msr basepri, r3											
 3491 000a BFF36F8F 		isb														
 3492 000e BFF34F8F 		dsb														
 3493              	
 3494              	@ 0 "" 2
 3495              	.LVL314:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 161


 3496              		.thumb
 3497              		.syntax unified
 3498              	.L325:
 3499 0012 FEE7     		b	.L325
 3500              	.L324:
 3501              	.LBE167:
 3502              	.LBE166:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3503              		.loc 1 3098 0
 3504 0014 10B5     		push	{r4, lr}
 3505              		.cfi_def_cfa_offset 8
 3506              		.cfi_offset 4, -8
 3507              		.cfi_offset 14, -4
 3508 0016 0446     		mov	r4, r0
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3509              		.loc 1 3100 0
 3510 0018 FFF7FEFF 		bl	vPortEnterCritical
 3511              	.LVL315:
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3512              		.loc 1 3102 0
 3513 001c 044B     		ldr	r3, .L327
 3514 001e D3F82021 		ldr	r2, [r3, #288]
 3515 0022 2260     		str	r2, [r4]
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3516              		.loc 1 3103 0
 3517 0024 D3F81431 		ldr	r3, [r3, #276]
 3518 0028 6360     		str	r3, [r4, #4]
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3519              		.loc 1 3105 0
 3520 002a FFF7FEFF 		bl	vPortExitCritical
 3521              	.LVL316:
 3522 002e 10BD     		pop	{r4, pc}
 3523              	.LVL317:
 3524              	.L328:
 3525              		.align	2
 3526              	.L327:
 3527 0030 00000000 		.word	.LANCHOR0
 3528              		.cfi_endproc
 3529              	.LFE167:
 3530              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3531              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3532              		.align	2
 3533              		.global	vTaskInternalSetTimeOutState
 3534              		.thumb
 3535              		.thumb_func
 3536              		.type	vTaskInternalSetTimeOutState, %function
 3537              	vTaskInternalSetTimeOutState:
 3538              	.LFB168:
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3539              		.loc 1 3110 0
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 0
 3542              		@ frame_needed = 0, uses_anonymous_args = 0
 3543              		@ link register save eliminated.
 3544              	.LVL318:
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3545              		.loc 1 3112 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 162


 3546 0000 034B     		ldr	r3, .L330
 3547 0002 D3F82021 		ldr	r2, [r3, #288]
 3548 0006 0260     		str	r2, [r0]
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3549              		.loc 1 3113 0
 3550 0008 D3F81431 		ldr	r3, [r3, #276]
 3551 000c 4360     		str	r3, [r0, #4]
 3552 000e 7047     		bx	lr
 3553              	.L331:
 3554              		.align	2
 3555              	.L330:
 3556 0010 00000000 		.word	.LANCHOR0
 3557              		.cfi_endproc
 3558              	.LFE168:
 3559              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3560              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3561              		.align	2
 3562              		.global	xTaskCheckForTimeOut
 3563              		.thumb
 3564              		.thumb_func
 3565              		.type	xTaskCheckForTimeOut, %function
 3566              	xTaskCheckForTimeOut:
 3567              	.LFB169:
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 3568              		.loc 1 3118 0
 3569              		.cfi_startproc
 3570              		@ args = 0, pretend = 0, frame = 0
 3571              		@ frame_needed = 0, uses_anonymous_args = 0
 3572              	.LVL319:
 3573 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3574              		.cfi_def_cfa_offset 24
 3575              		.cfi_offset 3, -24
 3576              		.cfi_offset 4, -20
 3577              		.cfi_offset 5, -16
 3578              		.cfi_offset 6, -12
 3579              		.cfi_offset 7, -8
 3580              		.cfi_offset 14, -4
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3581              		.loc 1 3121 0
 3582 0002 40B9     		cbnz	r0, .L333
 3583              	.LBB168:
 3584              	.LBB169:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3585              		.loc 2 156 0
 3586              		.syntax unified
 3587              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3588 0004 4FF03F03 			mov r3, #63												
 3589 0008 83F31188 		msr basepri, r3											
 3590 000c BFF36F8F 		isb														
 3591 0010 BFF34F8F 		dsb														
 3592              	
 3593              	@ 0 "" 2
 3594              	.LVL320:
 3595              		.thumb
 3596              		.syntax unified
 3597              	.L334:
 3598 0014 FEE7     		b	.L334
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 163


 3599              	.L333:
 3600 0016 0546     		mov	r5, r0
 3601              	.LBE169:
 3602              	.LBE168:
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3603              		.loc 1 3122 0
 3604 0018 41B9     		cbnz	r1, .L335
 3605              	.LBB170:
 3606              	.LBB171:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3607              		.loc 2 156 0
 3608              		.syntax unified
 3609              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3610 001a 4FF03F03 			mov r3, #63												
 3611 001e 83F31188 		msr basepri, r3											
 3612 0022 BFF36F8F 		isb														
 3613 0026 BFF34F8F 		dsb														
 3614              	
 3615              	@ 0 "" 2
 3616              	.LVL321:
 3617              		.thumb
 3618              		.syntax unified
 3619              	.L336:
 3620 002a FEE7     		b	.L336
 3621              	.L335:
 3622 002c 0C46     		mov	r4, r1
 3623              	.LBE171:
 3624              	.LBE170:
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3625              		.loc 1 3124 0
 3626 002e FFF7FEFF 		bl	vPortEnterCritical
 3627              	.LVL322:
 3628              	.LBB172:
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3629              		.loc 1 3127 0
 3630 0032 124B     		ldr	r3, .L343
 3631 0034 D3F81401 		ldr	r0, [r3, #276]
 3632              	.LVL323:
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3633              		.loc 1 3128 0
 3634 0038 6968     		ldr	r1, [r5, #4]
 3635 003a 421A     		subs	r2, r0, r1
 3636              	.LVL324:
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3637              		.loc 1 3142 0
 3638 003c 2368     		ldr	r3, [r4]
 3639 003e B3F1FF3F 		cmp	r3, #-1
 3640 0042 14D0     		beq	.L340
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3641              		.loc 1 3152 0
 3642 0044 2F68     		ldr	r7, [r5]
 3643 0046 0D4E     		ldr	r6, .L343
 3644 0048 D6F82061 		ldr	r6, [r6, #288]
 3645 004c B742     		cmp	r7, r6
 3646 004e 01D0     		beq	.L338
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3647              		.loc 1 3152 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 164


 3648 0050 8842     		cmp	r0, r1
 3649 0052 0ED2     		bcs	.L341
 3650              	.L338:
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3651              		.loc 1 3161 0 is_stmt 1
 3652 0054 9A42     		cmp	r2, r3
 3653 0056 06D2     		bcs	.L339
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3654              		.loc 1 3164 0
 3655 0058 9B1A     		subs	r3, r3, r2
 3656 005a 2360     		str	r3, [r4]
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
 3657              		.loc 1 3165 0
 3658 005c 2846     		mov	r0, r5
 3659              	.LVL325:
 3660 005e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3661              	.LVL326:
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3662              		.loc 1 3166 0
 3663 0062 0024     		movs	r4, #0
 3664              	.LVL327:
 3665 0064 06E0     		b	.L337
 3666              	.LVL328:
 3667              	.L339:
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
 3668              		.loc 1 3170 0
 3669 0066 0023     		movs	r3, #0
 3670 0068 2360     		str	r3, [r4]
 3671              	.LVL329:
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3672              		.loc 1 3171 0
 3673 006a 0124     		movs	r4, #1
 3674              	.LVL330:
 3675 006c 02E0     		b	.L337
 3676              	.LVL331:
 3677              	.L340:
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3678              		.loc 1 3147 0
 3679 006e 0024     		movs	r4, #0
 3680              	.LVL332:
 3681 0070 00E0     		b	.L337
 3682              	.LVL333:
 3683              	.L341:
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3684              		.loc 1 3159 0
 3685 0072 0124     		movs	r4, #1
 3686              	.LVL334:
 3687              	.L337:
 3688              	.LBE172:
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3689              		.loc 1 3174 0
 3690 0074 FFF7FEFF 		bl	vPortExitCritical
 3691              	.LVL335:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3692              		.loc 1 3177 0
 3693 0078 2046     		mov	r0, r4
 3694 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 165


 3695              	.LVL336:
 3696              	.L344:
 3697              		.align	2
 3698              	.L343:
 3699 007c 00000000 		.word	.LANCHOR0
 3700              		.cfi_endproc
 3701              	.LFE169:
 3702              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3703              		.section	.text.vTaskMissedYield,"ax",%progbits
 3704              		.align	2
 3705              		.global	vTaskMissedYield
 3706              		.thumb
 3707              		.thumb_func
 3708              		.type	vTaskMissedYield, %function
 3709              	vTaskMissedYield:
 3710              	.LFB170:
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3711              		.loc 1 3181 0
 3712              		.cfi_startproc
 3713              		@ args = 0, pretend = 0, frame = 0
 3714              		@ frame_needed = 0, uses_anonymous_args = 0
 3715              		@ link register save eliminated.
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3716              		.loc 1 3182 0
 3717 0000 0122     		movs	r2, #1
 3718 0002 024B     		ldr	r3, .L346
 3719 0004 C3F82821 		str	r2, [r3, #296]
 3720 0008 7047     		bx	lr
 3721              	.L347:
 3722 000a 00BF     		.align	2
 3723              	.L346:
 3724 000c 00000000 		.word	.LANCHOR0
 3725              		.cfi_endproc
 3726              	.LFE170:
 3727              		.size	vTaskMissedYield, .-vTaskMissedYield
 3728              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 3729              		.align	2
 3730              		.global	uxTaskGetTaskNumber
 3731              		.thumb
 3732              		.thumb_func
 3733              		.type	uxTaskGetTaskNumber, %function
 3734              	uxTaskGetTaskNumber:
 3735              	.LFB171:
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
 3736              		.loc 1 3189 0
 3737              		.cfi_startproc
 3738              		@ args = 0, pretend = 0, frame = 0
 3739              		@ frame_needed = 0, uses_anonymous_args = 0
 3740              		@ link register save eliminated.
 3741              	.LVL337:
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3742              		.loc 1 3193 0
 3743 0000 08B1     		cbz	r0, .L350
 3744              	.LVL338:
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3745              		.loc 1 3196 0
 3746 0002 806C     		ldr	r0, [r0, #72]
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 166


 3747              	.LVL339:
 3748 0004 7047     		bx	lr
 3749              	.LVL340:
 3750              	.L350:
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3751              		.loc 1 3200 0
 3752 0006 0020     		movs	r0, #0
 3753              	.LVL341:
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3754              		.loc 1 3204 0
 3755 0008 7047     		bx	lr
 3756              		.cfi_endproc
 3757              	.LFE171:
 3758              		.size	uxTaskGetTaskNumber, .-uxTaskGetTaskNumber
 3759 000a 00BF     		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 3760              		.align	2
 3761              		.global	vTaskSetTaskNumber
 3762              		.thumb
 3763              		.thumb_func
 3764              		.type	vTaskSetTaskNumber, %function
 3765              	vTaskSetTaskNumber:
 3766              	.LFB172:
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3767              		.loc 1 3212 0
 3768              		.cfi_startproc
 3769              		@ args = 0, pretend = 0, frame = 0
 3770              		@ frame_needed = 0, uses_anonymous_args = 0
 3771              		@ link register save eliminated.
 3772              	.LVL342:
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3773              		.loc 1 3215 0
 3774 0000 00B1     		cbz	r0, .L351
 3775              	.LVL343:
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3776              		.loc 1 3218 0
 3777 0002 8164     		str	r1, [r0, #72]
 3778              	.LVL344:
 3779              	.L351:
 3780 0004 7047     		bx	lr
 3781              		.cfi_endproc
 3782              	.LFE172:
 3783              		.size	vTaskSetTaskNumber, .-vTaskSetTaskNumber
 3784 0006 00BF     		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3785              		.align	2
 3786              		.global	vTaskSetThreadLocalStoragePointer
 3787              		.thumb
 3788              		.thumb_func
 3789              		.type	vTaskSetThreadLocalStoragePointer, %function
 3790              	vTaskSetThreadLocalStoragePointer:
 3791              	.LFB174:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3792              		.loc 1 3395 0
 3793              		.cfi_startproc
 3794              		@ args = 0, pretend = 0, frame = 0
 3795              		@ frame_needed = 0, uses_anonymous_args = 0
 3796              		@ link register save eliminated.
 3797              	.LVL345:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 167


3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3798              		.loc 1 3398 0
 3799 0000 0429     		cmp	r1, #4
 3800 0002 07DC     		bgt	.L353
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3801              		.loc 1 3400 0
 3802 0004 10B9     		cbnz	r0, .L355
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3803              		.loc 1 3400 0 is_stmt 0 discriminator 1
 3804 0006 044B     		ldr	r3, .L356
 3805 0008 D3F80001 		ldr	r0, [r3, #256]
 3806              	.LVL346:
 3807              	.L355:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3808              		.loc 1 3401 0 is_stmt 1 discriminator 4
 3809 000c 1231     		adds	r1, r1, #18
 3810              	.LVL347:
 3811 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3812              	.LVL348:
 3813 0012 4A60     		str	r2, [r1, #4]
 3814              	.LVL349:
 3815              	.L353:
 3816 0014 7047     		bx	lr
 3817              	.L357:
 3818 0016 00BF     		.align	2
 3819              	.L356:
 3820 0018 00000000 		.word	.LANCHOR0
 3821              		.cfi_endproc
 3822              	.LFE174:
 3823              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3824              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3825              		.align	2
 3826              		.global	pvTaskGetThreadLocalStoragePointer
 3827              		.thumb
 3828              		.thumb_func
 3829              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3830              	pvTaskGetThreadLocalStoragePointer:
 3831              	.LFB175:
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
 3832              		.loc 1 3411 0
 3833              		.cfi_startproc
 3834              		@ args = 0, pretend = 0, frame = 0
 3835              		@ frame_needed = 0, uses_anonymous_args = 0
 3836              		@ link register save eliminated.
 3837              	.LVL350:
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3838              		.loc 1 3415 0
 3839 0000 0429     		cmp	r1, #4
 3840 0002 08DC     		bgt	.L361
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3841              		.loc 1 3417 0
 3842 0004 10B9     		cbnz	r0, .L360
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3843              		.loc 1 3417 0 is_stmt 0 discriminator 1
 3844 0006 054B     		ldr	r3, .L362
 3845 0008 D3F80001 		ldr	r0, [r3, #256]
 3846              	.LVL351:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 168


 3847              	.L360:
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3848              		.loc 1 3418 0 is_stmt 1 discriminator 4
 3849 000c 1231     		adds	r1, r1, #18
 3850              	.LVL352:
 3851 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3852              	.LVL353:
 3853 0012 4068     		ldr	r0, [r0, #4]
 3854              	.LVL354:
 3855 0014 7047     		bx	lr
 3856              	.LVL355:
 3857              	.L361:
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3858              		.loc 1 3422 0
 3859 0016 0020     		movs	r0, #0
 3860              	.LVL356:
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3861              		.loc 1 3426 0
 3862 0018 7047     		bx	lr
 3863              	.L363:
 3864 001a 00BF     		.align	2
 3865              	.L362:
 3866 001c 00000000 		.word	.LANCHOR0
 3867              		.cfi_endproc
 3868              	.LFE175:
 3869              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3870              		.section	.text.vTaskGetInfo,"ax",%progbits
 3871              		.align	2
 3872              		.global	vTaskGetInfo
 3873              		.thumb
 3874              		.thumb_func
 3875              		.type	vTaskGetInfo, %function
 3876              	vTaskGetInfo:
 3877              	.LFB178:
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3878              		.loc 1 3511 0
 3879              		.cfi_startproc
 3880              		@ args = 0, pretend = 0, frame = 0
 3881              		@ frame_needed = 0, uses_anonymous_args = 0
 3882              	.LVL357:
 3883 0000 70B5     		push	{r4, r5, r6, lr}
 3884              		.cfi_def_cfa_offset 16
 3885              		.cfi_offset 4, -16
 3886              		.cfi_offset 5, -12
 3887              		.cfi_offset 6, -8
 3888              		.cfi_offset 14, -4
 3889 0002 0C46     		mov	r4, r1
 3890 0004 1646     		mov	r6, r2
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3891              		.loc 1 3515 0
 3892 0006 0546     		mov	r5, r0
 3893 0008 10B9     		cbnz	r0, .L365
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3894              		.loc 1 3515 0 is_stmt 0 discriminator 1
 3895 000a 194A     		ldr	r2, .L373
 3896              	.LVL358:
 3897 000c D2F80051 		ldr	r5, [r2, #256]
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 169


 3898              	.LVL359:
 3899              	.L365:
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
 3900              		.loc 1 3517 0 is_stmt 1 discriminator 4
 3901 0010 2560     		str	r5, [r4]
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 3902              		.loc 1 3518 0 discriminator 4
 3903 0012 05F13402 		add	r2, r5, #52
 3904 0016 6260     		str	r2, [r4, #4]
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 3905              		.loc 1 3519 0 discriminator 4
 3906 0018 EA6A     		ldr	r2, [r5, #44]
 3907 001a 2261     		str	r2, [r4, #16]
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 3908              		.loc 1 3520 0 discriminator 4
 3909 001c 2A6B     		ldr	r2, [r5, #48]
 3910 001e E261     		str	r2, [r4, #28]
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3911              		.loc 1 3521 0 discriminator 4
 3912 0020 6A6C     		ldr	r2, [r5, #68]
 3913 0022 A260     		str	r2, [r4, #8]
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3914              		.loc 1 3529 0 discriminator 4
 3915 0024 0022     		movs	r2, #0
 3916 0026 6261     		str	r2, [r4, #20]
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3917              		.loc 1 3539 0 discriminator 4
 3918 0028 A261     		str	r2, [r4, #24]
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3919              		.loc 1 3546 0 discriminator 4
 3920 002a 052B     		cmp	r3, #5
 3921 002c 13D0     		beq	.L366
3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3922              		.loc 1 3548 0
 3923 002e 104A     		ldr	r2, .L373
 3924 0030 D2F80021 		ldr	r2, [r2, #256]
 3925 0034 9542     		cmp	r5, r2
 3926 0036 02D1     		bne	.L367
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3927              		.loc 1 3550 0
 3928 0038 0023     		movs	r3, #0
 3929              	.LVL360:
 3930 003a 2373     		strb	r3, [r4, #12]
 3931 003c 0FE0     		b	.L368
 3932              	.LVL361:
 3933              	.L367:
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3934              		.loc 1 3554 0
 3935 003e 2373     		strb	r3, [r4, #12]
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 3936              		.loc 1 3561 0
 3937 0040 032B     		cmp	r3, #3
 3938 0042 0CD1     		bne	.L368
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 3939              		.loc 1 3563 0
 3940 0044 FFF7FEFF 		bl	vTaskSuspendAll
 3941              	.LVL362:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 170


3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 3942              		.loc 1 3565 0
 3943 0048 AB6A     		ldr	r3, [r5, #40]
 3944 004a 0BB1     		cbz	r3, .L369
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
 3945              		.loc 1 3567 0
 3946 004c 0223     		movs	r3, #2
 3947 004e 2373     		strb	r3, [r4, #12]
 3948              	.L369:
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 3949              		.loc 1 3570 0
 3950 0050 FFF7FEFF 		bl	xTaskResumeAll
 3951              	.LVL363:
 3952 0054 03E0     		b	.L368
 3953              	.LVL364:
 3954              	.L366:
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3955              		.loc 1 3578 0
 3956 0056 2846     		mov	r0, r5
 3957 0058 FFF7FEFF 		bl	eTaskGetState
 3958              	.LVL365:
 3959 005c 2073     		strb	r0, [r4, #12]
 3960              	.L368:
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3961              		.loc 1 3583 0
 3962 005e 26B1     		cbz	r6, .L370
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3963              		.loc 1 3591 0
 3964 0060 286B     		ldr	r0, [r5, #48]
 3965 0062 FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 3966              	.LVL366:
 3967 0066 2084     		strh	r0, [r4, #32]	@ movhi
 3968 0068 70BD     		pop	{r4, r5, r6, pc}
 3969              	.LVL367:
 3970              	.L370:
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3971              		.loc 1 3597 0
 3972 006a 0023     		movs	r3, #0
 3973 006c 2384     		strh	r3, [r4, #32]	@ movhi
 3974 006e 70BD     		pop	{r4, r5, r6, pc}
 3975              	.LVL368:
 3976              	.L374:
 3977              		.align	2
 3978              	.L373:
 3979 0070 00000000 		.word	.LANCHOR0
 3980              		.cfi_endproc
 3981              	.LFE178:
 3982              		.size	vTaskGetInfo, .-vTaskGetInfo
 3983              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 3984              		.align	2
 3985              		.thumb
 3986              		.thumb_func
 3987              		.type	prvListTasksWithinSingleList, %function
 3988              	prvListTasksWithinSingleList:
 3989              	.LFB179:
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
 3990              		.loc 1 3607 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 171


 3991              		.cfi_startproc
 3992              		@ args = 0, pretend = 0, frame = 0
 3993              		@ frame_needed = 0, uses_anonymous_args = 0
 3994              	.LVL369:
 3995 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3996              		.cfi_def_cfa_offset 32
 3997              		.cfi_offset 4, -32
 3998              		.cfi_offset 5, -28
 3999              		.cfi_offset 6, -24
 4000              		.cfi_offset 7, -20
 4001              		.cfi_offset 8, -16
 4002              		.cfi_offset 9, -12
 4003              		.cfi_offset 10, -8
 4004              		.cfi_offset 14, -4
 4005              	.LVL370:
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4006              		.loc 1 3611 0
 4007 0004 0B68     		ldr	r3, [r1]
 4008 0006 2BB3     		cbz	r3, .L380
 4009              	.LVL371:
 4010              	.LBB173:
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4011              		.loc 1 3613 0
 4012 0008 4B68     		ldr	r3, [r1, #4]
 4013 000a 5B68     		ldr	r3, [r3, #4]
 4014 000c 4B60     		str	r3, [r1, #4]
 4015 000e 01F10809 		add	r9, r1, #8
 4016 0012 4B45     		cmp	r3, r9
 4017 0014 01D1     		bne	.L377
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4018              		.loc 1 3613 0 is_stmt 0 discriminator 1
 4019 0016 5B68     		ldr	r3, [r3, #4]
 4020 0018 4B60     		str	r3, [r1, #4]
 4021              	.L377:
 4022 001a 9046     		mov	r8, r2
 4023 001c 0D46     		mov	r5, r1
 4024 001e 0746     		mov	r7, r0
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4025              		.loc 1 3613 0 discriminator 3
 4026 0020 4B68     		ldr	r3, [r1, #4]
 4027 0022 D3F80CA0 		ldr	r10, [r3, #12]
 4028              	.LVL372:
 4029              	.LBE173:
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4030              		.loc 1 3609 0 is_stmt 1 discriminator 3
 4031 0026 0024     		movs	r4, #0
 4032              	.LVL373:
 4033              	.L379:
 4034              	.LBB174:
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4035              		.loc 1 3621 0
 4036 0028 6B68     		ldr	r3, [r5, #4]
 4037 002a 5B68     		ldr	r3, [r3, #4]
 4038 002c 6B60     		str	r3, [r5, #4]
 4039 002e 9945     		cmp	r9, r3
 4040 0030 01D1     		bne	.L378
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 172


 4041              		.loc 1 3621 0 is_stmt 0 discriminator 1
 4042 0032 5B68     		ldr	r3, [r3, #4]
 4043 0034 6B60     		str	r3, [r5, #4]
 4044              	.L378:
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4045              		.loc 1 3621 0 discriminator 3
 4046 0036 6B68     		ldr	r3, [r5, #4]
 4047 0038 DE68     		ldr	r6, [r3, #12]
 4048              	.LVL374:
 4049              	.LBE174:
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
 4050              		.loc 1 3622 0 is_stmt 1 discriminator 3
 4051 003a 04EBC403 		add	r3, r4, r4, lsl #3
 4052 003e 9900     		lsls	r1, r3, #2
 4053 0040 4346     		mov	r3, r8
 4054 0042 0122     		movs	r2, #1
 4055 0044 3944     		add	r1, r1, r7
 4056 0046 3046     		mov	r0, r6
 4057 0048 FFF7FEFF 		bl	vTaskGetInfo
 4058              	.LVL375:
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4059              		.loc 1 3623 0 discriminator 3
 4060 004c 0134     		adds	r4, r4, #1
 4061              	.LVL376:
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 4062              		.loc 1 3624 0 discriminator 3
 4063 004e B245     		cmp	r10, r6
 4064 0050 EAD1     		bne	.L379
 4065 0052 00E0     		b	.L376
 4066              	.LVL377:
 4067              	.L380:
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4068              		.loc 1 3609 0
 4069 0054 0024     		movs	r4, #0
 4070              	.LVL378:
 4071              	.L376:
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4072              		.loc 1 3632 0
 4073 0056 2046     		mov	r0, r4
 4074 0058 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4075              		.cfi_endproc
 4076              	.LFE179:
 4077              		.size	prvListTasksWithinSingleList, .-prvListTasksWithinSingleList
 4078              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 4079              		.align	2
 4080              		.global	uxTaskGetSystemState
 4081              		.thumb
 4082              		.thumb_func
 4083              		.type	uxTaskGetSystemState, %function
 4084              	uxTaskGetSystemState:
 4085              	.LFB159:
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 4086              		.loc 1 2410 0
 4087              		.cfi_startproc
 4088              		@ args = 0, pretend = 0, frame = 0
 4089              		@ frame_needed = 0, uses_anonymous_args = 0
 4090              	.LVL379:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 173


 4091 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4092              		.cfi_def_cfa_offset 24
 4093              		.cfi_offset 3, -24
 4094              		.cfi_offset 4, -20
 4095              		.cfi_offset 5, -16
 4096              		.cfi_offset 6, -12
 4097              		.cfi_offset 7, -8
 4098              		.cfi_offset 14, -4
 4099 0002 0746     		mov	r7, r0
 4100 0004 0C46     		mov	r4, r1
 4101 0006 1646     		mov	r6, r2
 4102              	.LVL380:
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4103              		.loc 1 2413 0
 4104 0008 FFF7FEFF 		bl	vTaskSuspendAll
 4105              	.LVL381:
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4106              		.loc 1 2416 0
 4107 000c 234B     		ldr	r3, .L387
 4108 000e D3F8FC30 		ldr	r3, [r3, #252]
 4109 0012 A342     		cmp	r3, r4
 4110 0014 3CD8     		bhi	.L385
 4111 0016 0725     		movs	r5, #7
 4112 0018 0024     		movs	r4, #0
 4113              	.LVL382:
 4114              	.L384:
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
 4115              		.loc 1 2422 0 discriminator 1
 4116 001a 013D     		subs	r5, r5, #1
 4117              	.LVL383:
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4118              		.loc 1 2423 0 discriminator 1
 4119 001c 04EBC403 		add	r3, r4, r4, lsl #3
 4120 0020 9800     		lsls	r0, r3, #2
 4121 0022 05EB8502 		add	r2, r5, r5, lsl #2
 4122 0026 9300     		lsls	r3, r2, #2
 4123 0028 0122     		movs	r2, #1
 4124 002a 1D49     		ldr	r1, .L387+4
 4125 002c 1944     		add	r1, r1, r3
 4126 002e 3844     		add	r0, r0, r7
 4127 0030 FFF7FEFF 		bl	prvListTasksWithinSingleList
 4128              	.LVL384:
 4129 0034 0444     		add	r4, r4, r0
 4130              	.LVL385:
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4131              		.loc 1 2425 0 discriminator 1
 4132 0036 002D     		cmp	r5, #0
 4133 0038 EFD1     		bne	.L384
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
 4134              		.loc 1 2429 0
 4135 003a 04EBC403 		add	r3, r4, r4, lsl #3
 4136 003e 9800     		lsls	r0, r3, #2
 4137 0040 164D     		ldr	r5, .L387
 4138              	.LVL386:
 4139 0042 A96A     		ldr	r1, [r5, #40]
 4140 0044 0222     		movs	r2, #2
 4141 0046 3844     		add	r0, r0, r7
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 174


 4142 0048 FFF7FEFF 		bl	prvListTasksWithinSingleList
 4143              	.LVL387:
 4144 004c 0444     		add	r4, r4, r0
 4145              	.LVL388:
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4146              		.loc 1 2430 0
 4147 004e 04EBC403 		add	r3, r4, r4, lsl #3
 4148 0052 9800     		lsls	r0, r3, #2
 4149 0054 D5F8F810 		ldr	r1, [r5, #248]
 4150 0058 0222     		movs	r2, #2
 4151 005a 3844     		add	r0, r0, r7
 4152 005c FFF7FEFF 		bl	prvListTasksWithinSingleList
 4153              	.LVL389:
 4154 0060 0444     		add	r4, r4, r0
 4155              	.LVL390:
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4156              		.loc 1 2436 0
 4157 0062 04EBC403 		add	r3, r4, r4, lsl #3
 4158 0066 9800     		lsls	r0, r3, #2
 4159 0068 0422     		movs	r2, #4
 4160 006a 05F1E401 		add	r1, r5, #228
 4161 006e 3844     		add	r0, r0, r7
 4162 0070 FFF7FEFF 		bl	prvListTasksWithinSingleList
 4163              	.LVL391:
 4164 0074 0444     		add	r4, r4, r0
 4165              	.LVL392:
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4166              		.loc 1 2444 0
 4167 0076 04EBC403 		add	r3, r4, r4, lsl #3
 4168 007a 9800     		lsls	r0, r3, #2
 4169 007c 0322     		movs	r2, #3
 4170 007e 2946     		mov	r1, r5
 4171 0080 3844     		add	r0, r0, r7
 4172 0082 FFF7FEFF 		bl	prvListTasksWithinSingleList
 4173              	.LVL393:
 4174 0086 0444     		add	r4, r4, r0
 4175              	.LVL394:
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4176              		.loc 1 2461 0
 4177 0088 1EB1     		cbz	r6, .L383
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4178              		.loc 1 2463 0
 4179 008a 0023     		movs	r3, #0
 4180 008c 3360     		str	r3, [r6]
 4181 008e 00E0     		b	.L383
 4182              	.LVL395:
 4183              	.L385:
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4184              		.loc 1 2411 0
 4185 0090 0024     		movs	r4, #0
 4186              	.LVL396:
 4187              	.L383:
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4188              		.loc 1 2473 0
 4189 0092 FFF7FEFF 		bl	xTaskResumeAll
 4190              	.LVL397:
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 175


 4191              		.loc 1 2476 0
 4192 0096 2046     		mov	r0, r4
 4193 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4194              	.LVL398:
 4195              	.L388:
 4196 009a 00BF     		.align	2
 4197              	.L387:
 4198 009c 00000000 		.word	.LANCHOR0
 4199 00a0 30000000 		.word	.LANCHOR0+48
 4200              		.cfi_endproc
 4201              	.LFE159:
 4202              		.size	uxTaskGetSystemState, .-uxTaskGetSystemState
 4203              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4204              		.align	2
 4205              		.global	xTaskGetCurrentTaskHandle
 4206              		.thumb
 4207              		.thumb_func
 4208              		.type	xTaskGetCurrentTaskHandle, %function
 4209              	xTaskGetCurrentTaskHandle:
 4210              	.LFB183:
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 4211              		.loc 1 3768 0
 4212              		.cfi_startproc
 4213              		@ args = 0, pretend = 0, frame = 0
 4214              		@ frame_needed = 0, uses_anonymous_args = 0
 4215              		@ link register save eliminated.
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4216              		.loc 1 3774 0
 4217 0000 014B     		ldr	r3, .L390
 4218 0002 D3F80001 		ldr	r0, [r3, #256]
 4219              	.LVL399:
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4220              		.loc 1 3777 0
 4221 0006 7047     		bx	lr
 4222              	.L391:
 4223              		.align	2
 4224              	.L390:
 4225 0008 00000000 		.word	.LANCHOR0
 4226              		.cfi_endproc
 4227              	.LFE183:
 4228              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 4229              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4230              		.align	2
 4231              		.global	xTaskGetSchedulerState
 4232              		.thumb
 4233              		.thumb_func
 4234              		.type	xTaskGetSchedulerState, %function
 4235              	xTaskGetSchedulerState:
 4236              	.LFB184:
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 4237              		.loc 1 3785 0
 4238              		.cfi_startproc
 4239              		@ args = 0, pretend = 0, frame = 0
 4240              		@ frame_needed = 0, uses_anonymous_args = 0
 4241              		@ link register save eliminated.
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4242              		.loc 1 3788 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 176


 4243 0000 064B     		ldr	r3, .L396
 4244 0002 D3F80431 		ldr	r3, [r3, #260]
 4245 0006 2BB1     		cbz	r3, .L394
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4246              		.loc 1 3794 0
 4247 0008 044B     		ldr	r3, .L396
 4248 000a D3F81831 		ldr	r3, [r3, #280]
 4249 000e 1BB9     		cbnz	r3, .L395
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4250              		.loc 1 3796 0
 4251 0010 0220     		movs	r0, #2
 4252 0012 7047     		bx	lr
 4253              	.L394:
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 4254              		.loc 1 3790 0
 4255 0014 0120     		movs	r0, #1
 4256 0016 7047     		bx	lr
 4257              	.L395:
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4258              		.loc 1 3800 0
 4259 0018 0020     		movs	r0, #0
 4260              	.LVL400:
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4261              		.loc 1 3805 0
 4262 001a 7047     		bx	lr
 4263              	.L397:
 4264              		.align	2
 4265              	.L396:
 4266 001c 00000000 		.word	.LANCHOR0
 4267              		.cfi_endproc
 4268              	.LFE184:
 4269              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 4270              		.section	.text.vTaskList,"ax",%progbits
 4271              		.align	2
 4272              		.global	vTaskList
 4273              		.thumb
 4274              		.thumb_func
 4275              		.type	vTaskList, %function
 4276              	vTaskList:
 4277              	.LFB186:
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
 4278              		.loc 1 4171 0
 4279              		.cfi_startproc
 4280              		@ args = 0, pretend = 0, frame = 8
 4281              		@ frame_needed = 0, uses_anonymous_args = 0
 4282              	.LVL401:
 4283 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4284              		.cfi_def_cfa_offset 20
 4285              		.cfi_offset 4, -20
 4286              		.cfi_offset 5, -16
 4287              		.cfi_offset 6, -12
 4288              		.cfi_offset 7, -8
 4289              		.cfi_offset 14, -4
 4290 0002 85B0     		sub	sp, sp, #20
 4291              		.cfi_def_cfa_offset 40
 4292 0004 0546     		mov	r5, r0
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 177


 4293              		.loc 1 4202 0
 4294 0006 0023     		movs	r3, #0
 4295 0008 0370     		strb	r3, [r0]
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4296              		.loc 1 4206 0
 4297 000a 304B     		ldr	r3, .L411
 4298 000c D3F8FC20 		ldr	r2, [r3, #252]
 4299 0010 0392     		str	r2, [sp, #12]
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4300              		.loc 1 4211 0
 4301 0012 D3F8FC30 		ldr	r3, [r3, #252]
 4302 0016 03EBC303 		add	r3, r3, r3, lsl #3
 4303 001a 9800     		lsls	r0, r3, #2
 4304              	.LVL402:
 4305 001c FFF7FEFF 		bl	pvPortMalloc
 4306              	.LVL403:
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4307              		.loc 1 4213 0
 4308 0020 0028     		cmp	r0, #0
 4309 0022 50D0     		beq	.L398
 4310 0024 0446     		mov	r4, r0
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4311              		.loc 1 4216 0
 4312 0026 0399     		ldr	r1, [sp, #12]
 4313 0028 0022     		movs	r2, #0
 4314 002a FFF7FEFF 		bl	uxTaskGetSystemState
 4315              	.LVL404:
 4316 002e 0390     		str	r0, [sp, #12]
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4317              		.loc 1 4219 0
 4318 0030 0023     		movs	r3, #0
 4319 0032 0293     		str	r3, [sp, #8]
 4320 0034 40E0     		b	.L400
 4321              	.L408:
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4322              		.loc 1 4221 0
 4323 0036 029B     		ldr	r3, [sp, #8]
 4324 0038 03EBC303 		add	r3, r3, r3, lsl #3
 4325 003c 9A00     		lsls	r2, r3, #2
 4326 003e 2244     		add	r2, r2, r4
 4327 0040 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 4328 0042 042B     		cmp	r3, #4
 4329 0044 0CD8     		bhi	.L401
 4330 0046 DFE803F0 		tbb	[pc, r3]
 4331              	.L403:
 4332 004a 03       		.byte	(.L402-.L403)/2
 4333 004b 0D       		.byte	(.L409-.L403)/2
 4334 004c 05       		.byte	(.L405-.L403)/2
 4335 004d 07       		.byte	(.L406-.L403)/2
 4336 004e 09       		.byte	(.L407-.L403)/2
 4337 004f 00       		.p2align 1
 4338              	.L402:
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
 4339              		.loc 1 4223 0
 4340 0050 5826     		movs	r6, #88
 4341 0052 08E0     		b	.L404
 4342              	.L405:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 178


 4343              	.LVL405:
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
 4344              		.loc 1 4229 0
 4345 0054 4226     		movs	r6, #66
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4346              		.loc 1 4230 0
 4347 0056 06E0     		b	.L404
 4348              	.LVL406:
 4349              	.L406:
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
 4350              		.loc 1 4232 0
 4351 0058 5326     		movs	r6, #83
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4352              		.loc 1 4233 0
 4353 005a 04E0     		b	.L404
 4354              	.LVL407:
 4355              	.L407:
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
 4356              		.loc 1 4235 0
 4357 005c 4426     		movs	r6, #68
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4358              		.loc 1 4236 0
 4359 005e 02E0     		b	.L404
 4360              	.LVL408:
 4361              	.L401:
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
 4362              		.loc 1 4240 0
 4363 0060 0026     		movs	r6, #0
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4364              		.loc 1 4241 0
 4365 0062 00E0     		b	.L404
 4366              	.LVL409:
 4367              	.L409:
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
 4368              		.loc 1 4226 0
 4369 0064 5226     		movs	r6, #82
 4370              	.L404:
 4371              	.LVL410:
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4372              		.loc 1 4246 0 discriminator 2
 4373 0066 029B     		ldr	r3, [sp, #8]
 4374 0068 03EBC303 		add	r3, r3, r3, lsl #3
 4375 006c 9A00     		lsls	r2, r3, #2
 4376 006e 2244     		add	r2, r2, r4
 4377 0070 5168     		ldr	r1, [r2, #4]
 4378 0072 2846     		mov	r0, r5
 4379 0074 FFF7FEFF 		bl	prvWriteNameToBuffer
 4380              	.LVL411:
 4381 0078 0546     		mov	r5, r0
 4382              	.LVL412:
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
 4383              		.loc 1 4249 0 discriminator 2
 4384 007a 029B     		ldr	r3, [sp, #8]
 4385 007c 03EBC303 		add	r3, r3, r3, lsl #3
 4386 0080 9A00     		lsls	r2, r3, #2
 4387 0082 2244     		add	r2, r2, r4
 4388 0084 1369     		ldr	r3, [r2, #16]
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 179


 4389 0086 029A     		ldr	r2, [sp, #8]
 4390 0088 02EBC202 		add	r2, r2, r2, lsl #3
 4391 008c 9100     		lsls	r1, r2, #2
 4392 008e 2144     		add	r1, r1, r4
 4393 0090 0F8C     		ldrh	r7, [r1, #32]
 4394 0092 029A     		ldr	r2, [sp, #8]
 4395 0094 02EBC202 		add	r2, r2, r2, lsl #3
 4396 0098 9100     		lsls	r1, r2, #2
 4397 009a 2144     		add	r1, r1, r4
 4398 009c 8A68     		ldr	r2, [r1, #8]
 4399 009e 0192     		str	r2, [sp, #4]
 4400 00a0 0097     		str	r7, [sp]
 4401 00a2 3246     		mov	r2, r6
 4402 00a4 0A49     		ldr	r1, .L411+4
 4403 00a6 FFF7FEFF 		bl	sprintf
 4404              	.LVL413:
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4405              		.loc 1 4250 0 discriminator 2
 4406 00aa 2846     		mov	r0, r5
 4407 00ac FFF7FEFF 		bl	strlen
 4408              	.LVL414:
 4409 00b0 0544     		add	r5, r5, r0
 4410              	.LVL415:
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4411              		.loc 1 4219 0 discriminator 2
 4412 00b2 029B     		ldr	r3, [sp, #8]
 4413 00b4 0133     		adds	r3, r3, #1
 4414 00b6 0293     		str	r3, [sp, #8]
 4415              	.LVL416:
 4416              	.L400:
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4417              		.loc 1 4219 0 is_stmt 0 discriminator 1
 4418 00b8 029A     		ldr	r2, [sp, #8]
 4419 00ba 039B     		ldr	r3, [sp, #12]
 4420 00bc 9A42     		cmp	r2, r3
 4421 00be BAD3     		bcc	.L408
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 4422              		.loc 1 4255 0 is_stmt 1
 4423 00c0 2046     		mov	r0, r4
 4424 00c2 FFF7FEFF 		bl	vPortFree
 4425              	.LVL417:
 4426              	.L398:
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4427              		.loc 1 4261 0
 4428 00c6 05B0     		add	sp, sp, #20
 4429              		.cfi_def_cfa_offset 20
 4430              		@ sp needed
 4431 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 4432              	.LVL418:
 4433              	.L412:
 4434 00ca 00BF     		.align	2
 4435              	.L411:
 4436 00cc 00000000 		.word	.LANCHOR0
 4437 00d0 08000000 		.word	.LC1
 4438              		.cfi_endproc
 4439              	.LFE186:
 4440              		.size	vTaskList, .-vTaskList
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 180


 4441              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4442              		.align	2
 4443              		.global	uxTaskResetEventItemValue
 4444              		.thumb
 4445              		.thumb_func
 4446              		.type	uxTaskResetEventItemValue, %function
 4447              	uxTaskResetEventItemValue:
 4448              	.LFB187:
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
 4449              		.loc 1 4394 0
 4450              		.cfi_startproc
 4451              		@ args = 0, pretend = 0, frame = 0
 4452              		@ frame_needed = 0, uses_anonymous_args = 0
 4453              		@ link register save eliminated.
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4454              		.loc 1 4397 0
 4455 0000 064B     		ldr	r3, .L414
 4456 0002 D3F80021 		ldr	r2, [r3, #256]
 4457 0006 9069     		ldr	r0, [r2, #24]
 4458              	.LVL419:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4459              		.loc 1 4401 0
 4460 0008 D3F80021 		ldr	r2, [r3, #256]
 4461 000c D3F80031 		ldr	r3, [r3, #256]
 4462 0010 DB6A     		ldr	r3, [r3, #44]
 4463 0012 C3F10703 		rsb	r3, r3, #7
 4464 0016 9361     		str	r3, [r2, #24]
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 4465              		.loc 1 4404 0
 4466 0018 7047     		bx	lr
 4467              	.L415:
 4468 001a 00BF     		.align	2
 4469              	.L414:
 4470 001c 00000000 		.word	.LANCHOR0
 4471              		.cfi_endproc
 4472              	.LFE187:
 4473              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 4474              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4475              		.align	2
 4476              		.global	ulTaskNotifyTake
 4477              		.thumb
 4478              		.thumb_func
 4479              		.type	ulTaskNotifyTake, %function
 4480              	ulTaskNotifyTake:
 4481              	.LFB188:
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
 4482              		.loc 1 4427 0
 4483              		.cfi_startproc
 4484              		@ args = 0, pretend = 0, frame = 0
 4485              		@ frame_needed = 0, uses_anonymous_args = 0
 4486              	.LVL420:
 4487 0000 38B5     		push	{r3, r4, r5, lr}
 4488              		.cfi_def_cfa_offset 16
 4489              		.cfi_offset 3, -16
 4490              		.cfi_offset 4, -12
 4491              		.cfi_offset 5, -8
 4492              		.cfi_offset 14, -4
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 181


 4493 0002 0546     		mov	r5, r0
 4494 0004 0C46     		mov	r4, r1
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4495              		.loc 1 4430 0
 4496 0006 FFF7FEFF 		bl	vPortEnterCritical
 4497              	.LVL421:
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4498              		.loc 1 4433 0
 4499 000a 1B4B     		ldr	r3, .L421
 4500 000c D3F80031 		ldr	r3, [r3, #256]
 4501 0010 1B6E     		ldr	r3, [r3, #96]
 4502 0012 93B9     		cbnz	r3, .L417
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4503              		.loc 1 4436 0
 4504 0014 184B     		ldr	r3, .L421
 4505 0016 D3F80031 		ldr	r3, [r3, #256]
 4506 001a 0122     		movs	r2, #1
 4507 001c 83F86420 		strb	r2, [r3, #100]
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4508              		.loc 1 4438 0
 4509 0020 5CB1     		cbz	r4, .L417
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4510              		.loc 1 4440 0
 4511 0022 1146     		mov	r1, r2
 4512 0024 2046     		mov	r0, r4
 4513 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4514              	.LVL422:
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4515              		.loc 1 4447 0
 4516 002a 4FF08052 		mov	r2, #268435456
 4517 002e 134B     		ldr	r3, .L421+4
 4518 0030 1A60     		str	r2, [r3]
 4519              		.syntax unified
 4520              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4521 0032 BFF34F8F 		dsb
 4522              	@ 0 "" 2
 4523              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4524 0036 BFF36F8F 		isb
 4525              	@ 0 "" 2
 4526              		.thumb
 4527              		.syntax unified
 4528              	.L417:
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4529              		.loc 1 4459 0
 4530 003a FFF7FEFF 		bl	vPortExitCritical
 4531              	.LVL423:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4532              		.loc 1 4461 0
 4533 003e FFF7FEFF 		bl	vPortEnterCritical
 4534              	.LVL424:
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4535              		.loc 1 4464 0
 4536 0042 0D4B     		ldr	r3, .L421
 4537 0044 D3F80031 		ldr	r3, [r3, #256]
 4538 0048 1C6E     		ldr	r4, [r3, #96]
 4539              	.LVL425:
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 182


 4540              		.loc 1 4466 0
 4541 004a 5CB1     		cbz	r4, .L418
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4542              		.loc 1 4468 0
 4543 004c 2DB1     		cbz	r5, .L419
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4544              		.loc 1 4470 0
 4545 004e 0A4B     		ldr	r3, .L421
 4546 0050 D3F80031 		ldr	r3, [r3, #256]
 4547 0054 0022     		movs	r2, #0
 4548 0056 1A66     		str	r2, [r3, #96]
 4549 0058 04E0     		b	.L418
 4550              	.L419:
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4551              		.loc 1 4474 0
 4552 005a 074B     		ldr	r3, .L421
 4553 005c D3F80031 		ldr	r3, [r3, #256]
 4554 0060 621E     		subs	r2, r4, #1
 4555 0062 1A66     		str	r2, [r3, #96]
 4556              	.L418:
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 4557              		.loc 1 4482 0
 4558 0064 044B     		ldr	r3, .L421
 4559 0066 D3F80031 		ldr	r3, [r3, #256]
 4560 006a 0022     		movs	r2, #0
 4561 006c 83F86420 		strb	r2, [r3, #100]
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4562              		.loc 1 4484 0
 4563 0070 FFF7FEFF 		bl	vPortExitCritical
 4564              	.LVL426:
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4565              		.loc 1 4487 0
 4566 0074 2046     		mov	r0, r4
 4567 0076 38BD     		pop	{r3, r4, r5, pc}
 4568              	.LVL427:
 4569              	.L422:
 4570              		.align	2
 4571              	.L421:
 4572 0078 00000000 		.word	.LANCHOR0
 4573 007c 04ED00E0 		.word	-536810236
 4574              		.cfi_endproc
 4575              	.LFE188:
 4576              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 4577              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4578              		.align	2
 4579              		.global	xTaskNotifyWait
 4580              		.thumb
 4581              		.thumb_func
 4582              		.type	xTaskNotifyWait, %function
 4583              	xTaskNotifyWait:
 4584              	.LFB189:
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 4585              		.loc 1 4495 0
 4586              		.cfi_startproc
 4587              		@ args = 0, pretend = 0, frame = 0
 4588              		@ frame_needed = 0, uses_anonymous_args = 0
 4589              	.LVL428:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 183


 4590 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4591              		.cfi_def_cfa_offset 24
 4592              		.cfi_offset 3, -24
 4593              		.cfi_offset 4, -20
 4594              		.cfi_offset 5, -16
 4595              		.cfi_offset 6, -12
 4596              		.cfi_offset 7, -8
 4597              		.cfi_offset 14, -4
 4598 0002 0746     		mov	r7, r0
 4599 0004 0D46     		mov	r5, r1
 4600 0006 1446     		mov	r4, r2
 4601 0008 1E46     		mov	r6, r3
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4602              		.loc 1 4498 0
 4603 000a FFF7FEFF 		bl	vPortEnterCritical
 4604              	.LVL429:
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4605              		.loc 1 4501 0
 4606 000e 234B     		ldr	r3, .L429
 4607 0010 D3F80031 		ldr	r3, [r3, #256]
 4608 0014 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 4609 0018 DBB2     		uxtb	r3, r3
 4610 001a 022B     		cmp	r3, #2
 4611 001c 18D0     		beq	.L424
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4612              		.loc 1 4506 0
 4613 001e 1F4B     		ldr	r3, .L429
 4614 0020 D3F80021 		ldr	r2, [r3, #256]
 4615 0024 106E     		ldr	r0, [r2, #96]
 4616 0026 20EA0700 		bic	r0, r0, r7
 4617 002a 1066     		str	r0, [r2, #96]
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4618              		.loc 1 4509 0
 4619 002c D3F80031 		ldr	r3, [r3, #256]
 4620 0030 0122     		movs	r2, #1
 4621 0032 83F86420 		strb	r2, [r3, #100]
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4622              		.loc 1 4511 0
 4623 0036 5EB1     		cbz	r6, .L424
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4624              		.loc 1 4513 0
 4625 0038 1146     		mov	r1, r2
 4626 003a 3046     		mov	r0, r6
 4627 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4628              	.LVL430:
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4629              		.loc 1 4520 0
 4630 0040 4FF08052 		mov	r2, #268435456
 4631 0044 164B     		ldr	r3, .L429+4
 4632 0046 1A60     		str	r2, [r3]
 4633              		.syntax unified
 4634              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4635 0048 BFF34F8F 		dsb
 4636              	@ 0 "" 2
 4637              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4638 004c BFF36F8F 		isb
 4639              	@ 0 "" 2
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 184


 4640              		.thumb
 4641              		.syntax unified
 4642              	.L424:
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4643              		.loc 1 4532 0
 4644 0050 FFF7FEFF 		bl	vPortExitCritical
 4645              	.LVL431:
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4646              		.loc 1 4534 0
 4647 0054 FFF7FEFF 		bl	vPortEnterCritical
 4648              	.LVL432:
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4649              		.loc 1 4538 0
 4650 0058 24B1     		cbz	r4, .L425
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4651              		.loc 1 4542 0
 4652 005a 104B     		ldr	r3, .L429
 4653 005c D3F80031 		ldr	r3, [r3, #256]
 4654 0060 1B6E     		ldr	r3, [r3, #96]
 4655 0062 2360     		str	r3, [r4]
 4656              	.L425:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4657              		.loc 1 4549 0
 4658 0064 0D4B     		ldr	r3, .L429
 4659 0066 D3F80031 		ldr	r3, [r3, #256]
 4660 006a 93F86430 		ldrb	r3, [r3, #100]	@ zero_extendqisi2
 4661 006e DBB2     		uxtb	r3, r3
 4662 0070 022B     		cmp	r3, #2
 4663 0072 08D1     		bne	.L427
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
 4664              		.loc 1 4558 0
 4665 0074 094B     		ldr	r3, .L429
 4666 0076 D3F80021 		ldr	r2, [r3, #256]
 4667 007a 136E     		ldr	r3, [r2, #96]
 4668 007c 23EA0505 		bic	r5, r3, r5
 4669              	.LVL433:
 4670 0080 1566     		str	r5, [r2, #96]
 4671              	.LVL434:
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4672              		.loc 1 4559 0
 4673 0082 0124     		movs	r4, #1
 4674              	.LVL435:
 4675 0084 00E0     		b	.L426
 4676              	.LVL436:
 4677              	.L427:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4678              		.loc 1 4552 0
 4679 0086 0024     		movs	r4, #0
 4680              	.LVL437:
 4681              	.L426:
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 4682              		.loc 1 4562 0
 4683 0088 044B     		ldr	r3, .L429
 4684 008a D3F80031 		ldr	r3, [r3, #256]
 4685 008e 0022     		movs	r2, #0
 4686 0090 83F86420 		strb	r2, [r3, #100]
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 185


 4687              		.loc 1 4564 0
 4688 0094 FFF7FEFF 		bl	vPortExitCritical
 4689              	.LVL438:
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4690              		.loc 1 4567 0
 4691 0098 2046     		mov	r0, r4
 4692 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4693              	.LVL439:
 4694              	.L430:
 4695              		.align	2
 4696              	.L429:
 4697 009c 00000000 		.word	.LANCHOR0
 4698 00a0 04ED00E0 		.word	-536810236
 4699              		.cfi_endproc
 4700              	.LFE189:
 4701              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 4702              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4703              		.align	2
 4704              		.global	xTaskGenericNotify
 4705              		.thumb
 4706              		.thumb_func
 4707              		.type	xTaskGenericNotify, %function
 4708              	xTaskGenericNotify:
 4709              	.LFB190:
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4710              		.loc 1 4575 0
 4711              		.cfi_startproc
 4712              		@ args = 0, pretend = 0, frame = 0
 4713              		@ frame_needed = 0, uses_anonymous_args = 0
 4714              	.LVL440:
 4715 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4716              		.cfi_def_cfa_offset 24
 4717              		.cfi_offset 3, -24
 4718              		.cfi_offset 4, -20
 4719              		.cfi_offset 5, -16
 4720              		.cfi_offset 6, -12
 4721              		.cfi_offset 7, -8
 4722              		.cfi_offset 14, -4
 4723              	.LVL441:
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4724              		.loc 1 4580 0
 4725 0002 40B9     		cbnz	r0, .L432
 4726              	.LBB175:
 4727              	.LBB176:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4728              		.loc 2 156 0
 4729              		.syntax unified
 4730              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4731 0004 4FF03F03 			mov r3, #63												
 4732 0008 83F31188 		msr basepri, r3											
 4733 000c BFF36F8F 		isb														
 4734 0010 BFF34F8F 		dsb														
 4735              	
 4736              	@ 0 "" 2
 4737              	.LVL442:
 4738              		.thumb
 4739              		.syntax unified
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 186


 4740              	.L433:
 4741 0014 FEE7     		b	.L433
 4742              	.LVL443:
 4743              	.L432:
 4744 0016 0446     		mov	r4, r0
 4745 0018 1F46     		mov	r7, r3
 4746 001a 1546     		mov	r5, r2
 4747 001c 0E46     		mov	r6, r1
 4748              	.LVL444:
 4749              	.LBE176:
 4750              	.LBE175:
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4751              		.loc 1 4583 0
 4752 001e FFF7FEFF 		bl	vPortEnterCritical
 4753              	.LVL445:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4754              		.loc 1 4585 0
 4755 0022 0FB1     		cbz	r7, .L434
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4756              		.loc 1 4587 0
 4757 0024 236E     		ldr	r3, [r4, #96]
 4758 0026 3B60     		str	r3, [r7]
 4759              	.L434:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4760              		.loc 1 4590 0
 4761 0028 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 4762 002c DBB2     		uxtb	r3, r3
 4763              	.LVL446:
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4764              		.loc 1 4592 0
 4765 002e 0222     		movs	r2, #2
 4766 0030 84F86420 		strb	r2, [r4, #100]
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4767              		.loc 1 4594 0
 4768 0034 6A1E     		subs	r2, r5, #1
 4769 0036 032A     		cmp	r2, #3
 4770 0038 15D8     		bhi	.L445
 4771 003a DFE802F0 		tbb	[pc, r2]
 4772              	.L437:
 4773 003e 02       		.byte	(.L436-.L437)/2
 4774 003f 07       		.byte	(.L438-.L437)/2
 4775 0040 0C       		.byte	(.L439-.L437)/2
 4776 0041 0F       		.byte	(.L440-.L437)/2
 4777              		.p2align 1
 4778              	.L436:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4779              		.loc 1 4597 0
 4780 0042 226E     		ldr	r2, [r4, #96]
 4781 0044 1643     		orrs	r6, r6, r2
 4782              	.LVL447:
 4783 0046 2666     		str	r6, [r4, #96]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4784              		.loc 1 4577 0
 4785 0048 0125     		movs	r5, #1
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4786              		.loc 1 4598 0
 4787 004a 0FE0     		b	.L435
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 187


 4788              	.LVL448:
 4789              	.L438:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4790              		.loc 1 4601 0
 4791 004c 226E     		ldr	r2, [r4, #96]
 4792 004e 0132     		adds	r2, r2, #1
 4793 0050 2266     		str	r2, [r4, #96]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4794              		.loc 1 4577 0
 4795 0052 0125     		movs	r5, #1
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4796              		.loc 1 4602 0
 4797 0054 0AE0     		b	.L435
 4798              	.L439:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4799              		.loc 1 4605 0
 4800 0056 2666     		str	r6, [r4, #96]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4801              		.loc 1 4577 0
 4802 0058 0125     		movs	r5, #1
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4803              		.loc 1 4606 0
 4804 005a 07E0     		b	.L435
 4805              	.L440:
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4806              		.loc 1 4609 0
 4807 005c 022B     		cmp	r3, #2
 4808 005e 04D0     		beq	.L446
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4809              		.loc 1 4611 0
 4810 0060 2666     		str	r6, [r4, #96]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4811              		.loc 1 4577 0
 4812 0062 0125     		movs	r5, #1
 4813 0064 02E0     		b	.L435
 4814              	.L445:
 4815 0066 0125     		movs	r5, #1
 4816 0068 00E0     		b	.L435
 4817              	.L446:
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4818              		.loc 1 4616 0
 4819 006a 0025     		movs	r5, #0
 4820              	.LVL449:
 4821              	.L435:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4822              		.loc 1 4630 0
 4823 006c 012B     		cmp	r3, #1
 4824 006e 2ED1     		bne	.L441
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4825              		.loc 1 4632 0
 4826 0070 261D     		adds	r6, r4, #4
 4827 0072 3046     		mov	r0, r6
 4828 0074 FFF7FEFF 		bl	uxListRemove
 4829              	.LVL450:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4830              		.loc 1 4633 0
 4831 0078 E36A     		ldr	r3, [r4, #44]
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 188


 4832 007a 174A     		ldr	r2, .L448
 4833 007c D2F80C21 		ldr	r2, [r2, #268]
 4834 0080 9342     		cmp	r3, r2
 4835 0082 02D9     		bls	.L442
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4836              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4837 0084 144A     		ldr	r2, .L448
 4838 0086 C2F80C31 		str	r3, [r2, #268]
 4839              	.L442:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4840              		.loc 1 4633 0 discriminator 3
 4841 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4842 008e 9A00     		lsls	r2, r3, #2
 4843 0090 3146     		mov	r1, r6
 4844 0092 1248     		ldr	r0, .L448+4
 4845 0094 1044     		add	r0, r0, r2
 4846 0096 FFF7FEFF 		bl	vListInsertEnd
 4847              	.LVL451:
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4848              		.loc 1 4636 0 is_stmt 1 discriminator 3
 4849 009a A36A     		ldr	r3, [r4, #40]
 4850 009c 43B1     		cbz	r3, .L443
 4851              	.LBB177:
 4852              	.LBB178:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4853              		.loc 2 156 0
 4854              		.syntax unified
 4855              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4856 009e 4FF03F03 			mov r3, #63												
 4857 00a2 83F31188 		msr basepri, r3											
 4858 00a6 BFF36F8F 		isb														
 4859 00aa BFF34F8F 		dsb														
 4860              	
 4861              	@ 0 "" 2
 4862              	.LVL452:
 4863              		.thumb
 4864              		.syntax unified
 4865              	.L444:
 4866 00ae FEE7     		b	.L444
 4867              	.L443:
 4868              	.LBE178:
 4869              	.LBE177:
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4870              		.loc 1 4654 0
 4871 00b0 E26A     		ldr	r2, [r4, #44]
 4872 00b2 094B     		ldr	r3, .L448
 4873 00b4 D3F80031 		ldr	r3, [r3, #256]
 4874 00b8 DB6A     		ldr	r3, [r3, #44]
 4875 00ba 9A42     		cmp	r2, r3
 4876 00bc 07D9     		bls	.L441
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4877              		.loc 1 4658 0
 4878 00be 4FF08052 		mov	r2, #268435456
 4879 00c2 074B     		ldr	r3, .L448+8
 4880 00c4 1A60     		str	r2, [r3]
 4881              		.syntax unified
 4882              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 189


 4883 00c6 BFF34F8F 		dsb
 4884              	@ 0 "" 2
 4885              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4886 00ca BFF36F8F 		isb
 4887              	@ 0 "" 2
 4888              		.thumb
 4889              		.syntax unified
 4890              	.L441:
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4891              		.loc 1 4670 0
 4892 00ce FFF7FEFF 		bl	vPortExitCritical
 4893              	.LVL453:
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4894              		.loc 1 4673 0
 4895 00d2 2846     		mov	r0, r5
 4896 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4897              	.LVL454:
 4898              	.L449:
 4899 00d6 00BF     		.align	2
 4900              	.L448:
 4901 00d8 00000000 		.word	.LANCHOR0
 4902 00dc 30000000 		.word	.LANCHOR0+48
 4903 00e0 04ED00E0 		.word	-536810236
 4904              		.cfi_endproc
 4905              	.LFE190:
 4906              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4907              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4908              		.align	2
 4909              		.global	xTaskGenericNotifyFromISR
 4910              		.thumb
 4911              		.thumb_func
 4912              		.type	xTaskGenericNotifyFromISR, %function
 4913              	xTaskGenericNotifyFromISR:
 4914              	.LFB191:
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4915              		.loc 1 4681 0
 4916              		.cfi_startproc
 4917              		@ args = 4, pretend = 0, frame = 0
 4918              		@ frame_needed = 0, uses_anonymous_args = 0
 4919              	.LVL455:
 4920 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4921              		.cfi_def_cfa_offset 32
 4922              		.cfi_offset 3, -32
 4923              		.cfi_offset 4, -28
 4924              		.cfi_offset 5, -24
 4925              		.cfi_offset 6, -20
 4926              		.cfi_offset 7, -16
 4927              		.cfi_offset 8, -12
 4928              		.cfi_offset 9, -8
 4929              		.cfi_offset 14, -4
 4930 0004 089E     		ldr	r6, [sp, #32]
 4931              	.LVL456:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4932              		.loc 1 4687 0
 4933 0006 40B9     		cbnz	r0, .L451
 4934              	.LBB179:
 4935              	.LBB180:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 190


 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4936              		.loc 2 156 0
 4937              		.syntax unified
 4938              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4939 0008 4FF03F03 			mov r3, #63												
 4940 000c 83F31188 		msr basepri, r3											
 4941 0010 BFF36F8F 		isb														
 4942 0014 BFF34F8F 		dsb														
 4943              	
 4944              	@ 0 "" 2
 4945              	.LVL457:
 4946              		.thumb
 4947              		.syntax unified
 4948              	.L452:
 4949 0018 FEE7     		b	.L452
 4950              	.LVL458:
 4951              	.L451:
 4952 001a 0446     		mov	r4, r0
 4953 001c 9946     		mov	r9, r3
 4954 001e 1546     		mov	r5, r2
 4955 0020 8846     		mov	r8, r1
 4956              	.LBE180:
 4957              	.LBE179:
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4958              		.loc 1 4705 0
 4959 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4960              	.LVL459:
 4961              	.LBB181:
 4962              	.LBB182:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4963              		.loc 2 172 0
 4964              		.syntax unified
 4965              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4966 0026 EFF31187 			mrs r7, basepri											
 4967 002a 4FF03F03 		mov r3, #63												
 4968 002e 83F31188 		msr basepri, r3											
 4969 0032 BFF36F8F 		isb														
 4970 0036 BFF34F8F 		dsb														
 4971              	
 4972              	@ 0 "" 2
 4973              		.thumb
 4974              		.syntax unified
 4975              	.LBE182:
 4976              	.LBE181:
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4977              		.loc 1 4711 0
 4978 003a B9F1000F 		cmp	r9, #0
 4979 003e 02D0     		beq	.L453
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4980              		.loc 1 4713 0
 4981 0040 236E     		ldr	r3, [r4, #96]
 4982 0042 C9F80030 		str	r3, [r9]
 4983              	.L453:
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4984              		.loc 1 4716 0
 4985 0046 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 4986 004a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 191


 4987              	.LVL460:
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4988              		.loc 1 4717 0
 4989 004c 0222     		movs	r2, #2
 4990 004e 84F86420 		strb	r2, [r4, #100]
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4991              		.loc 1 4719 0
 4992 0052 6A1E     		subs	r2, r5, #1
 4993 0054 032A     		cmp	r2, #3
 4994 0056 18D8     		bhi	.L467
 4995 0058 DFE802F0 		tbb	[pc, r2]
 4996              	.L456:
 4997 005c 02       		.byte	(.L455-.L456)/2
 4998 005d 08       		.byte	(.L457-.L456)/2
 4999 005e 0D       		.byte	(.L458-.L456)/2
 5000 005f 11       		.byte	(.L459-.L456)/2
 5001              		.p2align 1
 5002              	.L455:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 5003              		.loc 1 4722 0
 5004 0060 226E     		ldr	r2, [r4, #96]
 5005 0062 42EA0802 		orr	r2, r2, r8
 5006 0066 2266     		str	r2, [r4, #96]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5007              		.loc 1 4684 0
 5008 0068 0125     		movs	r5, #1
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5009              		.loc 1 4723 0
 5010 006a 11E0     		b	.L454
 5011              	.L457:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 5012              		.loc 1 4726 0
 5013 006c 226E     		ldr	r2, [r4, #96]
 5014 006e 0132     		adds	r2, r2, #1
 5015 0070 2266     		str	r2, [r4, #96]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5016              		.loc 1 4684 0
 5017 0072 0125     		movs	r5, #1
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5018              		.loc 1 4727 0
 5019 0074 0CE0     		b	.L454
 5020              	.L458:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 5021              		.loc 1 4730 0
 5022 0076 C4F86080 		str	r8, [r4, #96]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5023              		.loc 1 4684 0
 5024 007a 0125     		movs	r5, #1
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5025              		.loc 1 4731 0
 5026 007c 08E0     		b	.L454
 5027              	.L459:
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 5028              		.loc 1 4734 0
 5029 007e 022B     		cmp	r3, #2
 5030 0080 05D0     		beq	.L468
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 192


 5031              		.loc 1 4736 0
 5032 0082 C4F86080 		str	r8, [r4, #96]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5033              		.loc 1 4684 0
 5034 0086 0125     		movs	r5, #1
 5035 0088 02E0     		b	.L454
 5036              	.L467:
 5037 008a 0125     		movs	r5, #1
 5038 008c 00E0     		b	.L454
 5039              	.L468:
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 5040              		.loc 1 4741 0
 5041 008e 0025     		movs	r5, #0
 5042              	.L454:
 5043              	.LVL461:
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 5044              		.loc 1 4755 0
 5045 0090 012B     		cmp	r3, #1
 5046 0092 39D1     		bne	.L460
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5047              		.loc 1 4758 0
 5048 0094 A36A     		ldr	r3, [r4, #40]
 5049              	.LVL462:
 5050 0096 43B1     		cbz	r3, .L461
 5051              	.LBB183:
 5052              	.LBB184:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 5053              		.loc 2 156 0
 5054              		.syntax unified
 5055              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 5056 0098 4FF03F03 			mov r3, #63												
 5057 009c 83F31188 		msr basepri, r3											
 5058 00a0 BFF36F8F 		isb														
 5059 00a4 BFF34F8F 		dsb														
 5060              	
 5061              	@ 0 "" 2
 5062              	.LVL463:
 5063              		.thumb
 5064              		.syntax unified
 5065              	.L462:
 5066 00a8 FEE7     		b	.L462
 5067              	.L461:
 5068              	.LBE184:
 5069              	.LBE183:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 5070              		.loc 1 4760 0
 5071 00aa 1A4B     		ldr	r3, .L470
 5072 00ac D3F81831 		ldr	r3, [r3, #280]
 5073 00b0 B3B9     		cbnz	r3, .L463
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5074              		.loc 1 4762 0
 5075 00b2 04F10408 		add	r8, r4, #4
 5076              	.LVL464:
 5077 00b6 4046     		mov	r0, r8
 5078 00b8 FFF7FEFF 		bl	uxListRemove
 5079              	.LVL465:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 193


 5080              		.loc 1 4763 0
 5081 00bc E36A     		ldr	r3, [r4, #44]
 5082 00be 154A     		ldr	r2, .L470
 5083 00c0 D2F80C21 		ldr	r2, [r2, #268]
 5084 00c4 9342     		cmp	r3, r2
 5085 00c6 02D9     		bls	.L464
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 5086              		.loc 1 4763 0 is_stmt 0 discriminator 1
 5087 00c8 124A     		ldr	r2, .L470
 5088 00ca C2F80C31 		str	r3, [r2, #268]
 5089              	.L464:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 5090              		.loc 1 4763 0 discriminator 3
 5091 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 5092 00d2 9A00     		lsls	r2, r3, #2
 5093 00d4 4146     		mov	r1, r8
 5094 00d6 1048     		ldr	r0, .L470+4
 5095 00d8 1044     		add	r0, r0, r2
 5096 00da FFF7FEFF 		bl	vListInsertEnd
 5097              	.LVL466:
 5098 00de 04E0     		b	.L465
 5099              	.LVL467:
 5100              	.L463:
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 5101              		.loc 1 4769 0 is_stmt 1
 5102 00e0 04F11801 		add	r1, r4, #24
 5103 00e4 0D48     		ldr	r0, .L470+8
 5104 00e6 FFF7FEFF 		bl	vListInsertEnd
 5105              	.LVL468:
 5106              	.L465:
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 5107              		.loc 1 4772 0
 5108 00ea E26A     		ldr	r2, [r4, #44]
 5109 00ec 094B     		ldr	r3, .L470
 5110 00ee D3F80031 		ldr	r3, [r3, #256]
 5111 00f2 DB6A     		ldr	r3, [r3, #44]
 5112 00f4 9A42     		cmp	r2, r3
 5113 00f6 07D9     		bls	.L460
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 5114              		.loc 1 4776 0
 5115 00f8 16B1     		cbz	r6, .L466
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 5116              		.loc 1 4778 0
 5117 00fa 0123     		movs	r3, #1
 5118 00fc 3360     		str	r3, [r6]
 5119 00fe 03E0     		b	.L460
 5120              	.L466:
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 5121              		.loc 1 4785 0
 5122 0100 0122     		movs	r2, #1
 5123 0102 044B     		ldr	r3, .L470
 5124 0104 C3F82821 		str	r2, [r3, #296]
 5125              	.L460:
 5126              	.LVL469:
 5127              	.LBB185:
 5128              	.LBB186:
 5129              		.loc 2 190 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 194


 5130              		.syntax unified
 5131              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 5132 0108 87F31188 			msr basepri, r7	
 5133              	@ 0 "" 2
 5134              	.LVL470:
 5135              		.thumb
 5136              		.syntax unified
 5137              	.LBE186:
 5138              	.LBE185:
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5139              		.loc 1 4797 0
 5140 010c 2846     		mov	r0, r5
 5141 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5142              	.LVL471:
 5143              	.L471:
 5144 0112 00BF     		.align	2
 5145              	.L470:
 5146 0114 00000000 		.word	.LANCHOR0
 5147 0118 30000000 		.word	.LANCHOR0+48
 5148 011c 14000000 		.word	.LANCHOR0+20
 5149              		.cfi_endproc
 5150              	.LFE191:
 5151              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 5152              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5153              		.align	2
 5154              		.global	vTaskNotifyGiveFromISR
 5155              		.thumb
 5156              		.thumb_func
 5157              		.type	vTaskNotifyGiveFromISR, %function
 5158              	vTaskNotifyGiveFromISR:
 5159              	.LFB192:
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 5160              		.loc 1 4805 0
 5161              		.cfi_startproc
 5162              		@ args = 0, pretend = 0, frame = 0
 5163              		@ frame_needed = 0, uses_anonymous_args = 0
 5164              	.LVL472:
 5165 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5166              		.cfi_def_cfa_offset 24
 5167              		.cfi_offset 3, -24
 5168              		.cfi_offset 4, -20
 5169              		.cfi_offset 5, -16
 5170              		.cfi_offset 6, -12
 5171              		.cfi_offset 7, -8
 5172              		.cfi_offset 14, -4
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5173              		.loc 1 4810 0
 5174 0002 40B9     		cbnz	r0, .L473
 5175              	.LBB187:
 5176              	.LBB188:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 5177              		.loc 2 156 0
 5178              		.syntax unified
 5179              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 5180 0004 4FF03F03 			mov r3, #63												
 5181 0008 83F31188 		msr basepri, r3											
 5182 000c BFF36F8F 		isb														
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 195


 5183 0010 BFF34F8F 		dsb														
 5184              	
 5185              	@ 0 "" 2
 5186              	.LVL473:
 5187              		.thumb
 5188              		.syntax unified
 5189              	.L474:
 5190 0014 FEE7     		b	.L474
 5191              	.L473:
 5192 0016 0446     		mov	r4, r0
 5193 0018 0D46     		mov	r5, r1
 5194              	.LBE188:
 5195              	.LBE187:
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5196              		.loc 1 4828 0
 5197 001a FFF7FEFF 		bl	vPortValidateInterruptPriority
 5198              	.LVL474:
 5199              	.LBB189:
 5200              	.LBB190:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 5201              		.loc 2 172 0
 5202              		.syntax unified
 5203              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 5204 001e EFF31186 			mrs r6, basepri											
 5205 0022 4FF03F03 		mov r3, #63												
 5206 0026 83F31188 		msr basepri, r3											
 5207 002a BFF36F8F 		isb														
 5208 002e BFF34F8F 		dsb														
 5209              	
 5210              	@ 0 "" 2
 5211              		.thumb
 5212              		.syntax unified
 5213              	.LBE190:
 5214              	.LBE189:
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5215              		.loc 1 4834 0
 5216 0032 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 5217 0036 DBB2     		uxtb	r3, r3
 5218              	.LVL475:
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5219              		.loc 1 4835 0
 5220 0038 0222     		movs	r2, #2
 5221 003a 84F86420 		strb	r2, [r4, #100]
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5222              		.loc 1 4839 0
 5223 003e 226E     		ldr	r2, [r4, #96]
 5224 0040 0132     		adds	r2, r2, #1
 5225 0042 2266     		str	r2, [r4, #96]
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 5226              		.loc 1 4845 0
 5227 0044 012B     		cmp	r3, #1
 5228 0046 38D1     		bne	.L475
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5229              		.loc 1 4848 0
 5230 0048 A36A     		ldr	r3, [r4, #40]
 5231              	.LVL476:
 5232 004a 43B1     		cbz	r3, .L476
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 196


 5233              	.LBB191:
 5234              	.LBB192:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 5235              		.loc 2 156 0
 5236              		.syntax unified
 5237              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 5238 004c 4FF03F03 			mov r3, #63												
 5239 0050 83F31188 		msr basepri, r3											
 5240 0054 BFF36F8F 		isb														
 5241 0058 BFF34F8F 		dsb														
 5242              	
 5243              	@ 0 "" 2
 5244              	.LVL477:
 5245              		.thumb
 5246              		.syntax unified
 5247              	.L477:
 5248 005c FEE7     		b	.L477
 5249              	.L476:
 5250              	.LBE192:
 5251              	.LBE191:
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 5252              		.loc 1 4850 0
 5253 005e 184B     		ldr	r3, .L483
 5254 0060 D3F81831 		ldr	r3, [r3, #280]
 5255 0064 ABB9     		cbnz	r3, .L478
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5256              		.loc 1 4852 0
 5257 0066 271D     		adds	r7, r4, #4
 5258 0068 3846     		mov	r0, r7
 5259 006a FFF7FEFF 		bl	uxListRemove
 5260              	.LVL478:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 5261              		.loc 1 4853 0
 5262 006e E36A     		ldr	r3, [r4, #44]
 5263 0070 134A     		ldr	r2, .L483
 5264 0072 D2F80C21 		ldr	r2, [r2, #268]
 5265 0076 9342     		cmp	r3, r2
 5266 0078 02D9     		bls	.L479
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 5267              		.loc 1 4853 0 is_stmt 0 discriminator 1
 5268 007a 114A     		ldr	r2, .L483
 5269 007c C2F80C31 		str	r3, [r2, #268]
 5270              	.L479:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 5271              		.loc 1 4853 0 discriminator 3
 5272 0080 03EB8303 		add	r3, r3, r3, lsl #2
 5273 0084 9A00     		lsls	r2, r3, #2
 5274 0086 3946     		mov	r1, r7
 5275 0088 0E48     		ldr	r0, .L483+4
 5276 008a 1044     		add	r0, r0, r2
 5277 008c FFF7FEFF 		bl	vListInsertEnd
 5278              	.LVL479:
 5279 0090 04E0     		b	.L480
 5280              	.L478:
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 5281              		.loc 1 4859 0 is_stmt 1
 5282 0092 04F11801 		add	r1, r4, #24
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 197


 5283 0096 0C48     		ldr	r0, .L483+8
 5284 0098 FFF7FEFF 		bl	vListInsertEnd
 5285              	.LVL480:
 5286              	.L480:
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 5287              		.loc 1 4862 0
 5288 009c E26A     		ldr	r2, [r4, #44]
 5289 009e 084B     		ldr	r3, .L483
 5290 00a0 D3F80031 		ldr	r3, [r3, #256]
 5291 00a4 DB6A     		ldr	r3, [r3, #44]
 5292 00a6 9A42     		cmp	r2, r3
 5293 00a8 07D9     		bls	.L475
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 5294              		.loc 1 4866 0
 5295 00aa 15B1     		cbz	r5, .L481
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 5296              		.loc 1 4868 0
 5297 00ac 0123     		movs	r3, #1
 5298 00ae 2B60     		str	r3, [r5]
 5299 00b0 03E0     		b	.L475
 5300              	.L481:
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 5301              		.loc 1 4875 0
 5302 00b2 0122     		movs	r2, #1
 5303 00b4 024B     		ldr	r3, .L483
 5304 00b6 C3F82821 		str	r2, [r3, #296]
 5305              	.L475:
 5306              	.LVL481:
 5307              	.LBB193:
 5308              	.LBB194:
 5309              		.loc 2 190 0
 5310              		.syntax unified
 5311              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 5312 00ba 86F31188 			msr basepri, r6	
 5313              	@ 0 "" 2
 5314              	.LVL482:
 5315              		.thumb
 5316              		.syntax unified
 5317 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5318              	.LVL483:
 5319              	.L484:
 5320              		.align	2
 5321              	.L483:
 5322 00c0 00000000 		.word	.LANCHOR0
 5323 00c4 30000000 		.word	.LANCHOR0+48
 5324 00c8 14000000 		.word	.LANCHOR0+20
 5325              	.LBE194:
 5326              	.LBE193:
 5327              		.cfi_endproc
 5328              	.LFE192:
 5329              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 5330              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5331              		.align	2
 5332              		.global	xTaskNotifyStateClear
 5333              		.thumb
 5334              		.thumb_func
 5335              		.type	xTaskNotifyStateClear, %function
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 198


 5336              	xTaskNotifyStateClear:
 5337              	.LFB193:
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 5338              		.loc 1 4894 0
 5339              		.cfi_startproc
 5340              		@ args = 0, pretend = 0, frame = 0
 5341              		@ frame_needed = 0, uses_anonymous_args = 0
 5342              	.LVL484:
 5343 0000 10B5     		push	{r4, lr}
 5344              		.cfi_def_cfa_offset 8
 5345              		.cfi_offset 4, -8
 5346              		.cfi_offset 14, -4
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5347              		.loc 1 4900 0
 5348 0002 0446     		mov	r4, r0
 5349 0004 10B9     		cbnz	r0, .L486
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5350              		.loc 1 4900 0 is_stmt 0 discriminator 1
 5351 0006 0A4B     		ldr	r3, .L490
 5352 0008 D3F80041 		ldr	r4, [r3, #256]
 5353              	.LVL485:
 5354              	.L486:
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 5355              		.loc 1 4902 0 is_stmt 1 discriminator 4
 5356 000c FFF7FEFF 		bl	vPortEnterCritical
 5357              	.LVL486:
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 5358              		.loc 1 4904 0 discriminator 4
 5359 0010 94F86430 		ldrb	r3, [r4, #100]	@ zero_extendqisi2
 5360 0014 DBB2     		uxtb	r3, r3
 5361 0016 022B     		cmp	r3, #2
 5362 0018 04D1     		bne	.L488
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 5363              		.loc 1 4906 0
 5364 001a 0023     		movs	r3, #0
 5365 001c 84F86430 		strb	r3, [r4, #100]
 5366              	.LVL487:
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 5367              		.loc 1 4907 0
 5368 0020 0124     		movs	r4, #1
 5369              	.LVL488:
 5370 0022 00E0     		b	.L487
 5371              	.LVL489:
 5372              	.L488:
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 5373              		.loc 1 4911 0
 5374 0024 0024     		movs	r4, #0
 5375              	.LVL490:
 5376              	.L487:
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5377              		.loc 1 4914 0
 5378 0026 FFF7FEFF 		bl	vPortExitCritical
 5379              	.LVL491:
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 5380              		.loc 1 4917 0
 5381 002a 2046     		mov	r0, r4
 5382 002c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 199


 5383              	.LVL492:
 5384              	.L491:
 5385 002e 00BF     		.align	2
 5386              	.L490:
 5387 0030 00000000 		.word	.LANCHOR0
 5388              		.cfi_endproc
 5389              	.LFE193:
 5390              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 5391              		.global	pxCurrentTCB
 5392              		.section	.rodata.str1.4,"aMS",%progbits,1
 5393              		.align	2
 5394              	.LC0:
 5395 0000 49444C45 		.ascii	"IDLE\000"
 5395      00
 5396 0005 000000   		.space	3
 5397              	.LC1:
 5398 0008 09256309 		.ascii	"\011%c\011%u\011%u\011%u\015\012\000"
 5398      25750925 
 5398      75092575 
 5398      0D0A00
 5399              		.bss
 5400              		.align	2
 5401              		.set	.LANCHOR0,. + 0
 5402              		.type	xSuspendedTaskList, %object
 5403              		.size	xSuspendedTaskList, 20
 5404              	xSuspendedTaskList:
 5405 0000 00000000 		.space	20
 5405      00000000 
 5405      00000000 
 5405      00000000 
 5405      00000000 
 5406              		.type	xPendingReadyList, %object
 5407              		.size	xPendingReadyList, 20
 5408              	xPendingReadyList:
 5409 0014 00000000 		.space	20
 5409      00000000 
 5409      00000000 
 5409      00000000 
 5409      00000000 
 5410              		.type	pxDelayedTaskList, %object
 5411              		.size	pxDelayedTaskList, 4
 5412              	pxDelayedTaskList:
 5413 0028 00000000 		.space	4
 5414              		.type	xNextTaskUnblockTime, %object
 5415              		.size	xNextTaskUnblockTime, 4
 5416              	xNextTaskUnblockTime:
 5417 002c 00000000 		.space	4
 5418              		.type	pxReadyTasksLists, %object
 5419              		.size	pxReadyTasksLists, 140
 5420              	pxReadyTasksLists:
 5421 0030 00000000 		.space	140
 5421      00000000 
 5421      00000000 
 5421      00000000 
 5421      00000000 
 5422              		.type	xDelayedTaskList1, %object
 5423              		.size	xDelayedTaskList1, 20
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 200


 5424              	xDelayedTaskList1:
 5425 00bc 00000000 		.space	20
 5425      00000000 
 5425      00000000 
 5425      00000000 
 5425      00000000 
 5426              		.type	xDelayedTaskList2, %object
 5427              		.size	xDelayedTaskList2, 20
 5428              	xDelayedTaskList2:
 5429 00d0 00000000 		.space	20
 5429      00000000 
 5429      00000000 
 5429      00000000 
 5429      00000000 
 5430              		.type	xTasksWaitingTermination, %object
 5431              		.size	xTasksWaitingTermination, 20
 5432              	xTasksWaitingTermination:
 5433 00e4 00000000 		.space	20
 5433      00000000 
 5433      00000000 
 5433      00000000 
 5433      00000000 
 5434              		.type	pxOverflowDelayedTaskList, %object
 5435              		.size	pxOverflowDelayedTaskList, 4
 5436              	pxOverflowDelayedTaskList:
 5437 00f8 00000000 		.space	4
 5438              		.type	uxCurrentNumberOfTasks, %object
 5439              		.size	uxCurrentNumberOfTasks, 4
 5440              	uxCurrentNumberOfTasks:
 5441 00fc 00000000 		.space	4
 5442              		.type	pxCurrentTCB, %object
 5443              		.size	pxCurrentTCB, 4
 5444              	pxCurrentTCB:
 5445 0100 00000000 		.space	4
 5446              		.type	xSchedulerRunning, %object
 5447              		.size	xSchedulerRunning, 4
 5448              	xSchedulerRunning:
 5449 0104 00000000 		.space	4
 5450              		.type	uxTaskNumber, %object
 5451              		.size	uxTaskNumber, 4
 5452              	uxTaskNumber:
 5453 0108 00000000 		.space	4
 5454              		.type	uxTopReadyPriority, %object
 5455              		.size	uxTopReadyPriority, 4
 5456              	uxTopReadyPriority:
 5457 010c 00000000 		.space	4
 5458              		.type	uxDeletedTasksWaitingCleanUp, %object
 5459              		.size	uxDeletedTasksWaitingCleanUp, 4
 5460              	uxDeletedTasksWaitingCleanUp:
 5461 0110 00000000 		.space	4
 5462              		.type	xTickCount, %object
 5463              		.size	xTickCount, 4
 5464              	xTickCount:
 5465 0114 00000000 		.space	4
 5466              		.type	uxSchedulerSuspended, %object
 5467              		.size	uxSchedulerSuspended, 4
 5468              	uxSchedulerSuspended:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 201


 5469 0118 00000000 		.space	4
 5470              		.type	xIdleTaskHandle, %object
 5471              		.size	xIdleTaskHandle, 4
 5472              	xIdleTaskHandle:
 5473 011c 00000000 		.space	4
 5474              		.type	xNumOfOverflows, %object
 5475              		.size	xNumOfOverflows, 4
 5476              	xNumOfOverflows:
 5477 0120 00000000 		.space	4
 5478              		.type	uxPendedTicks, %object
 5479              		.size	uxPendedTicks, 4
 5480              	uxPendedTicks:
 5481 0124 00000000 		.space	4
 5482              		.type	xYieldPending, %object
 5483              		.size	xYieldPending, 4
 5484              	xYieldPending:
 5485 0128 00000000 		.space	4
 5486              		.text
 5487              	.Letext0:
 5488              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5489              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5490              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5491              		.file 6 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/projdefs.h"
 5492              		.file 7 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 5493              		.file 8 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 5494              		.file 9 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 5495              		.file 10 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/portable.h"
 5496              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 5497              		.file 12 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 5498              		.file 13 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 5499              		.section	.debug_info,"",%progbits
 5500              	.Ldebug_info0:
 5501 0000 42290000 		.4byte	0x2942
 5502 0004 0400     		.2byte	0x4
 5503 0006 00000000 		.4byte	.Ldebug_abbrev0
 5504 000a 04       		.byte	0x4
 5505 000b 01       		.uleb128 0x1
 5506 000c C8020000 		.4byte	.LASF270
 5507 0010 0C       		.byte	0xc
 5508 0011 720F0000 		.4byte	.LASF271
 5509 0015 B30B0000 		.4byte	.LASF272
 5510 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 5511 001d 00000000 		.4byte	0
 5512 0021 00000000 		.4byte	.Ldebug_line0
 5513 0025 02       		.uleb128 0x2
 5514 0026 2B060000 		.4byte	.LASF4
 5515 002a 03       		.byte	0x3
 5516 002b D8       		.byte	0xd8
 5517 002c 30000000 		.4byte	0x30
 5518 0030 03       		.uleb128 0x3
 5519 0031 04       		.byte	0x4
 5520 0032 07       		.byte	0x7
 5521 0033 39010000 		.4byte	.LASF0
 5522 0037 04       		.uleb128 0x4
 5523 0038 04       		.byte	0x4
 5524 0039 05       		.byte	0x5
 5525 003a 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 202


 5526 003e 03       		.uleb128 0x3
 5527 003f 08       		.byte	0x8
 5528 0040 05       		.byte	0x5
 5529 0041 06090000 		.4byte	.LASF1
 5530 0045 03       		.uleb128 0x3
 5531 0046 08       		.byte	0x8
 5532 0047 04       		.byte	0x4
 5533 0048 C10A0000 		.4byte	.LASF2
 5534 004c 03       		.uleb128 0x3
 5535 004d 01       		.byte	0x1
 5536 004e 06       		.byte	0x6
 5537 004f 88100000 		.4byte	.LASF3
 5538 0053 02       		.uleb128 0x2
 5539 0054 3F0D0000 		.4byte	.LASF5
 5540 0058 04       		.byte	0x4
 5541 0059 1D       		.byte	0x1d
 5542 005a 5E000000 		.4byte	0x5e
 5543 005e 03       		.uleb128 0x3
 5544 005f 01       		.byte	0x1
 5545 0060 08       		.byte	0x8
 5546 0061 290B0000 		.4byte	.LASF6
 5547 0065 03       		.uleb128 0x3
 5548 0066 02       		.byte	0x2
 5549 0067 05       		.byte	0x5
 5550 0068 590B0000 		.4byte	.LASF7
 5551 006c 02       		.uleb128 0x2
 5552 006d 71050000 		.4byte	.LASF8
 5553 0071 04       		.byte	0x4
 5554 0072 2B       		.byte	0x2b
 5555 0073 77000000 		.4byte	0x77
 5556 0077 03       		.uleb128 0x3
 5557 0078 02       		.byte	0x2
 5558 0079 07       		.byte	0x7
 5559 007a 94100000 		.4byte	.LASF9
 5560 007e 02       		.uleb128 0x2
 5561 007f 9F010000 		.4byte	.LASF10
 5562 0083 04       		.byte	0x4
 5563 0084 3F       		.byte	0x3f
 5564 0085 89000000 		.4byte	0x89
 5565 0089 03       		.uleb128 0x3
 5566 008a 04       		.byte	0x4
 5567 008b 05       		.byte	0x5
 5568 008c 9D0B0000 		.4byte	.LASF11
 5569 0090 02       		.uleb128 0x2
 5570 0091 9E0E0000 		.4byte	.LASF12
 5571 0095 04       		.byte	0x4
 5572 0096 41       		.byte	0x41
 5573 0097 9B000000 		.4byte	0x9b
 5574 009b 03       		.uleb128 0x3
 5575 009c 04       		.byte	0x4
 5576 009d 07       		.byte	0x7
 5577 009e B70D0000 		.4byte	.LASF13
 5578 00a2 03       		.uleb128 0x3
 5579 00a3 08       		.byte	0x8
 5580 00a4 07       		.byte	0x7
 5581 00a5 A2040000 		.4byte	.LASF14
 5582 00a9 03       		.uleb128 0x3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 203


 5583 00aa 04       		.byte	0x4
 5584 00ab 07       		.byte	0x7
 5585 00ac 8F0D0000 		.4byte	.LASF15
 5586 00b0 05       		.uleb128 0x5
 5587 00b1 04       		.byte	0x4
 5588 00b2 06       		.uleb128 0x6
 5589 00b3 04       		.byte	0x4
 5590 00b4 B8000000 		.4byte	0xb8
 5591 00b8 03       		.uleb128 0x3
 5592 00b9 01       		.byte	0x1
 5593 00ba 08       		.byte	0x8
 5594 00bb 4B000000 		.4byte	.LASF16
 5595 00bf 06       		.uleb128 0x6
 5596 00c0 04       		.byte	0x4
 5597 00c1 C5000000 		.4byte	0xc5
 5598 00c5 07       		.uleb128 0x7
 5599 00c6 B8000000 		.4byte	0xb8
 5600 00ca 02       		.uleb128 0x2
 5601 00cb 0C070000 		.4byte	.LASF17
 5602 00cf 05       		.byte	0x5
 5603 00d0 18       		.byte	0x18
 5604 00d1 53000000 		.4byte	0x53
 5605 00d5 02       		.uleb128 0x2
 5606 00d6 D50A0000 		.4byte	.LASF18
 5607 00da 05       		.byte	0x5
 5608 00db 24       		.byte	0x24
 5609 00dc 6C000000 		.4byte	0x6c
 5610 00e0 02       		.uleb128 0x2
 5611 00e1 F00D0000 		.4byte	.LASF19
 5612 00e5 05       		.byte	0x5
 5613 00e6 2C       		.byte	0x2c
 5614 00e7 7E000000 		.4byte	0x7e
 5615 00eb 02       		.uleb128 0x2
 5616 00ec FD030000 		.4byte	.LASF20
 5617 00f0 05       		.byte	0x5
 5618 00f1 30       		.byte	0x30
 5619 00f2 90000000 		.4byte	0x90
 5620 00f6 08       		.uleb128 0x8
 5621 00f7 EB000000 		.4byte	0xeb
 5622 00fb 08       		.uleb128 0x8
 5623 00fc CA000000 		.4byte	0xca
 5624 0100 03       		.uleb128 0x3
 5625 0101 04       		.byte	0x4
 5626 0102 04       		.byte	0x4
 5627 0103 6E040000 		.4byte	.LASF21
 5628 0107 03       		.uleb128 0x3
 5629 0108 08       		.byte	0x8
 5630 0109 04       		.byte	0x4
 5631 010a D2100000 		.4byte	.LASF22
 5632 010e 02       		.uleb128 0x2
 5633 010f DC060000 		.4byte	.LASF23
 5634 0113 06       		.byte	0x6
 5635 0114 23       		.byte	0x23
 5636 0115 19010000 		.4byte	0x119
 5637 0119 06       		.uleb128 0x6
 5638 011a 04       		.byte	0x4
 5639 011b 1F010000 		.4byte	0x11f
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 204


 5640 011f 09       		.uleb128 0x9
 5641 0120 2A010000 		.4byte	0x12a
 5642 0124 0A       		.uleb128 0xa
 5643 0125 B0000000 		.4byte	0xb0
 5644 0129 00       		.byte	0
 5645 012a 02       		.uleb128 0x2
 5646 012b 6C010000 		.4byte	.LASF24
 5647 012f 02       		.byte	0x2
 5648 0130 37       		.byte	0x37
 5649 0131 EB000000 		.4byte	0xeb
 5650 0135 02       		.uleb128 0x2
 5651 0136 5A090000 		.4byte	.LASF25
 5652 013a 02       		.byte	0x2
 5653 013b 38       		.byte	0x38
 5654 013c 89000000 		.4byte	0x89
 5655 0140 02       		.uleb128 0x2
 5656 0141 CC070000 		.4byte	.LASF26
 5657 0145 02       		.byte	0x2
 5658 0146 39       		.byte	0x39
 5659 0147 9B000000 		.4byte	0x9b
 5660 014b 02       		.uleb128 0x2
 5661 014c 950A0000 		.4byte	.LASF27
 5662 0150 02       		.byte	0x2
 5663 0151 3F       		.byte	0x3f
 5664 0152 EB000000 		.4byte	0xeb
 5665 0156 0B       		.uleb128 0xb
 5666 0157 B0000000 		.4byte	0xb0
 5667 015b 66010000 		.4byte	0x166
 5668 015f 0C       		.uleb128 0xc
 5669 0160 A9000000 		.4byte	0xa9
 5670 0164 04       		.byte	0x4
 5671 0165 00       		.byte	0
 5672 0166 0D       		.uleb128 0xd
 5673 0167 A9010000 		.4byte	.LASF34
 5674 016b 14       		.byte	0x14
 5675 016c 07       		.byte	0x7
 5676 016d 8B       		.byte	0x8b
 5677 016e AF010000 		.4byte	0x1af
 5678 0172 0E       		.uleb128 0xe
 5679 0173 920B0000 		.4byte	.LASF28
 5680 0177 07       		.byte	0x7
 5681 0178 8E       		.byte	0x8e
 5682 0179 4B010000 		.4byte	0x14b
 5683 017d 00       		.byte	0
 5684 017e 0E       		.uleb128 0xe
 5685 017f 97090000 		.4byte	.LASF29
 5686 0183 07       		.byte	0x7
 5687 0184 8F       		.byte	0x8f
 5688 0185 AF010000 		.4byte	0x1af
 5689 0189 04       		.byte	0x4
 5690 018a 0E       		.uleb128 0xe
 5691 018b 41050000 		.4byte	.LASF30
 5692 018f 07       		.byte	0x7
 5693 0190 90       		.byte	0x90
 5694 0191 AF010000 		.4byte	0x1af
 5695 0195 08       		.byte	0x8
 5696 0196 0E       		.uleb128 0xe
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 205


 5697 0197 470F0000 		.4byte	.LASF31
 5698 019b 07       		.byte	0x7
 5699 019c 91       		.byte	0x91
 5700 019d B0000000 		.4byte	0xb0
 5701 01a1 0C       		.byte	0xc
 5702 01a2 0E       		.uleb128 0xe
 5703 01a3 0D0B0000 		.4byte	.LASF32
 5704 01a7 07       		.byte	0x7
 5705 01a8 92       		.byte	0x92
 5706 01a9 B0000000 		.4byte	0xb0
 5707 01ad 10       		.byte	0x10
 5708 01ae 00       		.byte	0
 5709 01af 06       		.uleb128 0x6
 5710 01b0 04       		.byte	0x4
 5711 01b1 66010000 		.4byte	0x166
 5712 01b5 02       		.uleb128 0x2
 5713 01b6 8D070000 		.4byte	.LASF33
 5714 01ba 07       		.byte	0x7
 5715 01bb 95       		.byte	0x95
 5716 01bc 66010000 		.4byte	0x166
 5717 01c0 0D       		.uleb128 0xd
 5718 01c1 40060000 		.4byte	.LASF35
 5719 01c5 0C       		.byte	0xc
 5720 01c6 07       		.byte	0x7
 5721 01c7 97       		.byte	0x97
 5722 01c8 F1010000 		.4byte	0x1f1
 5723 01cc 0E       		.uleb128 0xe
 5724 01cd 920B0000 		.4byte	.LASF28
 5725 01d1 07       		.byte	0x7
 5726 01d2 9A       		.byte	0x9a
 5727 01d3 4B010000 		.4byte	0x14b
 5728 01d7 00       		.byte	0
 5729 01d8 0E       		.uleb128 0xe
 5730 01d9 97090000 		.4byte	.LASF29
 5731 01dd 07       		.byte	0x7
 5732 01de 9B       		.byte	0x9b
 5733 01df AF010000 		.4byte	0x1af
 5734 01e3 04       		.byte	0x4
 5735 01e4 0E       		.uleb128 0xe
 5736 01e5 41050000 		.4byte	.LASF30
 5737 01e9 07       		.byte	0x7
 5738 01ea 9C       		.byte	0x9c
 5739 01eb AF010000 		.4byte	0x1af
 5740 01ef 08       		.byte	0x8
 5741 01f0 00       		.byte	0
 5742 01f1 02       		.uleb128 0x2
 5743 01f2 28080000 		.4byte	.LASF36
 5744 01f6 07       		.byte	0x7
 5745 01f7 9E       		.byte	0x9e
 5746 01f8 C0010000 		.4byte	0x1c0
 5747 01fc 0D       		.uleb128 0xd
 5748 01fd F4010000 		.4byte	.LASF37
 5749 0201 14       		.byte	0x14
 5750 0202 07       		.byte	0x7
 5751 0203 A3       		.byte	0xa3
 5752 0204 2D020000 		.4byte	0x22d
 5753 0208 0E       		.uleb128 0xe
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 206


 5754 0209 0C000000 		.4byte	.LASF38
 5755 020d 07       		.byte	0x7
 5756 020e A6       		.byte	0xa6
 5757 020f 2D020000 		.4byte	0x22d
 5758 0213 00       		.byte	0
 5759 0214 0E       		.uleb128 0xe
 5760 0215 64010000 		.4byte	.LASF39
 5761 0219 07       		.byte	0x7
 5762 021a A7       		.byte	0xa7
 5763 021b 32020000 		.4byte	0x232
 5764 021f 04       		.byte	0x4
 5765 0220 0E       		.uleb128 0xe
 5766 0221 EE070000 		.4byte	.LASF40
 5767 0225 07       		.byte	0x7
 5768 0226 A8       		.byte	0xa8
 5769 0227 F1010000 		.4byte	0x1f1
 5770 022b 08       		.byte	0x8
 5771 022c 00       		.byte	0
 5772 022d 08       		.uleb128 0x8
 5773 022e 40010000 		.4byte	0x140
 5774 0232 06       		.uleb128 0x6
 5775 0233 04       		.byte	0x4
 5776 0234 B5010000 		.4byte	0x1b5
 5777 0238 02       		.uleb128 0x2
 5778 0239 810A0000 		.4byte	.LASF41
 5779 023d 07       		.byte	0x7
 5780 023e AA       		.byte	0xaa
 5781 023f FC010000 		.4byte	0x1fc
 5782 0243 02       		.uleb128 0x2
 5783 0244 110A0000 		.4byte	.LASF42
 5784 0248 08       		.byte	0x8
 5785 0249 3D       		.byte	0x3d
 5786 024a B0000000 		.4byte	0xb0
 5787 024e 0F       		.uleb128 0xf
 5788 024f 01       		.byte	0x1
 5789 0250 5E000000 		.4byte	0x5e
 5790 0254 08       		.byte	0x8
 5791 0255 47       		.byte	0x47
 5792 0256 7F020000 		.4byte	0x27f
 5793 025a 10       		.uleb128 0x10
 5794 025b 350E0000 		.4byte	.LASF43
 5795 025f 00       		.byte	0
 5796 0260 10       		.uleb128 0x10
 5797 0261 88080000 		.4byte	.LASF44
 5798 0265 01       		.byte	0x1
 5799 0266 10       		.uleb128 0x10
 5800 0267 5C0F0000 		.4byte	.LASF45
 5801 026b 02       		.byte	0x2
 5802 026c 10       		.uleb128 0x10
 5803 026d 8E000000 		.4byte	.LASF46
 5804 0271 03       		.byte	0x3
 5805 0272 10       		.uleb128 0x10
 5806 0273 D3030000 		.4byte	.LASF47
 5807 0277 04       		.byte	0x4
 5808 0278 10       		.uleb128 0x10
 5809 0279 D80E0000 		.4byte	.LASF48
 5810 027d 05       		.byte	0x5
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 207


 5811 027e 00       		.byte	0
 5812 027f 02       		.uleb128 0x2
 5813 0280 760A0000 		.4byte	.LASF49
 5814 0284 08       		.byte	0x8
 5815 0285 4E       		.byte	0x4e
 5816 0286 4E020000 		.4byte	0x24e
 5817 028a 0F       		.uleb128 0xf
 5818 028b 01       		.byte	0x1
 5819 028c 5E000000 		.4byte	0x5e
 5820 0290 08       		.byte	0x8
 5821 0291 52       		.byte	0x52
 5822 0292 B5020000 		.4byte	0x2b5
 5823 0296 10       		.uleb128 0x10
 5824 0297 21010000 		.4byte	.LASF50
 5825 029b 00       		.byte	0
 5826 029c 10       		.uleb128 0x10
 5827 029d E5070000 		.4byte	.LASF51
 5828 02a1 01       		.byte	0x1
 5829 02a2 10       		.uleb128 0x10
 5830 02a3 BC000000 		.4byte	.LASF52
 5831 02a7 02       		.byte	0x2
 5832 02a8 10       		.uleb128 0x10
 5833 02a9 280D0000 		.4byte	.LASF53
 5834 02ad 03       		.byte	0x3
 5835 02ae 10       		.uleb128 0x10
 5836 02af A5070000 		.4byte	.LASF54
 5837 02b3 04       		.byte	0x4
 5838 02b4 00       		.byte	0
 5839 02b5 02       		.uleb128 0x2
 5840 02b6 2B010000 		.4byte	.LASF55
 5841 02ba 08       		.byte	0x8
 5842 02bb 58       		.byte	0x58
 5843 02bc 8A020000 		.4byte	0x28a
 5844 02c0 0D       		.uleb128 0xd
 5845 02c1 78010000 		.4byte	.LASF56
 5846 02c5 08       		.byte	0x8
 5847 02c6 08       		.byte	0x8
 5848 02c7 5D       		.byte	0x5d
 5849 02c8 E5020000 		.4byte	0x2e5
 5850 02cc 0E       		.uleb128 0xe
 5851 02cd 8E020000 		.4byte	.LASF57
 5852 02d1 08       		.byte	0x8
 5853 02d2 5F       		.byte	0x5f
 5854 02d3 35010000 		.4byte	0x135
 5855 02d7 00       		.byte	0
 5856 02d8 0E       		.uleb128 0xe
 5857 02d9 72090000 		.4byte	.LASF58
 5858 02dd 08       		.byte	0x8
 5859 02de 60       		.byte	0x60
 5860 02df 4B010000 		.4byte	0x14b
 5861 02e3 04       		.byte	0x4
 5862 02e4 00       		.byte	0
 5863 02e5 02       		.uleb128 0x2
 5864 02e6 DD090000 		.4byte	.LASF59
 5865 02ea 08       		.byte	0x8
 5866 02eb 61       		.byte	0x61
 5867 02ec C0020000 		.4byte	0x2c0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 208


 5868 02f0 0D       		.uleb128 0xd
 5869 02f1 670A0000 		.4byte	.LASF60
 5870 02f5 0C       		.byte	0xc
 5871 02f6 08       		.byte	0x8
 5872 02f7 66       		.byte	0x66
 5873 02f8 21030000 		.4byte	0x321
 5874 02fc 0E       		.uleb128 0xe
 5875 02fd 580E0000 		.4byte	.LASF61
 5876 0301 08       		.byte	0x8
 5877 0302 68       		.byte	0x68
 5878 0303 B0000000 		.4byte	0xb0
 5879 0307 00       		.byte	0
 5880 0308 0E       		.uleb128 0xe
 5881 0309 7E020000 		.4byte	.LASF62
 5882 030d 08       		.byte	0x8
 5883 030e 69       		.byte	0x69
 5884 030f EB000000 		.4byte	0xeb
 5885 0313 04       		.byte	0x4
 5886 0314 0E       		.uleb128 0xe
 5887 0315 7B030000 		.4byte	.LASF63
 5888 0319 08       		.byte	0x8
 5889 031a 6A       		.byte	0x6a
 5890 031b EB000000 		.4byte	0xeb
 5891 031f 08       		.byte	0x8
 5892 0320 00       		.byte	0
 5893 0321 02       		.uleb128 0x2
 5894 0322 B9080000 		.4byte	.LASF64
 5895 0326 08       		.byte	0x8
 5896 0327 6B       		.byte	0x6b
 5897 0328 F0020000 		.4byte	0x2f0
 5898 032c 07       		.uleb128 0x7
 5899 032d BF000000 		.4byte	0xbf
 5900 0331 06       		.uleb128 0x6
 5901 0332 04       		.byte	0x4
 5902 0333 2A010000 		.4byte	0x12a
 5903 0337 0D       		.uleb128 0xd
 5904 0338 A60B0000 		.4byte	.LASF65
 5905 033c 24       		.byte	0x24
 5906 033d 08       		.byte	0x8
 5907 033e 80       		.byte	0x80
 5908 033f B0030000 		.4byte	0x3b0
 5909 0343 0E       		.uleb128 0xe
 5910 0344 85070000 		.4byte	.LASF66
 5911 0348 08       		.byte	0x8
 5912 0349 82       		.byte	0x82
 5913 034a 43020000 		.4byte	0x243
 5914 034e 00       		.byte	0
 5915 034f 0E       		.uleb128 0xe
 5916 0350 740E0000 		.4byte	.LASF67
 5917 0354 08       		.byte	0x8
 5918 0355 83       		.byte	0x83
 5919 0356 BF000000 		.4byte	0xbf
 5920 035a 04       		.byte	0x4
 5921 035b 0E       		.uleb128 0xe
 5922 035c B0020000 		.4byte	.LASF68
 5923 0360 08       		.byte	0x8
 5924 0361 84       		.byte	0x84
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 209


 5925 0362 40010000 		.4byte	0x140
 5926 0366 08       		.byte	0x8
 5927 0367 0E       		.uleb128 0xe
 5928 0368 630B0000 		.4byte	.LASF69
 5929 036c 08       		.byte	0x8
 5930 036d 85       		.byte	0x85
 5931 036e 7F020000 		.4byte	0x27f
 5932 0372 0C       		.byte	0xc
 5933 0373 0E       		.uleb128 0xe
 5934 0374 3A020000 		.4byte	.LASF70
 5935 0378 08       		.byte	0x8
 5936 0379 86       		.byte	0x86
 5937 037a 40010000 		.4byte	0x140
 5938 037e 10       		.byte	0x10
 5939 037f 0E       		.uleb128 0xe
 5940 0380 14090000 		.4byte	.LASF71
 5941 0384 08       		.byte	0x8
 5942 0385 87       		.byte	0x87
 5943 0386 40010000 		.4byte	0x140
 5944 038a 14       		.byte	0x14
 5945 038b 0E       		.uleb128 0xe
 5946 038c 470E0000 		.4byte	.LASF72
 5947 0390 08       		.byte	0x8
 5948 0391 88       		.byte	0x88
 5949 0392 EB000000 		.4byte	0xeb
 5950 0396 18       		.byte	0x18
 5951 0397 0E       		.uleb128 0xe
 5952 0398 4D0B0000 		.4byte	.LASF73
 5953 039c 08       		.byte	0x8
 5954 039d 89       		.byte	0x89
 5955 039e 31030000 		.4byte	0x331
 5956 03a2 1C       		.byte	0x1c
 5957 03a3 0E       		.uleb128 0xe
 5958 03a4 2B100000 		.4byte	.LASF74
 5959 03a8 08       		.byte	0x8
 5960 03a9 8A       		.byte	0x8a
 5961 03aa D5000000 		.4byte	0xd5
 5962 03ae 20       		.byte	0x20
 5963 03af 00       		.byte	0
 5964 03b0 02       		.uleb128 0x2
 5965 03b1 14070000 		.4byte	.LASF75
 5966 03b5 08       		.byte	0x8
 5967 03b6 8B       		.byte	0x8b
 5968 03b7 37030000 		.4byte	0x337
 5969 03bb 11       		.uleb128 0x11
 5970 03bc 99000000 		.4byte	.LASF76
 5971 03c0 68       		.byte	0x68
 5972 03c1 01       		.byte	0x1
 5973 03c2 0D01     		.2byte	0x10d
 5974 03c4 58040000 		.4byte	0x458
 5975 03c8 12       		.uleb128 0x12
 5976 03c9 EE100000 		.4byte	.LASF77
 5977 03cd 01       		.byte	0x1
 5978 03ce 0F01     		.2byte	0x10f
 5979 03d0 58040000 		.4byte	0x458
 5980 03d4 00       		.byte	0
 5981 03d5 12       		.uleb128 0x12
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 210


 5982 03d6 B3100000 		.4byte	.LASF78
 5983 03da 01       		.byte	0x1
 5984 03db 1501     		.2byte	0x115
 5985 03dd B5010000 		.4byte	0x1b5
 5986 03e1 04       		.byte	0x4
 5987 03e2 12       		.uleb128 0x12
 5988 03e3 500D0000 		.4byte	.LASF79
 5989 03e7 01       		.byte	0x1
 5990 03e8 1601     		.2byte	0x116
 5991 03ea B5010000 		.4byte	0x1b5
 5992 03ee 18       		.byte	0x18
 5993 03ef 12       		.uleb128 0x12
 5994 03f0 6B000000 		.4byte	.LASF80
 5995 03f4 01       		.byte	0x1
 5996 03f5 1701     		.2byte	0x117
 5997 03f7 40010000 		.4byte	0x140
 5998 03fb 2C       		.byte	0x2c
 5999 03fc 12       		.uleb128 0x12
 6000 03fd A40C0000 		.4byte	.LASF81
 6001 0401 01       		.byte	0x1
 6002 0402 1801     		.2byte	0x118
 6003 0404 31030000 		.4byte	0x331
 6004 0408 30       		.byte	0x30
 6005 0409 12       		.uleb128 0x12
 6006 040a 740E0000 		.4byte	.LASF67
 6007 040e 01       		.byte	0x1
 6008 040f 1901     		.2byte	0x119
 6009 0411 63040000 		.4byte	0x463
 6010 0415 34       		.byte	0x34
 6011 0416 12       		.uleb128 0x12
 6012 0417 BC020000 		.4byte	.LASF82
 6013 041b 01       		.byte	0x1
 6014 041c 2401     		.2byte	0x124
 6015 041e 40010000 		.4byte	0x140
 6016 0422 44       		.byte	0x44
 6017 0423 12       		.uleb128 0x12
 6018 0424 040A0000 		.4byte	.LASF83
 6019 0428 01       		.byte	0x1
 6020 0429 2501     		.2byte	0x125
 6021 042b 40010000 		.4byte	0x140
 6022 042f 48       		.byte	0x48
 6023 0430 12       		.uleb128 0x12
 6024 0431 DE050000 		.4byte	.LASF84
 6025 0435 01       		.byte	0x1
 6026 0436 3201     		.2byte	0x132
 6027 0438 56010000 		.4byte	0x156
 6028 043c 4C       		.byte	0x4c
 6029 043d 12       		.uleb128 0x12
 6030 043e 21070000 		.4byte	.LASF85
 6031 0442 01       		.byte	0x1
 6032 0443 4501     		.2byte	0x145
 6033 0445 F6000000 		.4byte	0xf6
 6034 0449 60       		.byte	0x60
 6035 044a 12       		.uleb128 0x12
 6036 044b 0D040000 		.4byte	.LASF86
 6037 044f 01       		.byte	0x1
 6038 0450 4601     		.2byte	0x146
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 211


 6039 0452 FB000000 		.4byte	0xfb
 6040 0456 64       		.byte	0x64
 6041 0457 00       		.byte	0
 6042 0458 06       		.uleb128 0x6
 6043 0459 04       		.byte	0x4
 6044 045a 5E040000 		.4byte	0x45e
 6045 045e 08       		.uleb128 0x8
 6046 045f 2A010000 		.4byte	0x12a
 6047 0463 0B       		.uleb128 0xb
 6048 0464 B8000000 		.4byte	0xb8
 6049 0468 73040000 		.4byte	0x473
 6050 046c 0C       		.uleb128 0xc
 6051 046d A9000000 		.4byte	0xa9
 6052 0471 0F       		.byte	0xf
 6053 0472 00       		.byte	0
 6054 0473 13       		.uleb128 0x13
 6055 0474 DC030000 		.4byte	.LASF87
 6056 0478 01       		.byte	0x1
 6057 0479 5301     		.2byte	0x153
 6058 047b BB030000 		.4byte	0x3bb
 6059 047f 13       		.uleb128 0x13
 6060 0480 340F0000 		.4byte	.LASF88
 6061 0484 01       		.byte	0x1
 6062 0485 5701     		.2byte	0x157
 6063 0487 73040000 		.4byte	0x473
 6064 048b 14       		.uleb128 0x14
 6065 048c D9040000 		.4byte	.LASF91
 6066 0490 02       		.byte	0x2
 6067 0491 98       		.byte	0x98
 6068 0492 03       		.byte	0x3
 6069 0493 A3040000 		.4byte	0x4a3
 6070 0497 15       		.uleb128 0x15
 6071 0498 BF070000 		.4byte	.LASF89
 6072 049c 02       		.byte	0x2
 6073 049d 9A       		.byte	0x9a
 6074 049e EB000000 		.4byte	0xeb
 6075 04a2 00       		.byte	0
 6076 04a3 16       		.uleb128 0x16
 6077 04a4 DD080000 		.4byte	.LASF273
 6078 04a8 02       		.byte	0x2
 6079 04a9 A8       		.byte	0xa8
 6080 04aa EB000000 		.4byte	0xeb
 6081 04ae 03       		.byte	0x3
 6082 04af CA040000 		.4byte	0x4ca
 6083 04b3 15       		.uleb128 0x15
 6084 04b4 37040000 		.4byte	.LASF90
 6085 04b8 02       		.byte	0x2
 6086 04b9 AA       		.byte	0xaa
 6087 04ba EB000000 		.4byte	0xeb
 6088 04be 15       		.uleb128 0x15
 6089 04bf BF070000 		.4byte	.LASF89
 6090 04c3 02       		.byte	0x2
 6091 04c4 AA       		.byte	0xaa
 6092 04c5 EB000000 		.4byte	0xeb
 6093 04c9 00       		.byte	0
 6094 04ca 14       		.uleb128 0x14
 6095 04cb A7060000 		.4byte	.LASF92
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 212


 6096 04cf 02       		.byte	0x2
 6097 04d0 BC       		.byte	0xbc
 6098 04d1 03       		.byte	0x3
 6099 04d2 E2040000 		.4byte	0x4e2
 6100 04d6 17       		.uleb128 0x17
 6101 04d7 260A0000 		.4byte	.LASF274
 6102 04db 02       		.byte	0x2
 6103 04dc BC       		.byte	0xbc
 6104 04dd EB000000 		.4byte	0xeb
 6105 04e1 00       		.byte	0
 6106 04e2 18       		.uleb128 0x18
 6107 04e3 7A0C0000 		.4byte	.LASF95
 6108 04e7 01       		.byte	0x1
 6109 04e8 C306     		.2byte	0x6c3
 6110 04ea 35010000 		.4byte	0x135
 6111 04ee 00000000 		.4byte	.LFB148
 6112 04f2 4C000000 		.4byte	.LFE148-.LFB148
 6113 04f6 01       		.uleb128 0x1
 6114 04f7 9C       		.byte	0x9c
 6115 04f8 4D050000 		.4byte	0x54d
 6116 04fc 19       		.uleb128 0x19
 6117 04fd AE0A0000 		.4byte	.LASF97
 6118 0501 01       		.byte	0x1
 6119 0502 C306     		.2byte	0x6c3
 6120 0504 4D050000 		.4byte	0x54d
 6121 0508 00000000 		.4byte	.LLST0
 6122 050c 1A       		.uleb128 0x1a
 6123 050d 870D0000 		.4byte	.LASF93
 6124 0511 01       		.byte	0x1
 6125 0512 C506     		.2byte	0x6c5
 6126 0514 35010000 		.4byte	0x135
 6127 0518 69000000 		.4byte	.LLST1
 6128 051c 1A       		.uleb128 0x1a
 6129 051d C2100000 		.4byte	.LASF94
 6130 0521 01       		.byte	0x1
 6131 0522 C606     		.2byte	0x6c6
 6132 0524 5D050000 		.4byte	0x55d
 6133 0528 88000000 		.4byte	.LLST2
 6134 052c 1B       		.uleb128 0x1b
 6135 052d 8B040000 		.4byte	0x48b
 6136 0531 04000000 		.4byte	.LBB96
 6137 0535 12000000 		.4byte	.LBE96-.LBB96
 6138 0539 01       		.byte	0x1
 6139 053a CC06     		.2byte	0x6cc
 6140 053c 1C       		.uleb128 0x1c
 6141 053d 04000000 		.4byte	.LBB97
 6142 0541 12000000 		.4byte	.LBE97-.LBB97
 6143 0545 1D       		.uleb128 0x1d
 6144 0546 97040000 		.4byte	0x497
 6145 054a 00       		.byte	0
 6146 054b 00       		.byte	0
 6147 054c 00       		.byte	0
 6148 054d 07       		.uleb128 0x7
 6149 054e 43020000 		.4byte	0x243
 6150 0552 06       		.uleb128 0x6
 6151 0553 04       		.byte	0x4
 6152 0554 58050000 		.4byte	0x558
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 213


 6153 0558 07       		.uleb128 0x7
 6154 0559 7F040000 		.4byte	0x47f
 6155 055d 07       		.uleb128 0x7
 6156 055e 52050000 		.4byte	0x552
 6157 0562 18       		.uleb128 0x18
 6158 0563 E60F0000 		.4byte	.LASF96
 6159 0567 01       		.byte	0x1
 6160 0568 370E     		.2byte	0xe37
 6161 056a D5000000 		.4byte	0xd5
 6162 056e 00000000 		.4byte	.LFB180
 6163 0572 14000000 		.4byte	.LFE180-.LFB180
 6164 0576 01       		.uleb128 0x1
 6165 0577 9C       		.byte	0x9c
 6166 0578 9D050000 		.4byte	0x59d
 6167 057c 19       		.uleb128 0x19
 6168 057d D0090000 		.4byte	.LASF98
 6169 0581 01       		.byte	0x1
 6170 0582 370E     		.2byte	0xe37
 6171 0584 9D050000 		.4byte	0x59d
 6172 0588 F1000000 		.4byte	.LLST3
 6173 058c 1A       		.uleb128 0x1a
 6174 058d C8090000 		.4byte	.LASF99
 6175 0591 01       		.byte	0x1
 6176 0592 390E     		.2byte	0xe39
 6177 0594 EB000000 		.4byte	0xeb
 6178 0598 0F010000 		.4byte	.LLST4
 6179 059c 00       		.byte	0
 6180 059d 06       		.uleb128 0x6
 6181 059e 04       		.byte	0x4
 6182 059f A3050000 		.4byte	0x5a3
 6183 05a3 07       		.uleb128 0x7
 6184 05a4 CA000000 		.4byte	0xca
 6185 05a8 1E       		.uleb128 0x1e
 6186 05a9 6C080000 		.4byte	.LASF100
 6187 05ad 01       		.byte	0x1
 6188 05ae 9D0E     		.2byte	0xe9d
 6189 05b0 00000000 		.4byte	.LFB182
 6190 05b4 2C000000 		.4byte	.LFE182-.LFB182
 6191 05b8 01       		.uleb128 0x1
 6192 05b9 9C       		.byte	0x9c
 6193 05ba CF050000 		.4byte	0x5cf
 6194 05be 1A       		.uleb128 0x1a
 6195 05bf C2100000 		.4byte	.LASF94
 6196 05c3 01       		.byte	0x1
 6197 05c4 9F0E     		.2byte	0xe9f
 6198 05c6 CF050000 		.4byte	0x5cf
 6199 05ca 3D010000 		.4byte	.LLST5
 6200 05ce 00       		.byte	0
 6201 05cf 06       		.uleb128 0x6
 6202 05d0 04       		.byte	0x4
 6203 05d1 7F040000 		.4byte	0x47f
 6204 05d5 1E       		.uleb128 0x1e
 6205 05d6 4F0F0000 		.4byte	.LASF101
 6206 05da 01       		.byte	0x1
 6207 05db 670E     		.2byte	0xe67
 6208 05dd 00000000 		.4byte	.LFB181
 6209 05e1 12000000 		.4byte	.LFE181-.LFB181
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 214


 6210 05e5 01       		.uleb128 0x1
 6211 05e6 9C       		.byte	0x9c
 6212 05e7 15060000 		.4byte	0x615
 6213 05eb 19       		.uleb128 0x19
 6214 05ec C2100000 		.4byte	.LASF94
 6215 05f0 01       		.byte	0x1
 6216 05f1 670E     		.2byte	0xe67
 6217 05f3 CF050000 		.4byte	0x5cf
 6218 05f7 50010000 		.4byte	.LLST6
 6219 05fb 1F       		.uleb128 0x1f
 6220 05fc 0A000000 		.4byte	.LVL19
 6221 0600 6D280000 		.4byte	0x286d
 6222 0604 20       		.uleb128 0x20
 6223 0605 10000000 		.4byte	.LVL20
 6224 0609 6D280000 		.4byte	0x286d
 6225 060d 21       		.uleb128 0x21
 6226 060e 01       		.uleb128 0x1
 6227 060f 50       		.byte	0x50
 6228 0610 02       		.uleb128 0x2
 6229 0611 74       		.byte	0x74
 6230 0612 00       		.sleb128 0
 6231 0613 00       		.byte	0
 6232 0614 00       		.byte	0
 6233 0615 1E       		.uleb128 0x1e
 6234 0616 DB000000 		.4byte	.LASF102
 6235 061a 01       		.byte	0x1
 6236 061b 3703     		.2byte	0x337
 6237 061d 00000000 		.4byte	.LFB138
 6238 0621 9E000000 		.4byte	.LFE138-.LFB138
 6239 0625 01       		.uleb128 0x1
 6240 0626 9C       		.byte	0x9c
 6241 0627 25070000 		.4byte	0x725
 6242 062b 19       		.uleb128 0x19
 6243 062c AE080000 		.4byte	.LASF103
 6244 0630 01       		.byte	0x1
 6245 0631 3703     		.2byte	0x337
 6246 0633 0E010000 		.4byte	0x10e
 6247 0637 6E010000 		.4byte	.LLST7
 6248 063b 19       		.uleb128 0x19
 6249 063c 90090000 		.4byte	.LASF104
 6250 0640 01       		.byte	0x1
 6251 0641 3803     		.2byte	0x338
 6252 0643 2C030000 		.4byte	0x32c
 6253 0647 8C010000 		.4byte	.LLST8
 6254 064b 19       		.uleb128 0x19
 6255 064c D8070000 		.4byte	.LASF105
 6256 0650 01       		.byte	0x1
 6257 0651 3903     		.2byte	0x339
 6258 0653 25070000 		.4byte	0x725
 6259 0657 AA010000 		.4byte	.LLST9
 6260 065b 19       		.uleb128 0x19
 6261 065c 850B0000 		.4byte	.LASF106
 6262 0660 01       		.byte	0x1
 6263 0661 3A03     		.2byte	0x33a
 6264 0663 2A070000 		.4byte	0x72a
 6265 0667 E7010000 		.4byte	.LLST10
 6266 066b 19       		.uleb128 0x19
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 215


 6267 066c 6B000000 		.4byte	.LASF80
 6268 0670 01       		.byte	0x1
 6269 0671 3B03     		.2byte	0x33b
 6270 0673 40010000 		.4byte	0x140
 6271 0677 05020000 		.4byte	.LLST11
 6272 067b 22       		.uleb128 0x22
 6273 067c 52110000 		.4byte	.LASF107
 6274 0680 01       		.byte	0x1
 6275 0681 3C03     		.2byte	0x33c
 6276 0683 35070000 		.4byte	0x735
 6277 0687 02       		.uleb128 0x2
 6278 0688 91       		.byte	0x91
 6279 0689 04       		.sleb128 4
 6280 068a 22       		.uleb128 0x22
 6281 068b 9D080000 		.4byte	.LASF108
 6282 068f 01       		.byte	0x1
 6283 0690 3D03     		.2byte	0x33d
 6284 0692 CF050000 		.4byte	0x5cf
 6285 0696 02       		.uleb128 0x2
 6286 0697 91       		.byte	0x91
 6287 0698 08       		.sleb128 8
 6288 0699 22       		.uleb128 0x22
 6289 069a 15100000 		.4byte	.LASF109
 6290 069e 01       		.byte	0x1
 6291 069f 3E03     		.2byte	0x33e
 6292 06a1 45070000 		.4byte	0x745
 6293 06a5 02       		.uleb128 0x2
 6294 06a6 91       		.byte	0x91
 6295 06a7 0C       		.sleb128 12
 6296 06a8 23       		.uleb128 0x23
 6297 06a9 EE100000 		.4byte	.LASF77
 6298 06ad 01       		.byte	0x1
 6299 06ae 4003     		.2byte	0x340
 6300 06b0 31030000 		.4byte	0x331
 6301 06b4 01       		.uleb128 0x1
 6302 06b5 55       		.byte	0x55
 6303 06b6 24       		.uleb128 0x24
 6304 06b7 7800     		.ascii	"x\000"
 6305 06b9 01       		.byte	0x1
 6306 06ba 4103     		.2byte	0x341
 6307 06bc 40010000 		.4byte	0x140
 6308 06c0 24020000 		.4byte	.LLST12
 6309 06c4 25       		.uleb128 0x25
 6310 06c5 1C000000 		.4byte	.LVL25
 6311 06c9 78280000 		.4byte	0x2878
 6312 06cd E0060000 		.4byte	0x6e0
 6313 06d1 21       		.uleb128 0x21
 6314 06d2 01       		.uleb128 0x1
 6315 06d3 51       		.byte	0x51
 6316 06d4 02       		.uleb128 0x2
 6317 06d5 08       		.byte	0x8
 6318 06d6 A5       		.byte	0xa5
 6319 06d7 21       		.uleb128 0x21
 6320 06d8 01       		.uleb128 0x1
 6321 06d9 52       		.byte	0x52
 6322 06da 04       		.uleb128 0x4
 6323 06db 75       		.byte	0x75
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 216


 6324 06dc 00       		.sleb128 0
 6325 06dd 32       		.byte	0x32
 6326 06de 24       		.byte	0x24
 6327 06df 00       		.byte	0
 6328 06e0 25       		.uleb128 0x25
 6329 06e1 5A000000 		.4byte	.LVL32
 6330 06e5 83280000 		.4byte	0x2883
 6331 06e9 F4060000 		.4byte	0x6f4
 6332 06ed 21       		.uleb128 0x21
 6333 06ee 01       		.uleb128 0x1
 6334 06ef 50       		.byte	0x50
 6335 06f0 02       		.uleb128 0x2
 6336 06f1 74       		.byte	0x74
 6337 06f2 04       		.sleb128 4
 6338 06f3 00       		.byte	0
 6339 06f4 25       		.uleb128 0x25
 6340 06f5 62000000 		.4byte	.LVL33
 6341 06f9 83280000 		.4byte	0x2883
 6342 06fd 08070000 		.4byte	0x708
 6343 0701 21       		.uleb128 0x21
 6344 0702 01       		.uleb128 0x1
 6345 0703 50       		.byte	0x50
 6346 0704 02       		.uleb128 0x2
 6347 0705 74       		.byte	0x74
 6348 0706 18       		.sleb128 24
 6349 0707 00       		.byte	0
 6350 0708 20       		.uleb128 0x20
 6351 0709 94000000 		.4byte	.LVL38
 6352 070d 8F280000 		.4byte	0x288f
 6353 0711 21       		.uleb128 0x21
 6354 0712 01       		.uleb128 0x1
 6355 0713 50       		.byte	0x50
 6356 0714 02       		.uleb128 0x2
 6357 0715 75       		.byte	0x75
 6358 0716 00       		.sleb128 0
 6359 0717 21       		.uleb128 0x21
 6360 0718 01       		.uleb128 0x1
 6361 0719 51       		.byte	0x51
 6362 071a 02       		.uleb128 0x2
 6363 071b 7A       		.byte	0x7a
 6364 071c 00       		.sleb128 0
 6365 071d 21       		.uleb128 0x21
 6366 071e 01       		.uleb128 0x1
 6367 071f 52       		.byte	0x52
 6368 0720 02       		.uleb128 0x2
 6369 0721 78       		.byte	0x78
 6370 0722 00       		.sleb128 0
 6371 0723 00       		.byte	0
 6372 0724 00       		.byte	0
 6373 0725 07       		.uleb128 0x7
 6374 0726 EB000000 		.4byte	0xeb
 6375 072a 07       		.uleb128 0x7
 6376 072b B0000000 		.4byte	0xb0
 6377 072f 06       		.uleb128 0x6
 6378 0730 04       		.byte	0x4
 6379 0731 43020000 		.4byte	0x243
 6380 0735 07       		.uleb128 0x7
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 217


 6381 0736 2F070000 		.4byte	0x72f
 6382 073a 06       		.uleb128 0x6
 6383 073b 04       		.byte	0x4
 6384 073c 40070000 		.4byte	0x740
 6385 0740 07       		.uleb128 0x7
 6386 0741 21030000 		.4byte	0x321
 6387 0745 07       		.uleb128 0x7
 6388 0746 3A070000 		.4byte	0x73a
 6389 074a 1E       		.uleb128 0x1e
 6390 074b 07110000 		.4byte	.LASF110
 6391 074f 01       		.byte	0x1
 6392 0750 770D     		.2byte	0xd77
 6393 0752 00000000 		.4byte	.LFB176
 6394 0756 58000000 		.4byte	.LFE176-.LFB176
 6395 075a 01       		.uleb128 0x1
 6396 075b 9C       		.byte	0x9c
 6397 075c F3070000 		.4byte	0x7f3
 6398 0760 1A       		.uleb128 0x1a
 6399 0761 6B000000 		.4byte	.LASF80
 6400 0765 01       		.byte	0x1
 6401 0766 790D     		.2byte	0xd79
 6402 0768 40010000 		.4byte	0x140
 6403 076c 4E020000 		.4byte	.LLST13
 6404 0770 25       		.uleb128 0x25
 6405 0771 14000000 		.4byte	.LVL41
 6406 0775 9A280000 		.4byte	0x289a
 6407 0779 91070000 		.4byte	0x791
 6408 077d 21       		.uleb128 0x21
 6409 077e 01       		.uleb128 0x1
 6410 077f 50       		.byte	0x50
 6411 0780 0F       		.uleb128 0xf
 6412 0781 74       		.byte	0x74
 6413 0782 00       		.sleb128 0
 6414 0783 32       		.byte	0x32
 6415 0784 24       		.byte	0x24
 6416 0785 74       		.byte	0x74
 6417 0786 00       		.sleb128 0
 6418 0787 22       		.byte	0x22
 6419 0788 32       		.byte	0x32
 6420 0789 24       		.byte	0x24
 6421 078a 03       		.byte	0x3
 6422 078b 30000000 		.4byte	.LANCHOR0+48
 6423 078f 22       		.byte	0x22
 6424 0790 00       		.byte	0
 6425 0791 25       		.uleb128 0x25
 6426 0792 26000000 		.4byte	.LVL44
 6427 0796 9A280000 		.4byte	0x289a
 6428 079a A5070000 		.4byte	0x7a5
 6429 079e 21       		.uleb128 0x21
 6430 079f 01       		.uleb128 0x1
 6431 07a0 50       		.byte	0x50
 6432 07a1 02       		.uleb128 0x2
 6433 07a2 76       		.byte	0x76
 6434 07a3 00       		.sleb128 0
 6435 07a4 00       		.byte	0
 6436 07a5 25       		.uleb128 0x25
 6437 07a6 30000000 		.4byte	.LVL45
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 218


 6438 07aa 9A280000 		.4byte	0x289a
 6439 07ae B9070000 		.4byte	0x7b9
 6440 07b2 21       		.uleb128 0x21
 6441 07b3 01       		.uleb128 0x1
 6442 07b4 50       		.byte	0x50
 6443 07b5 02       		.uleb128 0x2
 6444 07b6 75       		.byte	0x75
 6445 07b7 00       		.sleb128 0
 6446 07b8 00       		.byte	0
 6447 07b9 25       		.uleb128 0x25
 6448 07ba 38000000 		.4byte	.LVL46
 6449 07be 9A280000 		.4byte	0x289a
 6450 07c2 CD070000 		.4byte	0x7cd
 6451 07c6 21       		.uleb128 0x21
 6452 07c7 01       		.uleb128 0x1
 6453 07c8 50       		.byte	0x50
 6454 07c9 02       		.uleb128 0x2
 6455 07ca 74       		.byte	0x74
 6456 07cb 14       		.sleb128 20
 6457 07cc 00       		.byte	0
 6458 07cd 25       		.uleb128 0x25
 6459 07ce 40000000 		.4byte	.LVL47
 6460 07d2 9A280000 		.4byte	0x289a
 6461 07d6 E2070000 		.4byte	0x7e2
 6462 07da 21       		.uleb128 0x21
 6463 07db 01       		.uleb128 0x1
 6464 07dc 50       		.byte	0x50
 6465 07dd 03       		.uleb128 0x3
 6466 07de 74       		.byte	0x74
 6467 07df E401     		.sleb128 228
 6468 07e1 00       		.byte	0
 6469 07e2 20       		.uleb128 0x20
 6470 07e3 46000000 		.4byte	.LVL48
 6471 07e7 9A280000 		.4byte	0x289a
 6472 07eb 21       		.uleb128 0x21
 6473 07ec 01       		.uleb128 0x1
 6474 07ed 50       		.byte	0x50
 6475 07ee 02       		.uleb128 0x2
 6476 07ef 74       		.byte	0x74
 6477 07f0 00       		.sleb128 0
 6478 07f1 00       		.byte	0
 6479 07f2 00       		.byte	0
 6480 07f3 1E       		.uleb128 0x1e
 6481 07f4 53080000 		.4byte	.LASF111
 6482 07f8 01       		.byte	0x1
 6483 07f9 0304     		.2byte	0x403
 6484 07fb 00000000 		.4byte	.LFB139
 6485 07ff AC000000 		.4byte	.LFE139-.LFB139
 6486 0803 01       		.uleb128 0x1
 6487 0804 9C       		.byte	0x9c
 6488 0805 49080000 		.4byte	0x849
 6489 0809 19       		.uleb128 0x19
 6490 080a 9D080000 		.4byte	.LASF108
 6491 080e 01       		.byte	0x1
 6492 080f 0304     		.2byte	0x403
 6493 0811 CF050000 		.4byte	0x5cf
 6494 0815 6D020000 		.4byte	.LLST14
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 219


 6495 0819 1F       		.uleb128 0x1f
 6496 081a 08000000 		.4byte	.LVL50
 6497 081e A6280000 		.4byte	0x28a6
 6498 0822 1F       		.uleb128 0x1f
 6499 0823 2C000000 		.4byte	.LVL51
 6500 0827 4A070000 		.4byte	0x74a
 6501 082b 25       		.uleb128 0x25
 6502 082c 7C000000 		.4byte	.LVL52
 6503 0830 B1280000 		.4byte	0x28b1
 6504 0834 3F080000 		.4byte	0x83f
 6505 0838 21       		.uleb128 0x21
 6506 0839 01       		.uleb128 0x1
 6507 083a 51       		.byte	0x51
 6508 083b 02       		.uleb128 0x2
 6509 083c 74       		.byte	0x74
 6510 083d 04       		.sleb128 4
 6511 083e 00       		.byte	0
 6512 083f 1F       		.uleb128 0x1f
 6513 0840 80000000 		.4byte	.LVL53
 6514 0844 BD280000 		.4byte	0x28bd
 6515 0848 00       		.byte	0
 6516 0849 1E       		.uleb128 0x1e
 6517 084a 60110000 		.4byte	.LASF112
 6518 084e 01       		.byte	0x1
 6519 084f 970D     		.2byte	0xd97
 6520 0851 00000000 		.4byte	.LFB177
 6521 0855 44000000 		.4byte	.LFE177-.LFB177
 6522 0859 01       		.uleb128 0x1
 6523 085a 9C       		.byte	0x9c
 6524 085b B0080000 		.4byte	0x8b0
 6525 085f 1C       		.uleb128 0x1c
 6526 0860 02000000 		.4byte	.LBB98
 6527 0864 3C000000 		.4byte	.LBE98-.LBB98
 6528 0868 1A       		.uleb128 0x1a
 6529 0869 C2100000 		.4byte	.LASF94
 6530 086d 01       		.byte	0x1
 6531 086e 9E0D     		.2byte	0xd9e
 6532 0870 CF050000 		.4byte	0x5cf
 6533 0874 99020000 		.4byte	.LLST15
 6534 0878 1F       		.uleb128 0x1f
 6535 0879 08000000 		.4byte	.LVL55
 6536 087d A6280000 		.4byte	0x28a6
 6537 0881 25       		.uleb128 0x25
 6538 0882 16000000 		.4byte	.LVL57
 6539 0886 C8280000 		.4byte	0x28c8
 6540 088a 95080000 		.4byte	0x895
 6541 088e 21       		.uleb128 0x21
 6542 088f 01       		.uleb128 0x1
 6543 0890 50       		.byte	0x50
 6544 0891 02       		.uleb128 0x2
 6545 0892 75       		.byte	0x75
 6546 0893 04       		.sleb128 4
 6547 0894 00       		.byte	0
 6548 0895 1F       		.uleb128 0x1f
 6549 0896 2E000000 		.4byte	.LVL58
 6550 089a BD280000 		.4byte	0x28bd
 6551 089e 20       		.uleb128 0x20
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 220


 6552 089f 34000000 		.4byte	.LVL59
 6553 08a3 D5050000 		.4byte	0x5d5
 6554 08a7 21       		.uleb128 0x21
 6555 08a8 01       		.uleb128 0x1
 6556 08a9 50       		.byte	0x50
 6557 08aa 02       		.uleb128 0x2
 6558 08ab 75       		.byte	0x75
 6559 08ac 00       		.sleb128 0
 6560 08ad 00       		.byte	0
 6561 08ae 00       		.byte	0
 6562 08af 00       		.byte	0
 6563 08b0 26       		.uleb128 0x26
 6564 08b1 6D060000 		.4byte	.LASF113
 6565 08b5 01       		.byte	0x1
 6566 08b6 A30C     		.2byte	0xca3
 6567 08b8 00000000 		.4byte	.LFB173
 6568 08bc 28000000 		.4byte	.LFE173-.LFB173
 6569 08c0 01       		.uleb128 0x1
 6570 08c1 9C       		.byte	0x9c
 6571 08c2 E0080000 		.4byte	0x8e0
 6572 08c6 19       		.uleb128 0x19
 6573 08c7 850B0000 		.4byte	.LASF106
 6574 08cb 01       		.byte	0x1
 6575 08cc A30C     		.2byte	0xca3
 6576 08ce B0000000 		.4byte	0xb0
 6577 08d2 AC020000 		.4byte	.LLST16
 6578 08d6 1F       		.uleb128 0x1f
 6579 08d7 06000000 		.4byte	.LVL62
 6580 08db 49080000 		.4byte	0x849
 6581 08df 00       		.byte	0
 6582 08e0 1E       		.uleb128 0x1e
 6583 08e1 FF0E0000 		.4byte	.LASF114
 6584 08e5 01       		.byte	0x1
 6585 08e6 3B13     		.2byte	0x133b
 6586 08e8 00000000 		.4byte	.LFB194
 6587 08ec 68000000 		.4byte	.LFE194-.LFB194
 6588 08f0 01       		.uleb128 0x1
 6589 08f1 9C       		.byte	0x9c
 6590 08f2 69090000 		.4byte	0x969
 6591 08f6 19       		.uleb128 0x19
 6592 08f7 3A0F0000 		.4byte	.LASF115
 6593 08fb 01       		.byte	0x1
 6594 08fc 3B13     		.2byte	0x133b
 6595 08fe 4B010000 		.4byte	0x14b
 6596 0902 CD020000 		.4byte	.LLST17
 6597 0906 19       		.uleb128 0x19
 6598 0907 1F0E0000 		.4byte	.LASF116
 6599 090b 01       		.byte	0x1
 6600 090c 3B13     		.2byte	0x133b
 6601 090e 69090000 		.4byte	0x969
 6602 0912 F9020000 		.4byte	.LLST18
 6603 0916 1A       		.uleb128 0x1a
 6604 0917 A7100000 		.4byte	.LASF117
 6605 091b 01       		.byte	0x1
 6606 091c 3D13     		.2byte	0x133d
 6607 091e 4B010000 		.4byte	0x14b
 6608 0922 25030000 		.4byte	.LLST19
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 221


 6609 0926 1A       		.uleb128 0x1a
 6610 0927 61050000 		.4byte	.LASF118
 6611 092b 01       		.byte	0x1
 6612 092c 3E13     		.2byte	0x133e
 6613 092e 6E090000 		.4byte	0x96e
 6614 0932 38030000 		.4byte	.LLST20
 6615 0936 1F       		.uleb128 0x1f
 6616 0937 16000000 		.4byte	.LVL66
 6617 093b C8280000 		.4byte	0x28c8
 6618 093f 25       		.uleb128 0x25
 6619 0940 2A000000 		.4byte	.LVL67
 6620 0944 B1280000 		.4byte	0x28b1
 6621 0948 56090000 		.4byte	0x956
 6622 094c 21       		.uleb128 0x21
 6623 094d 01       		.uleb128 0x1
 6624 094e 50       		.byte	0x50
 6625 094f 05       		.uleb128 0x5
 6626 0950 03       		.byte	0x3
 6627 0951 00000000 		.4byte	.LANCHOR0
 6628 0955 00       		.byte	0
 6629 0956 1F       		.uleb128 0x1f
 6630 0957 4A000000 		.4byte	.LVL70
 6631 095b D4280000 		.4byte	0x28d4
 6632 095f 1F       		.uleb128 0x1f
 6633 0960 5A000000 		.4byte	.LVL73
 6634 0964 D4280000 		.4byte	0x28d4
 6635 0968 00       		.byte	0
 6636 0969 07       		.uleb128 0x7
 6637 096a 35010000 		.4byte	0x135
 6638 096e 07       		.uleb128 0x7
 6639 096f 4B010000 		.4byte	0x14b
 6640 0973 18       		.uleb128 0x18
 6641 0974 3D110000 		.4byte	.LASF119
 6642 0978 01       		.byte	0x1
 6643 0979 3010     		.2byte	0x1030
 6644 097b B2000000 		.4byte	0xb2
 6645 097f 00000000 		.4byte	.LFB185
 6646 0983 22000000 		.4byte	.LFE185-.LFB185
 6647 0987 01       		.uleb128 0x1
 6648 0988 9C       		.byte	0x9c
 6649 0989 E7090000 		.4byte	0x9e7
 6650 098d 19       		.uleb128 0x19
 6651 098e 41090000 		.4byte	.LASF120
 6652 0992 01       		.byte	0x1
 6653 0993 3010     		.2byte	0x1030
 6654 0995 B2000000 		.4byte	0xb2
 6655 0999 4B030000 		.4byte	.LLST21
 6656 099d 19       		.uleb128 0x19
 6657 099e 740E0000 		.4byte	.LASF67
 6658 09a2 01       		.byte	0x1
 6659 09a3 3010     		.2byte	0x1030
 6660 09a5 BF000000 		.4byte	0xbf
 6661 09a9 69030000 		.4byte	.LLST22
 6662 09ad 24       		.uleb128 0x24
 6663 09ae 7800     		.ascii	"x\000"
 6664 09b0 01       		.byte	0x1
 6665 09b1 3210     		.2byte	0x1032
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 222


 6666 09b3 25000000 		.4byte	0x25
 6667 09b7 8A030000 		.4byte	.LLST23
 6668 09bb 25       		.uleb128 0x25
 6669 09bc 08000000 		.4byte	.LVL76
 6670 09c0 E0280000 		.4byte	0x28e0
 6671 09c4 D6090000 		.4byte	0x9d6
 6672 09c8 21       		.uleb128 0x21
 6673 09c9 01       		.uleb128 0x1
 6674 09ca 50       		.byte	0x50
 6675 09cb 02       		.uleb128 0x2
 6676 09cc 74       		.byte	0x74
 6677 09cd 00       		.sleb128 0
 6678 09ce 21       		.uleb128 0x21
 6679 09cf 01       		.uleb128 0x1
 6680 09d0 51       		.byte	0x51
 6681 09d1 03       		.uleb128 0x3
 6682 09d2 F3       		.byte	0xf3
 6683 09d3 01       		.uleb128 0x1
 6684 09d4 51       		.byte	0x51
 6685 09d5 00       		.byte	0
 6686 09d6 20       		.uleb128 0x20
 6687 09d7 0E000000 		.4byte	.LVL77
 6688 09db EB280000 		.4byte	0x28eb
 6689 09df 21       		.uleb128 0x21
 6690 09e0 01       		.uleb128 0x1
 6691 09e1 50       		.byte	0x50
 6692 09e2 02       		.uleb128 0x2
 6693 09e3 74       		.byte	0x74
 6694 09e4 00       		.sleb128 0
 6695 09e5 00       		.byte	0
 6696 09e6 00       		.byte	0
 6697 09e7 27       		.uleb128 0x27
 6698 09e8 47080000 		.4byte	.LASF123
 6699 09ec 01       		.byte	0x1
 6700 09ed DC02     		.2byte	0x2dc
 6701 09ef 35010000 		.4byte	0x135
 6702 09f3 00000000 		.4byte	.LFB137
 6703 09f7 62000000 		.4byte	.LFE137-.LFB137
 6704 09fb 01       		.uleb128 0x1
 6705 09fc 9C       		.byte	0x9c
 6706 09fd 2B0B0000 		.4byte	0xb2b
 6707 0a01 19       		.uleb128 0x19
 6708 0a02 AE080000 		.4byte	.LASF103
 6709 0a06 01       		.byte	0x1
 6710 0a07 DC02     		.2byte	0x2dc
 6711 0a09 0E010000 		.4byte	0x10e
 6712 0a0d 9D030000 		.4byte	.LLST24
 6713 0a11 19       		.uleb128 0x19
 6714 0a12 90090000 		.4byte	.LASF104
 6715 0a16 01       		.byte	0x1
 6716 0a17 DD02     		.2byte	0x2dd
 6717 0a19 2C030000 		.4byte	0x32c
 6718 0a1d BB030000 		.4byte	.LLST25
 6719 0a21 19       		.uleb128 0x19
 6720 0a22 83040000 		.4byte	.LASF121
 6721 0a26 01       		.byte	0x1
 6722 0a27 DE02     		.2byte	0x2de
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 223


 6723 0a29 2B0B0000 		.4byte	0xb2b
 6724 0a2d D9030000 		.4byte	.LLST26
 6725 0a31 19       		.uleb128 0x19
 6726 0a32 850B0000 		.4byte	.LASF106
 6727 0a36 01       		.byte	0x1
 6728 0a37 DF02     		.2byte	0x2df
 6729 0a39 2A070000 		.4byte	0x72a
 6730 0a3d FA030000 		.4byte	.LLST27
 6731 0a41 22       		.uleb128 0x22
 6732 0a42 6B000000 		.4byte	.LASF80
 6733 0a46 01       		.byte	0x1
 6734 0a47 E002     		.2byte	0x2e0
 6735 0a49 40010000 		.4byte	0x140
 6736 0a4d 02       		.uleb128 0x2
 6737 0a4e 91       		.byte	0x91
 6738 0a4f 00       		.sleb128 0
 6739 0a50 22       		.uleb128 0x22
 6740 0a51 52110000 		.4byte	.LASF107
 6741 0a55 01       		.byte	0x1
 6742 0a56 E102     		.2byte	0x2e1
 6743 0a58 35070000 		.4byte	0x735
 6744 0a5c 02       		.uleb128 0x2
 6745 0a5d 91       		.byte	0x91
 6746 0a5e 04       		.sleb128 4
 6747 0a5f 1A       		.uleb128 0x1a
 6748 0a60 9D080000 		.4byte	.LASF108
 6749 0a64 01       		.byte	0x1
 6750 0a65 E302     		.2byte	0x2e3
 6751 0a67 CF050000 		.4byte	0x5cf
 6752 0a6b 18040000 		.4byte	.LLST28
 6753 0a6f 1A       		.uleb128 0x1a
 6754 0a70 870D0000 		.4byte	.LASF93
 6755 0a74 01       		.byte	0x1
 6756 0a75 E402     		.2byte	0x2e4
 6757 0a77 35010000 		.4byte	0x135
 6758 0a7b 41040000 		.4byte	.LLST29
 6759 0a7f 28       		.uleb128 0x28
 6760 0a80 0E000000 		.4byte	.LBB99
 6761 0a84 24000000 		.4byte	.LBE99-.LBB99
 6762 0a88 D70A0000 		.4byte	0xad7
 6763 0a8c 1A       		.uleb128 0x1a
 6764 0a8d A40C0000 		.4byte	.LASF81
 6765 0a91 01       		.byte	0x1
 6766 0a92 0103     		.2byte	0x301
 6767 0a94 31030000 		.4byte	0x331
 6768 0a98 60040000 		.4byte	.LLST30
 6769 0a9c 25       		.uleb128 0x25
 6770 0a9d 14000000 		.4byte	.LVL82
 6771 0aa1 F6280000 		.4byte	0x28f6
 6772 0aa5 B20A0000 		.4byte	0xab2
 6773 0aa9 21       		.uleb128 0x21
 6774 0aaa 01       		.uleb128 0x1
 6775 0aab 50       		.byte	0x50
 6776 0aac 04       		.uleb128 0x4
 6777 0aad 75       		.byte	0x75
 6778 0aae 00       		.sleb128 0
 6779 0aaf 32       		.byte	0x32
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 224


 6780 0ab0 24       		.byte	0x24
 6781 0ab1 00       		.byte	0
 6782 0ab2 25       		.uleb128 0x25
 6783 0ab3 1E000000 		.4byte	.LVL84
 6784 0ab7 F6280000 		.4byte	0x28f6
 6785 0abb C60A0000 		.4byte	0xac6
 6786 0abf 21       		.uleb128 0x21
 6787 0ac0 01       		.uleb128 0x1
 6788 0ac1 50       		.byte	0x50
 6789 0ac2 02       		.uleb128 0x2
 6790 0ac3 08       		.byte	0x8
 6791 0ac4 68       		.byte	0x68
 6792 0ac5 00       		.byte	0
 6793 0ac6 20       		.uleb128 0x20
 6794 0ac7 2E000000 		.4byte	.LVL86
 6795 0acb 6D280000 		.4byte	0x286d
 6796 0acf 21       		.uleb128 0x21
 6797 0ad0 01       		.uleb128 0x1
 6798 0ad1 50       		.byte	0x50
 6799 0ad2 02       		.uleb128 0x2
 6800 0ad3 79       		.byte	0x79
 6801 0ad4 00       		.sleb128 0
 6802 0ad5 00       		.byte	0
 6803 0ad6 00       		.byte	0
 6804 0ad7 25       		.uleb128 0x25
 6805 0ad8 4E000000 		.4byte	.LVL89
 6806 0adc 15060000 		.4byte	0x615
 6807 0ae0 1A0B0000 		.4byte	0xb1a
 6808 0ae4 21       		.uleb128 0x21
 6809 0ae5 01       		.uleb128 0x1
 6810 0ae6 50       		.byte	0x50
 6811 0ae7 02       		.uleb128 0x2
 6812 0ae8 76       		.byte	0x76
 6813 0ae9 00       		.sleb128 0
 6814 0aea 21       		.uleb128 0x21
 6815 0aeb 01       		.uleb128 0x1
 6816 0aec 51       		.byte	0x51
 6817 0aed 02       		.uleb128 0x2
 6818 0aee 77       		.byte	0x77
 6819 0aef 00       		.sleb128 0
 6820 0af0 21       		.uleb128 0x21
 6821 0af1 01       		.uleb128 0x1
 6822 0af2 52       		.byte	0x52
 6823 0af3 02       		.uleb128 0x2
 6824 0af4 75       		.byte	0x75
 6825 0af5 00       		.sleb128 0
 6826 0af6 21       		.uleb128 0x21
 6827 0af7 01       		.uleb128 0x1
 6828 0af8 53       		.byte	0x53
 6829 0af9 02       		.uleb128 0x2
 6830 0afa 78       		.byte	0x78
 6831 0afb 00       		.sleb128 0
 6832 0afc 21       		.uleb128 0x21
 6833 0afd 02       		.uleb128 0x2
 6834 0afe 7D       		.byte	0x7d
 6835 0aff 00       		.sleb128 0
 6836 0b00 03       		.uleb128 0x3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 225


 6837 0b01 91       		.byte	0x91
 6838 0b02 00       		.sleb128 0
 6839 0b03 06       		.byte	0x6
 6840 0b04 21       		.uleb128 0x21
 6841 0b05 02       		.uleb128 0x2
 6842 0b06 7D       		.byte	0x7d
 6843 0b07 04       		.sleb128 4
 6844 0b08 03       		.uleb128 0x3
 6845 0b09 91       		.byte	0x91
 6846 0b0a 04       		.sleb128 4
 6847 0b0b 06       		.byte	0x6
 6848 0b0c 21       		.uleb128 0x21
 6849 0b0d 02       		.uleb128 0x2
 6850 0b0e 7D       		.byte	0x7d
 6851 0b0f 08       		.sleb128 8
 6852 0b10 02       		.uleb128 0x2
 6853 0b11 74       		.byte	0x74
 6854 0b12 00       		.sleb128 0
 6855 0b13 21       		.uleb128 0x21
 6856 0b14 02       		.uleb128 0x2
 6857 0b15 7D       		.byte	0x7d
 6858 0b16 0C       		.sleb128 12
 6859 0b17 01       		.uleb128 0x1
 6860 0b18 30       		.byte	0x30
 6861 0b19 00       		.byte	0
 6862 0b1a 20       		.uleb128 0x20
 6863 0b1b 54000000 		.4byte	.LVL90
 6864 0b1f F3070000 		.4byte	0x7f3
 6865 0b23 21       		.uleb128 0x21
 6866 0b24 01       		.uleb128 0x1
 6867 0b25 50       		.byte	0x50
 6868 0b26 02       		.uleb128 0x2
 6869 0b27 74       		.byte	0x74
 6870 0b28 00       		.sleb128 0
 6871 0b29 00       		.byte	0
 6872 0b2a 00       		.byte	0
 6873 0b2b 07       		.uleb128 0x7
 6874 0b2c D5000000 		.4byte	0xd5
 6875 0b30 29       		.uleb128 0x29
 6876 0b31 DE0A0000 		.4byte	.LASF131
 6877 0b35 01       		.byte	0x1
 6878 0b36 5804     		.2byte	0x458
 6879 0b38 00000000 		.4byte	.LFB140
 6880 0b3c B0000000 		.4byte	.LFE140-.LFB140
 6881 0b40 01       		.uleb128 0x1
 6882 0b41 9C       		.byte	0x9c
 6883 0b42 FD0B0000 		.4byte	0xbfd
 6884 0b46 19       		.uleb128 0x19
 6885 0b47 AC0C0000 		.4byte	.LASF122
 6886 0b4b 01       		.byte	0x1
 6887 0b4c 5804     		.2byte	0x458
 6888 0b4e 43020000 		.4byte	0x243
 6889 0b52 89040000 		.4byte	.LLST31
 6890 0b56 1A       		.uleb128 0x1a
 6891 0b57 C2100000 		.4byte	.LASF94
 6892 0b5b 01       		.byte	0x1
 6893 0b5c 5A04     		.2byte	0x45a
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 226


 6894 0b5e CF050000 		.4byte	0x5cf
 6895 0b62 A7040000 		.4byte	.LLST32
 6896 0b66 2A       		.uleb128 0x2a
 6897 0b67 8B040000 		.4byte	0x48b
 6898 0b6b 84000000 		.4byte	.LBB100
 6899 0b6f 12000000 		.4byte	.LBE100-.LBB100
 6900 0b73 01       		.byte	0x1
 6901 0b74 A504     		.2byte	0x4a5
 6902 0b76 8A0B0000 		.4byte	0xb8a
 6903 0b7a 1C       		.uleb128 0x1c
 6904 0b7b 84000000 		.4byte	.LBB101
 6905 0b7f 12000000 		.4byte	.LBE101-.LBB101
 6906 0b83 1D       		.uleb128 0x1d
 6907 0b84 97040000 		.4byte	0x497
 6908 0b88 00       		.byte	0
 6909 0b89 00       		.byte	0
 6910 0b8a 1F       		.uleb128 0x1f
 6911 0b8b 08000000 		.4byte	.LVL94
 6912 0b8f A6280000 		.4byte	0x28a6
 6913 0b93 25       		.uleb128 0x25
 6914 0b94 18000000 		.4byte	.LVL96
 6915 0b98 C8280000 		.4byte	0x28c8
 6916 0b9c A70B0000 		.4byte	0xba7
 6917 0ba0 21       		.uleb128 0x21
 6918 0ba1 01       		.uleb128 0x1
 6919 0ba2 50       		.byte	0x50
 6920 0ba3 02       		.uleb128 0x2
 6921 0ba4 76       		.byte	0x76
 6922 0ba5 00       		.sleb128 0
 6923 0ba6 00       		.byte	0
 6924 0ba7 25       		.uleb128 0x25
 6925 0ba8 24000000 		.4byte	.LVL97
 6926 0bac C8280000 		.4byte	0x28c8
 6927 0bb0 BB0B0000 		.4byte	0xbbb
 6928 0bb4 21       		.uleb128 0x21
 6929 0bb5 01       		.uleb128 0x1
 6930 0bb6 50       		.byte	0x50
 6931 0bb7 02       		.uleb128 0x2
 6932 0bb8 74       		.byte	0x74
 6933 0bb9 18       		.sleb128 24
 6934 0bba 00       		.byte	0
 6935 0bbb 25       		.uleb128 0x25
 6936 0bbc 44000000 		.4byte	.LVL98
 6937 0bc0 B1280000 		.4byte	0x28b1
 6938 0bc4 D60B0000 		.4byte	0xbd6
 6939 0bc8 21       		.uleb128 0x21
 6940 0bc9 01       		.uleb128 0x1
 6941 0bca 50       		.byte	0x50
 6942 0bcb 03       		.uleb128 0x3
 6943 0bcc 75       		.byte	0x75
 6944 0bcd E401     		.sleb128 228
 6945 0bcf 21       		.uleb128 0x21
 6946 0bd0 01       		.uleb128 0x1
 6947 0bd1 51       		.byte	0x51
 6948 0bd2 02       		.uleb128 0x2
 6949 0bd3 76       		.byte	0x76
 6950 0bd4 00       		.sleb128 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 227


 6951 0bd5 00       		.byte	0
 6952 0bd6 25       		.uleb128 0x25
 6953 0bd7 62000000 		.4byte	.LVL99
 6954 0bdb D5050000 		.4byte	0x5d5
 6955 0bdf EA0B0000 		.4byte	0xbea
 6956 0be3 21       		.uleb128 0x21
 6957 0be4 01       		.uleb128 0x1
 6958 0be5 50       		.byte	0x50
 6959 0be6 02       		.uleb128 0x2
 6960 0be7 74       		.byte	0x74
 6961 0be8 00       		.sleb128 0
 6962 0be9 00       		.byte	0
 6963 0bea 1F       		.uleb128 0x1f
 6964 0beb 66000000 		.4byte	.LVL100
 6965 0bef A8050000 		.4byte	0x5a8
 6966 0bf3 1F       		.uleb128 0x1f
 6967 0bf4 6A000000 		.4byte	.LVL101
 6968 0bf8 BD280000 		.4byte	0x28bd
 6969 0bfc 00       		.byte	0
 6970 0bfd 27       		.uleb128 0x27
 6971 0bfe 8F080000 		.4byte	.LASF124
 6972 0c02 01       		.byte	0x1
 6973 0c03 3505     		.2byte	0x535
 6974 0c05 7F020000 		.4byte	0x27f
 6975 0c09 00000000 		.4byte	.LFB143
 6976 0c0d 78000000 		.4byte	.LFE143-.LFB143
 6977 0c11 01       		.uleb128 0x1
 6978 0c12 9C       		.byte	0x9c
 6979 0c13 8C0C0000 		.4byte	0xc8c
 6980 0c17 19       		.uleb128 0x19
 6981 0c18 AE0A0000 		.4byte	.LASF97
 6982 0c1c 01       		.byte	0x1
 6983 0c1d 3505     		.2byte	0x535
 6984 0c1f 43020000 		.4byte	0x243
 6985 0c23 BA040000 		.4byte	.LLST33
 6986 0c27 23       		.uleb128 0x23
 6987 0c28 88030000 		.4byte	.LASF125
 6988 0c2c 01       		.byte	0x1
 6989 0c2d 3705     		.2byte	0x537
 6990 0c2f 7F020000 		.4byte	0x27f
 6991 0c33 01       		.uleb128 0x1
 6992 0c34 50       		.byte	0x50
 6993 0c35 1A       		.uleb128 0x1a
 6994 0c36 82000000 		.4byte	.LASF126
 6995 0c3a 01       		.byte	0x1
 6996 0c3b 3805     		.2byte	0x538
 6997 0c3d 8C0C0000 		.4byte	0xc8c
 6998 0c41 FC040000 		.4byte	.LLST34
 6999 0c45 1A       		.uleb128 0x1a
 7000 0c46 C2100000 		.4byte	.LASF94
 7001 0c4a 01       		.byte	0x1
 7002 0c4b 3905     		.2byte	0x539
 7003 0c4d 5D050000 		.4byte	0x55d
 7004 0c51 1A050000 		.4byte	.LLST35
 7005 0c55 2A       		.uleb128 0x2a
 7006 0c56 8B040000 		.4byte	0x48b
 7007 0c5a 04000000 		.4byte	.LBB102
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 228


 7008 0c5e 14000000 		.4byte	.LBE102-.LBB102
 7009 0c62 01       		.byte	0x1
 7010 0c63 3B05     		.2byte	0x53b
 7011 0c65 790C0000 		.4byte	0xc79
 7012 0c69 1C       		.uleb128 0x1c
 7013 0c6a 04000000 		.4byte	.LBB103
 7014 0c6e 14000000 		.4byte	.LBE103-.LBB103
 7015 0c72 1D       		.uleb128 0x1d
 7016 0c73 97040000 		.4byte	0x497
 7017 0c77 00       		.byte	0
 7018 0c78 00       		.byte	0
 7019 0c79 1F       		.uleb128 0x1f
 7020 0c7a 26000000 		.4byte	.LVL107
 7021 0c7e A6280000 		.4byte	0x28a6
 7022 0c82 1F       		.uleb128 0x1f
 7023 0c83 2C000000 		.4byte	.LVL109
 7024 0c87 BD280000 		.4byte	0x28bd
 7025 0c8b 00       		.byte	0
 7026 0c8c 06       		.uleb128 0x6
 7027 0c8d 04       		.byte	0x4
 7028 0c8e 38020000 		.4byte	0x238
 7029 0c92 27       		.uleb128 0x27
 7030 0c93 49040000 		.4byte	.LASF127
 7031 0c97 01       		.byte	0x1
 7032 0c98 7C05     		.2byte	0x57c
 7033 0c9a 40010000 		.4byte	0x140
 7034 0c9e 00000000 		.4byte	.LFB144
 7035 0ca2 20000000 		.4byte	.LFE144-.LFB144
 7036 0ca6 01       		.uleb128 0x1
 7037 0ca7 9C       		.byte	0x9c
 7038 0ca8 EF0C0000 		.4byte	0xcef
 7039 0cac 19       		.uleb128 0x19
 7040 0cad AE0A0000 		.4byte	.LASF97
 7041 0cb1 01       		.byte	0x1
 7042 0cb2 7C05     		.2byte	0x57c
 7043 0cb4 43020000 		.4byte	0x243
 7044 0cb8 5C050000 		.4byte	.LLST36
 7045 0cbc 1A       		.uleb128 0x1a
 7046 0cbd C2100000 		.4byte	.LASF94
 7047 0cc1 01       		.byte	0x1
 7048 0cc2 7E05     		.2byte	0x57e
 7049 0cc4 CF050000 		.4byte	0x5cf
 7050 0cc8 7A050000 		.4byte	.LLST37
 7051 0ccc 1A       		.uleb128 0x1a
 7052 0ccd 9D030000 		.4byte	.LASF128
 7053 0cd1 01       		.byte	0x1
 7054 0cd2 7F05     		.2byte	0x57f
 7055 0cd4 40010000 		.4byte	0x140
 7056 0cd8 8D050000 		.4byte	.LLST38
 7057 0cdc 1F       		.uleb128 0x1f
 7058 0cdd 08000000 		.4byte	.LVL121
 7059 0ce1 A6280000 		.4byte	0x28a6
 7060 0ce5 1F       		.uleb128 0x1f
 7061 0ce6 16000000 		.4byte	.LVL124
 7062 0cea BD280000 		.4byte	0x28bd
 7063 0cee 00       		.byte	0
 7064 0cef 27       		.uleb128 0x27
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 229


 7065 0cf0 AF090000 		.4byte	.LASF129
 7066 0cf4 01       		.byte	0x1
 7067 0cf5 9205     		.2byte	0x592
 7068 0cf7 40010000 		.4byte	0x140
 7069 0cfb 00000000 		.4byte	.LFB145
 7070 0cff 30000000 		.4byte	.LFE145-.LFB145
 7071 0d03 01       		.uleb128 0x1
 7072 0d04 9C       		.byte	0x9c
 7073 0d05 940D0000 		.4byte	0xd94
 7074 0d09 19       		.uleb128 0x19
 7075 0d0a AE0A0000 		.4byte	.LASF97
 7076 0d0e 01       		.byte	0x1
 7077 0d0f 9205     		.2byte	0x592
 7078 0d11 43020000 		.4byte	0x243
 7079 0d15 AB050000 		.4byte	.LLST39
 7080 0d19 1A       		.uleb128 0x1a
 7081 0d1a C2100000 		.4byte	.LASF94
 7082 0d1e 01       		.byte	0x1
 7083 0d1f 9405     		.2byte	0x594
 7084 0d21 CF050000 		.4byte	0x5cf
 7085 0d25 C9050000 		.4byte	.LLST40
 7086 0d29 23       		.uleb128 0x23
 7087 0d2a 9D030000 		.4byte	.LASF128
 7088 0d2e 01       		.byte	0x1
 7089 0d2f 9505     		.2byte	0x595
 7090 0d31 40010000 		.4byte	0x140
 7091 0d35 01       		.uleb128 0x1
 7092 0d36 50       		.byte	0x50
 7093 0d37 2B       		.uleb128 0x2b
 7094 0d38 04050000 		.4byte	.LASF130
 7095 0d3c 01       		.byte	0x1
 7096 0d3d 9505     		.2byte	0x595
 7097 0d3f 40010000 		.4byte	0x140
 7098 0d43 2A       		.uleb128 0x2a
 7099 0d44 A3040000 		.4byte	0x4a3
 7100 0d48 08000000 		.4byte	.LBB104
 7101 0d4c 14000000 		.4byte	.LBE104-.LBB104
 7102 0d50 01       		.byte	0x1
 7103 0d51 A905     		.2byte	0x5a9
 7104 0d53 6C0D0000 		.4byte	0xd6c
 7105 0d57 1C       		.uleb128 0x1c
 7106 0d58 08000000 		.4byte	.LBB105
 7107 0d5c 14000000 		.4byte	.LBE105-.LBB105
 7108 0d60 1D       		.uleb128 0x1d
 7109 0d61 B3040000 		.4byte	0x4b3
 7110 0d65 1D       		.uleb128 0x1d
 7111 0d66 BE040000 		.4byte	0x4be
 7112 0d6a 00       		.byte	0
 7113 0d6b 00       		.byte	0
 7114 0d6c 2A       		.uleb128 0x2a
 7115 0d6d CA040000 		.4byte	0x4ca
 7116 0d71 26000000 		.4byte	.LBB106
 7117 0d75 04000000 		.4byte	.LBE106-.LBB106
 7118 0d79 01       		.byte	0x1
 7119 0d7a B005     		.2byte	0x5b0
 7120 0d7c 8A0D0000 		.4byte	0xd8a
 7121 0d80 2C       		.uleb128 0x2c
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 230


 7122 0d81 D6040000 		.4byte	0x4d6
 7123 0d85 DC050000 		.4byte	.LLST41
 7124 0d89 00       		.byte	0
 7125 0d8a 1F       		.uleb128 0x1f
 7126 0d8b 08000000 		.4byte	.LVL127
 7127 0d8f 01290000 		.4byte	0x2901
 7128 0d93 00       		.byte	0
 7129 0d94 29       		.uleb128 0x29
 7130 0d95 560A0000 		.4byte	.LASF132
 7131 0d99 01       		.byte	0x1
 7132 0d9a BA05     		.2byte	0x5ba
 7133 0d9c 00000000 		.4byte	.LFB146
 7134 0da0 DC000000 		.4byte	.LFE146-.LFB146
 7135 0da4 01       		.uleb128 0x1
 7136 0da5 9C       		.byte	0x9c
 7137 0da6 690E0000 		.4byte	0xe69
 7138 0daa 19       		.uleb128 0x19
 7139 0dab AE0A0000 		.4byte	.LASF97
 7140 0daf 01       		.byte	0x1
 7141 0db0 BA05     		.2byte	0x5ba
 7142 0db2 43020000 		.4byte	0x243
 7143 0db6 EF050000 		.4byte	.LLST42
 7144 0dba 19       		.uleb128 0x19
 7145 0dbb 82090000 		.4byte	.LASF133
 7146 0dbf 01       		.byte	0x1
 7147 0dc0 BA05     		.2byte	0x5ba
 7148 0dc2 40010000 		.4byte	0x140
 7149 0dc6 0D060000 		.4byte	.LLST43
 7150 0dca 1A       		.uleb128 0x1a
 7151 0dcb C2100000 		.4byte	.LASF94
 7152 0dcf 01       		.byte	0x1
 7153 0dd0 BC05     		.2byte	0x5bc
 7154 0dd2 CF050000 		.4byte	0x5cf
 7155 0dd6 37060000 		.4byte	.LLST44
 7156 0dda 1A       		.uleb128 0x1a
 7157 0ddb 97110000 		.4byte	.LASF134
 7158 0ddf 01       		.byte	0x1
 7159 0de0 BD05     		.2byte	0x5bd
 7160 0de2 40010000 		.4byte	0x140
 7161 0de6 4A060000 		.4byte	.LLST45
 7162 0dea 1A       		.uleb128 0x1a
 7163 0deb 1E0F0000 		.4byte	.LASF135
 7164 0def 01       		.byte	0x1
 7165 0df0 BD05     		.2byte	0x5bd
 7166 0df2 40010000 		.4byte	0x140
 7167 0df6 5D060000 		.4byte	.LLST46
 7168 0dfa 1A       		.uleb128 0x1a
 7169 0dfb 28040000 		.4byte	.LASF136
 7170 0dff 01       		.byte	0x1
 7171 0e00 BE05     		.2byte	0x5be
 7172 0e02 35010000 		.4byte	0x135
 7173 0e06 70060000 		.4byte	.LLST47
 7174 0e0a 2A       		.uleb128 0x2a
 7175 0e0b 8B040000 		.4byte	0x48b
 7176 0e0f 04000000 		.4byte	.LBB108
 7177 0e13 12000000 		.4byte	.LBE108-.LBB108
 7178 0e17 01       		.byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 231


 7179 0e18 C005     		.2byte	0x5c0
 7180 0e1a 2E0E0000 		.4byte	0xe2e
 7181 0e1e 1C       		.uleb128 0x1c
 7182 0e1f 04000000 		.4byte	.LBB109
 7183 0e23 12000000 		.4byte	.LBE109-.LBB109
 7184 0e27 1D       		.uleb128 0x1d
 7185 0e28 97040000 		.4byte	0x497
 7186 0e2c 00       		.byte	0
 7187 0e2d 00       		.byte	0
 7188 0e2e 1F       		.uleb128 0x1f
 7189 0e2f 26000000 		.4byte	.LVL135
 7190 0e33 A6280000 		.4byte	0x28a6
 7191 0e37 25       		.uleb128 0x25
 7192 0e38 96000000 		.4byte	.LVL141
 7193 0e3c C8280000 		.4byte	0x28c8
 7194 0e40 4B0E0000 		.4byte	0xe4b
 7195 0e44 21       		.uleb128 0x21
 7196 0e45 01       		.uleb128 0x1
 7197 0e46 50       		.byte	0x50
 7198 0e47 02       		.uleb128 0x2
 7199 0e48 75       		.byte	0x75
 7200 0e49 00       		.sleb128 0
 7201 0e4a 00       		.byte	0
 7202 0e4b 25       		.uleb128 0x25
 7203 0e4c B8000000 		.4byte	.LVL142
 7204 0e50 B1280000 		.4byte	0x28b1
 7205 0e54 5F0E0000 		.4byte	0xe5f
 7206 0e58 21       		.uleb128 0x21
 7207 0e59 01       		.uleb128 0x1
 7208 0e5a 51       		.byte	0x51
 7209 0e5b 02       		.uleb128 0x2
 7210 0e5c 75       		.byte	0x75
 7211 0e5d 00       		.sleb128 0
 7212 0e5e 00       		.byte	0
 7213 0e5f 1F       		.uleb128 0x1f
 7214 0e60 CE000000 		.4byte	.LVL144
 7215 0e64 BD280000 		.4byte	0x28bd
 7216 0e68 00       		.byte	0
 7217 0e69 29       		.uleb128 0x29
 7218 0e6a FB100000 		.4byte	.LASF137
 7219 0e6e 01       		.byte	0x1
 7220 0e6f F106     		.2byte	0x6f1
 7221 0e71 00000000 		.4byte	.LFB149
 7222 0e75 88000000 		.4byte	.LFE149-.LFB149
 7223 0e79 01       		.uleb128 0x1
 7224 0e7a 9C       		.byte	0x9c
 7225 0e7b 120F0000 		.4byte	0xf12
 7226 0e7f 19       		.uleb128 0x19
 7227 0e80 89110000 		.4byte	.LASF138
 7228 0e84 01       		.byte	0x1
 7229 0e85 F106     		.2byte	0x6f1
 7230 0e87 43020000 		.4byte	0x243
 7231 0e8b 8F060000 		.4byte	.LLST48
 7232 0e8f 1A       		.uleb128 0x1a
 7233 0e90 C2100000 		.4byte	.LASF94
 7234 0e94 01       		.byte	0x1
 7235 0e95 F306     		.2byte	0x6f3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 232


 7236 0e97 120F0000 		.4byte	0xf12
 7237 0e9b BB060000 		.4byte	.LLST49
 7238 0e9f 2A       		.uleb128 0x2a
 7239 0ea0 8B040000 		.4byte	0x48b
 7240 0ea4 02000000 		.4byte	.LBB110
 7241 0ea8 12000000 		.4byte	.LBE110-.LBB110
 7242 0eac 01       		.byte	0x1
 7243 0ead F606     		.2byte	0x6f6
 7244 0eaf C30E0000 		.4byte	0xec3
 7245 0eb3 1C       		.uleb128 0x1c
 7246 0eb4 02000000 		.4byte	.LBB111
 7247 0eb8 12000000 		.4byte	.LBE111-.LBB111
 7248 0ebc 1D       		.uleb128 0x1d
 7249 0ebd 97040000 		.4byte	0x497
 7250 0ec1 00       		.byte	0
 7251 0ec2 00       		.byte	0
 7252 0ec3 1F       		.uleb128 0x1f
 7253 0ec4 28000000 		.4byte	.LVL148
 7254 0ec8 A6280000 		.4byte	0x28a6
 7255 0ecc 25       		.uleb128 0x25
 7256 0ecd 2E000000 		.4byte	.LVL149
 7257 0ed1 E2040000 		.4byte	0x4e2
 7258 0ed5 E00E0000 		.4byte	0xee0
 7259 0ed9 21       		.uleb128 0x21
 7260 0eda 01       		.uleb128 0x1
 7261 0edb 50       		.byte	0x50
 7262 0edc 02       		.uleb128 0x2
 7263 0edd 74       		.byte	0x74
 7264 0ede 00       		.sleb128 0
 7265 0edf 00       		.byte	0
 7266 0ee0 25       		.uleb128 0x25
 7267 0ee1 38000000 		.4byte	.LVL150
 7268 0ee5 C8280000 		.4byte	0x28c8
 7269 0ee9 F40E0000 		.4byte	0xef4
 7270 0eed 21       		.uleb128 0x21
 7271 0eee 01       		.uleb128 0x1
 7272 0eef 50       		.byte	0x50
 7273 0ef0 02       		.uleb128 0x2
 7274 0ef1 76       		.byte	0x76
 7275 0ef2 00       		.sleb128 0
 7276 0ef3 00       		.byte	0
 7277 0ef4 25       		.uleb128 0x25
 7278 0ef5 5E000000 		.4byte	.LVL151
 7279 0ef9 B1280000 		.4byte	0x28b1
 7280 0efd 080F0000 		.4byte	0xf08
 7281 0f01 21       		.uleb128 0x21
 7282 0f02 01       		.uleb128 0x1
 7283 0f03 51       		.byte	0x51
 7284 0f04 02       		.uleb128 0x2
 7285 0f05 76       		.byte	0x76
 7286 0f06 00       		.sleb128 0
 7287 0f07 00       		.byte	0
 7288 0f08 1F       		.uleb128 0x1f
 7289 0f09 7E000000 		.4byte	.LVL152
 7290 0f0d BD280000 		.4byte	0x28bd
 7291 0f11 00       		.byte	0
 7292 0f12 07       		.uleb128 0x7
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 233


 7293 0f13 CF050000 		.4byte	0x5cf
 7294 0f17 27       		.uleb128 0x27
 7295 0f18 5F0D0000 		.4byte	.LASF139
 7296 0f1c 01       		.byte	0x1
 7297 0f1d 2707     		.2byte	0x727
 7298 0f1f 35010000 		.4byte	0x135
 7299 0f23 00000000 		.4byte	.LFB150
 7300 0f27 A4000000 		.4byte	.LFE150-.LFB150
 7301 0f2b 01       		.uleb128 0x1
 7302 0f2c 9C       		.byte	0x9c
 7303 0f2d 37100000 		.4byte	0x1037
 7304 0f31 19       		.uleb128 0x19
 7305 0f32 89110000 		.4byte	.LASF138
 7306 0f36 01       		.byte	0x1
 7307 0f37 2707     		.2byte	0x727
 7308 0f39 43020000 		.4byte	0x243
 7309 0f3d E7060000 		.4byte	.LLST50
 7310 0f41 1A       		.uleb128 0x1a
 7311 0f42 28040000 		.4byte	.LASF136
 7312 0f46 01       		.byte	0x1
 7313 0f47 2907     		.2byte	0x729
 7314 0f49 35010000 		.4byte	0x135
 7315 0f4d 13070000 		.4byte	.LLST51
 7316 0f51 1A       		.uleb128 0x1a
 7317 0f52 C2100000 		.4byte	.LASF94
 7318 0f56 01       		.byte	0x1
 7319 0f57 2A07     		.2byte	0x72a
 7320 0f59 120F0000 		.4byte	0xf12
 7321 0f5d 54070000 		.4byte	.LLST52
 7322 0f61 2B       		.uleb128 0x2b
 7323 0f62 10020000 		.4byte	.LASF140
 7324 0f66 01       		.byte	0x1
 7325 0f67 2B07     		.2byte	0x72b
 7326 0f69 40010000 		.4byte	0x140
 7327 0f6d 2A       		.uleb128 0x2a
 7328 0f6e 8B040000 		.4byte	0x48b
 7329 0f72 04000000 		.4byte	.LBB112
 7330 0f76 14000000 		.4byte	.LBE112-.LBB112
 7331 0f7a 01       		.byte	0x1
 7332 0f7b 2D07     		.2byte	0x72d
 7333 0f7d 910F0000 		.4byte	0xf91
 7334 0f81 1C       		.uleb128 0x1c
 7335 0f82 04000000 		.4byte	.LBB113
 7336 0f86 14000000 		.4byte	.LBE113-.LBB113
 7337 0f8a 1D       		.uleb128 0x1d
 7338 0f8b 97040000 		.4byte	0x497
 7339 0f8f 00       		.byte	0
 7340 0f90 00       		.byte	0
 7341 0f91 2A       		.uleb128 0x2a
 7342 0f92 A3040000 		.4byte	0x4a3
 7343 0f96 1C000000 		.4byte	.LBB114
 7344 0f9a 14000000 		.4byte	.LBE114-.LBB114
 7345 0f9e 01       		.byte	0x1
 7346 0f9f 4107     		.2byte	0x741
 7347 0fa1 BA0F0000 		.4byte	0xfba
 7348 0fa5 1C       		.uleb128 0x1c
 7349 0fa6 1C000000 		.4byte	.LBB115
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 234


 7350 0faa 14000000 		.4byte	.LBE115-.LBB115
 7351 0fae 1D       		.uleb128 0x1d
 7352 0faf B3040000 		.4byte	0x4b3
 7353 0fb3 1D       		.uleb128 0x1d
 7354 0fb4 BE040000 		.4byte	0x4be
 7355 0fb8 00       		.byte	0
 7356 0fb9 00       		.byte	0
 7357 0fba 2A       		.uleb128 0x2a
 7358 0fbb CA040000 		.4byte	0x4ca
 7359 0fbf 90000000 		.4byte	.LBB116
 7360 0fc3 04000000 		.4byte	.LBE116-.LBB116
 7361 0fc7 01       		.byte	0x1
 7362 0fc8 6507     		.2byte	0x765
 7363 0fca D80F0000 		.4byte	0xfd8
 7364 0fce 2C       		.uleb128 0x2c
 7365 0fcf D6040000 		.4byte	0x4d6
 7366 0fd3 80070000 		.4byte	.LLST53
 7367 0fd7 00       		.byte	0
 7368 0fd8 1F       		.uleb128 0x1f
 7369 0fd9 1C000000 		.4byte	.LVL157
 7370 0fdd 01290000 		.4byte	0x2901
 7371 0fe1 25       		.uleb128 0x25
 7372 0fe2 36000000 		.4byte	.LVL158
 7373 0fe6 E2040000 		.4byte	0x4e2
 7374 0fea F50F0000 		.4byte	0xff5
 7375 0fee 21       		.uleb128 0x21
 7376 0fef 01       		.uleb128 0x1
 7377 0ff0 50       		.byte	0x50
 7378 0ff1 02       		.uleb128 0x2
 7379 0ff2 74       		.byte	0x74
 7380 0ff3 00       		.sleb128 0
 7381 0ff4 00       		.byte	0
 7382 0ff5 25       		.uleb128 0x25
 7383 0ff6 5C000000 		.4byte	.LVL160
 7384 0ffa C8280000 		.4byte	0x28c8
 7385 0ffe 09100000 		.4byte	0x1009
 7386 1002 21       		.uleb128 0x21
 7387 1003 01       		.uleb128 0x1
 7388 1004 50       		.byte	0x50
 7389 1005 02       		.uleb128 0x2
 7390 1006 76       		.byte	0x76
 7391 1007 00       		.sleb128 0
 7392 1008 00       		.byte	0
 7393 1009 25       		.uleb128 0x25
 7394 100a 7E000000 		.4byte	.LVL161
 7395 100e B1280000 		.4byte	0x28b1
 7396 1012 1D100000 		.4byte	0x101d
 7397 1016 21       		.uleb128 0x21
 7398 1017 01       		.uleb128 0x1
 7399 1018 51       		.byte	0x51
 7400 1019 02       		.uleb128 0x2
 7401 101a 76       		.byte	0x76
 7402 101b 00       		.sleb128 0
 7403 101c 00       		.byte	0
 7404 101d 20       		.uleb128 0x20
 7405 101e 8A000000 		.4byte	.LVL163
 7406 1022 B1280000 		.4byte	0x28b1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 235


 7407 1026 21       		.uleb128 0x21
 7408 1027 01       		.uleb128 0x1
 7409 1028 50       		.byte	0x50
 7410 1029 05       		.uleb128 0x5
 7411 102a 03       		.byte	0x3
 7412 102b 14000000 		.4byte	.LANCHOR0+20
 7413 102f 21       		.uleb128 0x21
 7414 1030 01       		.uleb128 0x1
 7415 1031 51       		.byte	0x51
 7416 1032 02       		.uleb128 0x2
 7417 1033 74       		.byte	0x74
 7418 1034 18       		.sleb128 24
 7419 1035 00       		.byte	0
 7420 1036 00       		.byte	0
 7421 1037 29       		.uleb128 0x29
 7422 1038 FF0D0000 		.4byte	.LASF141
 7423 103c 01       		.byte	0x1
 7424 103d 6D07     		.2byte	0x76d
 7425 103f 00000000 		.4byte	.LFB151
 7426 1043 7C000000 		.4byte	.LFE151-.LFB151
 7427 1047 01       		.uleb128 0x1
 7428 1048 9C       		.byte	0x9c
 7429 1049 F3100000 		.4byte	0x10f3
 7430 104d 1A       		.uleb128 0x1a
 7431 104e 870D0000 		.4byte	.LASF93
 7432 1052 01       		.byte	0x1
 7433 1053 6F07     		.2byte	0x76f
 7434 1055 35010000 		.4byte	0x135
 7435 1059 93070000 		.4byte	.LLST54
 7436 105d 2A       		.uleb128 0x2a
 7437 105e 8B040000 		.4byte	0x48b
 7438 1062 22000000 		.4byte	.LBB118
 7439 1066 10000000 		.4byte	.LBE118-.LBB118
 7440 106a 01       		.byte	0x1
 7441 106b B507     		.2byte	0x7b5
 7442 106d 81100000 		.4byte	0x1081
 7443 1071 1C       		.uleb128 0x1c
 7444 1072 22000000 		.4byte	.LBB119
 7445 1076 10000000 		.4byte	.LBE119-.LBB119
 7446 107a 1D       		.uleb128 0x1d
 7447 107b 97040000 		.4byte	0x497
 7448 107f 00       		.byte	0
 7449 1080 00       		.byte	0
 7450 1081 2A       		.uleb128 0x2a
 7451 1082 8B040000 		.4byte	0x48b
 7452 1086 52000000 		.4byte	.LBB120
 7453 108a 12000000 		.4byte	.LBE120-.LBB120
 7454 108e 01       		.byte	0x1
 7455 108f DC07     		.2byte	0x7dc
 7456 1091 A5100000 		.4byte	0x10a5
 7457 1095 1C       		.uleb128 0x1c
 7458 1096 52000000 		.4byte	.LBB121
 7459 109a 12000000 		.4byte	.LBE121-.LBB121
 7460 109e 1D       		.uleb128 0x1d
 7461 109f 97040000 		.4byte	0x497
 7462 10a3 00       		.byte	0
 7463 10a4 00       		.byte	0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 236


 7464 10a5 25       		.uleb128 0x25
 7465 10a6 16000000 		.4byte	.LVL167
 7466 10aa E7090000 		.4byte	0x9e7
 7467 10ae E0100000 		.4byte	0x10e0
 7468 10b2 21       		.uleb128 0x21
 7469 10b3 01       		.uleb128 0x1
 7470 10b4 50       		.byte	0x50
 7471 10b5 05       		.uleb128 0x5
 7472 10b6 03       		.byte	0x3
 7473 10b7 00000000 		.4byte	prvIdleTask
 7474 10bb 21       		.uleb128 0x21
 7475 10bc 01       		.uleb128 0x1
 7476 10bd 51       		.byte	0x51
 7477 10be 05       		.uleb128 0x5
 7478 10bf 03       		.byte	0x3
 7479 10c0 00000000 		.4byte	.LC0
 7480 10c4 21       		.uleb128 0x21
 7481 10c5 01       		.uleb128 0x1
 7482 10c6 52       		.byte	0x52
 7483 10c7 02       		.uleb128 0x2
 7484 10c8 08       		.byte	0x8
 7485 10c9 80       		.byte	0x80
 7486 10ca 21       		.uleb128 0x21
 7487 10cb 01       		.uleb128 0x1
 7488 10cc 53       		.byte	0x53
 7489 10cd 01       		.uleb128 0x1
 7490 10ce 30       		.byte	0x30
 7491 10cf 21       		.uleb128 0x21
 7492 10d0 02       		.uleb128 0x2
 7493 10d1 7D       		.byte	0x7d
 7494 10d2 00       		.sleb128 0
 7495 10d3 01       		.uleb128 0x1
 7496 10d4 30       		.byte	0x30
 7497 10d5 21       		.uleb128 0x21
 7498 10d6 02       		.uleb128 0x2
 7499 10d7 7D       		.byte	0x7d
 7500 10d8 04       		.sleb128 4
 7501 10d9 05       		.uleb128 0x5
 7502 10da 03       		.byte	0x3
 7503 10db 1C010000 		.4byte	.LANCHOR0+284
 7504 10df 00       		.byte	0
 7505 10e0 1F       		.uleb128 0x1f
 7506 10e1 1E000000 		.4byte	.LVL168
 7507 10e5 0C290000 		.4byte	0x290c
 7508 10e9 1F       		.uleb128 0x1f
 7509 10ea 4A000000 		.4byte	.LVL169
 7510 10ee 18290000 		.4byte	0x2918
 7511 10f2 00       		.byte	0
 7512 10f3 29       		.uleb128 0x29
 7513 10f4 79060000 		.4byte	.LASF142
 7514 10f8 01       		.byte	0x1
 7515 10f9 E507     		.2byte	0x7e5
 7516 10fb 00000000 		.4byte	.LFB152
 7517 10ff 24000000 		.4byte	.LFE152-.LFB152
 7518 1103 01       		.uleb128 0x1
 7519 1104 9C       		.byte	0x9c
 7520 1105 37110000 		.4byte	0x1137
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 237


 7521 1109 2A       		.uleb128 0x2a
 7522 110a 8B040000 		.4byte	0x48b
 7523 110e 02000000 		.4byte	.LBB122
 7524 1112 10000000 		.4byte	.LBE122-.LBB122
 7525 1116 01       		.byte	0x1
 7526 1117 EA07     		.2byte	0x7ea
 7527 1119 2D110000 		.4byte	0x112d
 7528 111d 1C       		.uleb128 0x1c
 7529 111e 02000000 		.4byte	.LBB123
 7530 1122 10000000 		.4byte	.LBE123-.LBB123
 7531 1126 1D       		.uleb128 0x1d
 7532 1127 97040000 		.4byte	0x497
 7533 112b 00       		.byte	0
 7534 112c 00       		.byte	0
 7535 112d 1F       		.uleb128 0x1f
 7536 112e 1E000000 		.4byte	.LVL173
 7537 1132 23290000 		.4byte	0x2923
 7538 1136 00       		.byte	0
 7539 1137 2D       		.uleb128 0x2d
 7540 1138 BC050000 		.4byte	.LASF182
 7541 113c 01       		.byte	0x1
 7542 113d F007     		.2byte	0x7f0
 7543 113f 00000000 		.4byte	.LFB153
 7544 1143 14000000 		.4byte	.LFE153-.LFB153
 7545 1147 01       		.uleb128 0x1
 7546 1148 9C       		.byte	0x9c
 7547 1149 27       		.uleb128 0x27
 7548 114a 680C0000 		.4byte	.LASF143
 7549 114e 01       		.byte	0x1
 7550 114f A708     		.2byte	0x8a7
 7551 1151 4B010000 		.4byte	0x14b
 7552 1155 00000000 		.4byte	.LFB155
 7553 1159 0C000000 		.4byte	.LFE155-.LFB155
 7554 115d 01       		.uleb128 0x1
 7555 115e 9C       		.byte	0x9c
 7556 115f 72110000 		.4byte	0x1172
 7557 1163 23       		.uleb128 0x23
 7558 1164 F80D0000 		.4byte	.LASF144
 7559 1168 01       		.byte	0x1
 7560 1169 A908     		.2byte	0x8a9
 7561 116b 4B010000 		.4byte	0x14b
 7562 116f 01       		.uleb128 0x1
 7563 1170 50       		.byte	0x50
 7564 1171 00       		.byte	0
 7565 1172 27       		.uleb128 0x27
 7566 1173 EB040000 		.4byte	.LASF145
 7567 1177 01       		.byte	0x1
 7568 1178 B608     		.2byte	0x8b6
 7569 117a 4B010000 		.4byte	0x14b
 7570 117e 00000000 		.4byte	.LFB156
 7571 1182 14000000 		.4byte	.LFE156-.LFB156
 7572 1186 01       		.uleb128 0x1
 7573 1187 9C       		.byte	0x9c
 7574 1188 B1110000 		.4byte	0x11b1
 7575 118c 23       		.uleb128 0x23
 7576 118d 870D0000 		.4byte	.LASF93
 7577 1191 01       		.byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 238


 7578 1192 B808     		.2byte	0x8b8
 7579 1194 4B010000 		.4byte	0x14b
 7580 1198 01       		.uleb128 0x1
 7581 1199 50       		.byte	0x50
 7582 119a 2E       		.uleb128 0x2e
 7583 119b 10020000 		.4byte	.LASF140
 7584 119f 01       		.byte	0x1
 7585 11a0 B908     		.2byte	0x8b9
 7586 11a2 40010000 		.4byte	0x140
 7587 11a6 00       		.byte	0
 7588 11a7 1F       		.uleb128 0x1f
 7589 11a8 06000000 		.4byte	.LVL175
 7590 11ac 01290000 		.4byte	0x2901
 7591 11b0 00       		.byte	0
 7592 11b1 2F       		.uleb128 0x2f
 7593 11b2 A6030000 		.4byte	.LASF275
 7594 11b6 01       		.byte	0x1
 7595 11b7 D508     		.2byte	0x8d5
 7596 11b9 40010000 		.4byte	0x140
 7597 11bd 00000000 		.4byte	.LFB157
 7598 11c1 0C000000 		.4byte	.LFE157-.LFB157
 7599 11c5 01       		.uleb128 0x1
 7600 11c6 9C       		.byte	0x9c
 7601 11c7 27       		.uleb128 0x27
 7602 11c8 E20D0000 		.4byte	.LASF146
 7603 11cc 01       		.byte	0x1
 7604 11cd DD08     		.2byte	0x8dd
 7605 11cf B2000000 		.4byte	0xb2
 7606 11d3 00000000 		.4byte	.LFB158
 7607 11d7 28000000 		.4byte	.LFE158-.LFB158
 7608 11db 01       		.uleb128 0x1
 7609 11dc 9C       		.byte	0x9c
 7610 11dd 22120000 		.4byte	0x1222
 7611 11e1 19       		.uleb128 0x19
 7612 11e2 880A0000 		.4byte	.LASF147
 7613 11e6 01       		.byte	0x1
 7614 11e7 DD08     		.2byte	0x8dd
 7615 11e9 43020000 		.4byte	0x243
 7616 11ed BC070000 		.4byte	.LLST55
 7617 11f1 1A       		.uleb128 0x1a
 7618 11f2 C2100000 		.4byte	.LASF94
 7619 11f6 01       		.byte	0x1
 7620 11f7 DF08     		.2byte	0x8df
 7621 11f9 CF050000 		.4byte	0x5cf
 7622 11fd CF070000 		.4byte	.LLST56
 7623 1201 1B       		.uleb128 0x1b
 7624 1202 8B040000 		.4byte	0x48b
 7625 1206 0C000000 		.4byte	.LBB124
 7626 120a 12000000 		.4byte	.LBE124-.LBB124
 7627 120e 01       		.byte	0x1
 7628 120f E408     		.2byte	0x8e4
 7629 1211 1C       		.uleb128 0x1c
 7630 1212 0C000000 		.4byte	.LBB125
 7631 1216 12000000 		.4byte	.LBE125-.LBB125
 7632 121a 1D       		.uleb128 0x1d
 7633 121b 97040000 		.4byte	0x497
 7634 121f 00       		.byte	0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 239


 7635 1220 00       		.byte	0
 7636 1221 00       		.byte	0
 7637 1222 27       		.uleb128 0x27
 7638 1223 27020000 		.4byte	.LASF148
 7639 1227 01       		.byte	0x1
 7640 1228 1D0A     		.2byte	0xa1d
 7641 122a 35010000 		.4byte	0x135
 7642 122e 00000000 		.4byte	.LFB160
 7643 1232 FC000000 		.4byte	.LFE160-.LFB160
 7644 1236 01       		.uleb128 0x1
 7645 1237 9C       		.byte	0x9c
 7646 1238 06130000 		.4byte	0x1306
 7647 123c 1A       		.uleb128 0x1a
 7648 123d C2100000 		.4byte	.LASF94
 7649 1241 01       		.byte	0x1
 7650 1242 1F0A     		.2byte	0xa1f
 7651 1244 CF050000 		.4byte	0x5cf
 7652 1248 ED070000 		.4byte	.LLST57
 7653 124c 1A       		.uleb128 0x1a
 7654 124d 920B0000 		.4byte	.LASF28
 7655 1251 01       		.byte	0x1
 7656 1252 200A     		.2byte	0xa20
 7657 1254 4B010000 		.4byte	0x14b
 7658 1258 0B080000 		.4byte	.LLST58
 7659 125c 1A       		.uleb128 0x1a
 7660 125d 4A090000 		.4byte	.LASF149
 7661 1261 01       		.byte	0x1
 7662 1262 210A     		.2byte	0xa21
 7663 1264 35010000 		.4byte	0x135
 7664 1268 1E080000 		.4byte	.LLST59
 7665 126c 30       		.uleb128 0x30
 7666 126d 00000000 		.4byte	.Ldebug_ranges0+0
 7667 1271 1A       		.uleb128 0x1a
 7668 1272 61050000 		.4byte	.LASF118
 7669 1276 01       		.byte	0x1
 7670 1277 2B0A     		.2byte	0xa2b
 7671 1279 6E090000 		.4byte	0x96e
 7672 127d 76080000 		.4byte	.LLST60
 7673 1281 28       		.uleb128 0x28
 7674 1282 1C000000 		.4byte	.LBB127
 7675 1286 34000000 		.4byte	.LBE127-.LBB127
 7676 128a CC120000 		.4byte	0x12cc
 7677 128e 1A       		.uleb128 0x1a
 7678 128f A8050000 		.4byte	.LASF150
 7679 1293 01       		.byte	0x1
 7680 1294 330A     		.2byte	0xa33
 7681 1296 8C0C0000 		.4byte	0xc8c
 7682 129a 89080000 		.4byte	.LLST61
 7683 129e 2A       		.uleb128 0x2a
 7684 129f 8B040000 		.4byte	0x48b
 7685 12a3 22000000 		.4byte	.LBB128
 7686 12a7 12000000 		.4byte	.LBE128-.LBB128
 7687 12ab 01       		.byte	0x1
 7688 12ac 330A     		.2byte	0xa33
 7689 12ae C2120000 		.4byte	0x12c2
 7690 12b2 1C       		.uleb128 0x1c
 7691 12b3 22000000 		.4byte	.LBB129
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 240


 7692 12b7 12000000 		.4byte	.LBE129-.LBB129
 7693 12bb 1D       		.uleb128 0x1d
 7694 12bc 97040000 		.4byte	0x497
 7695 12c0 00       		.byte	0
 7696 12c1 00       		.byte	0
 7697 12c2 1F       		.uleb128 0x1f
 7698 12c3 50000000 		.4byte	.LVL187
 7699 12c7 A8050000 		.4byte	0x5a8
 7700 12cb 00       		.byte	0
 7701 12cc 25       		.uleb128 0x25
 7702 12cd 9A000000 		.4byte	.LVL194
 7703 12d1 C8280000 		.4byte	0x28c8
 7704 12d5 E0120000 		.4byte	0x12e0
 7705 12d9 21       		.uleb128 0x21
 7706 12da 01       		.uleb128 0x1
 7707 12db 50       		.byte	0x50
 7708 12dc 02       		.uleb128 0x2
 7709 12dd 78       		.byte	0x78
 7710 12de 00       		.sleb128 0
 7711 12df 00       		.byte	0
 7712 12e0 25       		.uleb128 0x25
 7713 12e1 A6000000 		.4byte	.LVL195
 7714 12e5 C8280000 		.4byte	0x28c8
 7715 12e9 F4120000 		.4byte	0x12f4
 7716 12ed 21       		.uleb128 0x21
 7717 12ee 01       		.uleb128 0x1
 7718 12ef 50       		.byte	0x50
 7719 12f0 02       		.uleb128 0x2
 7720 12f1 75       		.byte	0x75
 7721 12f2 18       		.sleb128 24
 7722 12f3 00       		.byte	0
 7723 12f4 20       		.uleb128 0x20
 7724 12f5 CC000000 		.4byte	.LVL196
 7725 12f9 B1280000 		.4byte	0x28b1
 7726 12fd 21       		.uleb128 0x21
 7727 12fe 01       		.uleb128 0x1
 7728 12ff 51       		.byte	0x51
 7729 1300 02       		.uleb128 0x2
 7730 1301 78       		.byte	0x78
 7731 1302 00       		.sleb128 0
 7732 1303 00       		.byte	0
 7733 1304 00       		.byte	0
 7734 1305 00       		.byte	0
 7735 1306 27       		.uleb128 0x27
 7736 1307 300C0000 		.4byte	.LASF151
 7737 130b 01       		.byte	0x1
 7738 130c 3908     		.2byte	0x839
 7739 130e 35010000 		.4byte	0x135
 7740 1312 00000000 		.4byte	.LFB154
 7741 1316 F0000000 		.4byte	.LFE154-.LFB154
 7742 131a 01       		.uleb128 0x1
 7743 131b 9C       		.byte	0x9c
 7744 131c E3130000 		.4byte	0x13e3
 7745 1320 1A       		.uleb128 0x1a
 7746 1321 C2100000 		.4byte	.LASF94
 7747 1325 01       		.byte	0x1
 7748 1326 3B08     		.2byte	0x83b
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 241


 7749 1328 CF050000 		.4byte	0x5cf
 7750 132c AB080000 		.4byte	.LLST62
 7751 1330 1A       		.uleb128 0x1a
 7752 1331 B10F0000 		.4byte	.LASF152
 7753 1335 01       		.byte	0x1
 7754 1336 3C08     		.2byte	0x83c
 7755 1338 35010000 		.4byte	0x135
 7756 133c ED080000 		.4byte	.LLST63
 7757 1340 2A       		.uleb128 0x2a
 7758 1341 8B040000 		.4byte	0x48b
 7759 1345 08000000 		.4byte	.LBB131
 7760 1349 12000000 		.4byte	.LBE131-.LBB131
 7761 134d 01       		.byte	0x1
 7762 134e 4008     		.2byte	0x840
 7763 1350 64130000 		.4byte	0x1364
 7764 1354 1C       		.uleb128 0x1c
 7765 1355 08000000 		.4byte	.LBB132
 7766 1359 12000000 		.4byte	.LBE132-.LBB132
 7767 135d 1D       		.uleb128 0x1d
 7768 135e 97040000 		.4byte	0x497
 7769 1362 00       		.byte	0
 7770 1363 00       		.byte	0
 7771 1364 28       		.uleb128 0x28
 7772 1365 9C000000 		.4byte	.LBB133
 7773 1369 22000000 		.4byte	.LBE133-.LBB133
 7774 136d 8B130000 		.4byte	0x138b
 7775 1371 1A       		.uleb128 0x1a
 7776 1372 AD000000 		.4byte	.LASF153
 7777 1376 01       		.byte	0x1
 7778 1377 7408     		.2byte	0x874
 7779 1379 40010000 		.4byte	0x140
 7780 137d 2F090000 		.4byte	.LLST64
 7781 1381 1F       		.uleb128 0x1f
 7782 1382 A8000000 		.4byte	.LVL213
 7783 1386 22120000 		.4byte	0x1222
 7784 138a 00       		.byte	0
 7785 138b 1F       		.uleb128 0x1f
 7786 138c 20000000 		.4byte	.LVL203
 7787 1390 A6280000 		.4byte	0x28a6
 7788 1394 25       		.uleb128 0x25
 7789 1395 4E000000 		.4byte	.LVL206
 7790 1399 C8280000 		.4byte	0x28c8
 7791 139d A8130000 		.4byte	0x13a8
 7792 13a1 21       		.uleb128 0x21
 7793 13a2 01       		.uleb128 0x1
 7794 13a3 50       		.byte	0x50
 7795 13a4 02       		.uleb128 0x2
 7796 13a5 74       		.byte	0x74
 7797 13a6 18       		.sleb128 24
 7798 13a7 00       		.byte	0
 7799 13a8 25       		.uleb128 0x25
 7800 13a9 56000000 		.4byte	.LVL207
 7801 13ad C8280000 		.4byte	0x28c8
 7802 13b1 BC130000 		.4byte	0x13bc
 7803 13b5 21       		.uleb128 0x21
 7804 13b6 01       		.uleb128 0x1
 7805 13b7 50       		.byte	0x50
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 242


 7806 13b8 02       		.uleb128 0x2
 7807 13b9 76       		.byte	0x76
 7808 13ba 00       		.sleb128 0
 7809 13bb 00       		.byte	0
 7810 13bc 25       		.uleb128 0x25
 7811 13bd 78000000 		.4byte	.LVL208
 7812 13c1 B1280000 		.4byte	0x28b1
 7813 13c5 D0130000 		.4byte	0x13d0
 7814 13c9 21       		.uleb128 0x21
 7815 13ca 01       		.uleb128 0x1
 7816 13cb 51       		.byte	0x51
 7817 13cc 02       		.uleb128 0x2
 7818 13cd 76       		.byte	0x76
 7819 13ce 00       		.sleb128 0
 7820 13cf 00       		.byte	0
 7821 13d0 1F       		.uleb128 0x1f
 7822 13d1 9C000000 		.4byte	.LVL211
 7823 13d5 A8050000 		.4byte	0x5a8
 7824 13d9 1F       		.uleb128 0x1f
 7825 13da E4000000 		.4byte	.LVL221
 7826 13de BD280000 		.4byte	0x28bd
 7827 13e2 00       		.byte	0
 7828 13e3 29       		.uleb128 0x29
 7829 13e4 EF0E0000 		.4byte	.LASF154
 7830 13e8 01       		.byte	0x1
 7831 13e9 B404     		.2byte	0x4b4
 7832 13eb 00000000 		.4byte	.LFB141
 7833 13ef AC000000 		.4byte	.LFE141-.LFB141
 7834 13f3 01       		.uleb128 0x1
 7835 13f4 9C       		.byte	0x9c
 7836 13f5 EF140000 		.4byte	0x14ef
 7837 13f9 19       		.uleb128 0x19
 7838 13fa 150D0000 		.4byte	.LASF155
 7839 13fe 01       		.byte	0x1
 7840 13ff B404     		.2byte	0x4b4
 7841 1401 F5140000 		.4byte	0x14f5
 7842 1405 65090000 		.4byte	.LLST65
 7843 1409 19       		.uleb128 0x19
 7844 140a 79100000 		.4byte	.LASF156
 7845 140e 01       		.byte	0x1
 7846 140f B404     		.2byte	0x4b4
 7847 1411 6E090000 		.4byte	0x96e
 7848 1415 91090000 		.4byte	.LLST66
 7849 1419 1A       		.uleb128 0x1a
 7850 141a A7100000 		.4byte	.LASF117
 7851 141e 01       		.byte	0x1
 7852 141f B604     		.2byte	0x4b6
 7853 1421 4B010000 		.4byte	0x14b
 7854 1425 BD090000 		.4byte	.LLST67
 7855 1429 23       		.uleb128 0x23
 7856 142a B10F0000 		.4byte	.LASF152
 7857 142e 01       		.byte	0x1
 7858 142f B704     		.2byte	0x4b7
 7859 1431 35010000 		.4byte	0x135
 7860 1435 01       		.uleb128 0x1
 7861 1436 50       		.byte	0x50
 7862 1437 1A       		.uleb128 0x1a
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 243


 7863 1438 B40A0000 		.4byte	.LASF157
 7864 143c 01       		.byte	0x1
 7865 143d B704     		.2byte	0x4b7
 7866 143f 35010000 		.4byte	0x135
 7867 1443 D0090000 		.4byte	.LLST68
 7868 1447 2A       		.uleb128 0x2a
 7869 1448 8B040000 		.4byte	0x48b
 7870 144c 04000000 		.4byte	.LBB134
 7871 1450 14000000 		.4byte	.LBE134-.LBB134
 7872 1454 01       		.byte	0x1
 7873 1455 B904     		.2byte	0x4b9
 7874 1457 6B140000 		.4byte	0x146b
 7875 145b 1C       		.uleb128 0x1c
 7876 145c 04000000 		.4byte	.LBB135
 7877 1460 14000000 		.4byte	.LBE135-.LBB135
 7878 1464 1D       		.uleb128 0x1d
 7879 1465 97040000 		.4byte	0x497
 7880 1469 00       		.byte	0
 7881 146a 00       		.byte	0
 7882 146b 2A       		.uleb128 0x2a
 7883 146c 8B040000 		.4byte	0x48b
 7884 1470 1A000000 		.4byte	.LBB136
 7885 1474 12000000 		.4byte	.LBE136-.LBB136
 7886 1478 01       		.byte	0x1
 7887 1479 BA04     		.2byte	0x4ba
 7888 147b 8F140000 		.4byte	0x148f
 7889 147f 1C       		.uleb128 0x1c
 7890 1480 1A000000 		.4byte	.LBB137
 7891 1484 12000000 		.4byte	.LBE137-.LBB137
 7892 1488 1D       		.uleb128 0x1d
 7893 1489 97040000 		.4byte	0x497
 7894 148d 00       		.byte	0
 7895 148e 00       		.byte	0
 7896 148f 2A       		.uleb128 0x2a
 7897 1490 8B040000 		.4byte	0x48b
 7898 1494 34000000 		.4byte	.LBB138
 7899 1498 14000000 		.4byte	.LBE138-.LBB138
 7900 149c 01       		.byte	0x1
 7901 149d BB04     		.2byte	0x4bb
 7902 149f B3140000 		.4byte	0x14b3
 7903 14a3 1C       		.uleb128 0x1c
 7904 14a4 34000000 		.4byte	.LBB139
 7905 14a8 14000000 		.4byte	.LBE139-.LBB139
 7906 14ac 1D       		.uleb128 0x1d
 7907 14ad 97040000 		.4byte	0x497
 7908 14b1 00       		.byte	0
 7909 14b2 00       		.byte	0
 7910 14b3 31       		.uleb128 0x31
 7911 14b4 18000000 		.4byte	.Ldebug_ranges0+0x18
 7912 14b8 DC140000 		.4byte	0x14dc
 7913 14bc 1A       		.uleb128 0x1a
 7914 14bd 61050000 		.4byte	.LASF118
 7915 14c1 01       		.byte	0x1
 7916 14c2 C104     		.2byte	0x4c1
 7917 14c4 6E090000 		.4byte	0x96e
 7918 14c8 EF090000 		.4byte	.LLST69
 7919 14cc 20       		.uleb128 0x20
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 244


 7920 14cd 8C000000 		.4byte	.LVL233
 7921 14d1 E0080000 		.4byte	0x8e0
 7922 14d5 21       		.uleb128 0x21
 7923 14d6 01       		.uleb128 0x1
 7924 14d7 51       		.byte	0x51
 7925 14d8 01       		.uleb128 0x1
 7926 14d9 30       		.byte	0x30
 7927 14da 00       		.byte	0
 7928 14db 00       		.byte	0
 7929 14dc 1F       		.uleb128 0x1f
 7930 14dd 4C000000 		.4byte	.LVL228
 7931 14e1 37110000 		.4byte	0x1137
 7932 14e5 1F       		.uleb128 0x1f
 7933 14e6 90000000 		.4byte	.LVL234
 7934 14ea 06130000 		.4byte	0x1306
 7935 14ee 00       		.byte	0
 7936 14ef 06       		.uleb128 0x6
 7937 14f0 04       		.byte	0x4
 7938 14f1 4B010000 		.4byte	0x14b
 7939 14f5 07       		.uleb128 0x7
 7940 14f6 EF140000 		.4byte	0x14ef
 7941 14fa 29       		.uleb128 0x29
 7942 14fb 01070000 		.4byte	.LASF158
 7943 14ff 01       		.byte	0x1
 7944 1500 0805     		.2byte	0x508
 7945 1502 00000000 		.4byte	.LFB142
 7946 1506 50000000 		.4byte	.LFE142-.LFB142
 7947 150a 01       		.uleb128 0x1
 7948 150b 9C       		.byte	0x9c
 7949 150c 80150000 		.4byte	0x1580
 7950 1510 19       		.uleb128 0x19
 7951 1511 660E0000 		.4byte	.LASF159
 7952 1515 01       		.byte	0x1
 7953 1516 0805     		.2byte	0x508
 7954 1518 6E090000 		.4byte	0x96e
 7955 151c 020A0000 		.4byte	.LLST70
 7956 1520 1A       		.uleb128 0x1a
 7957 1521 B10F0000 		.4byte	.LASF152
 7958 1525 01       		.byte	0x1
 7959 1526 0A05     		.2byte	0x50a
 7960 1528 35010000 		.4byte	0x135
 7961 152c 390A0000 		.4byte	.LLST71
 7962 1530 2A       		.uleb128 0x2a
 7963 1531 8B040000 		.4byte	0x48b
 7964 1535 0E000000 		.4byte	.LBB143
 7965 1539 12000000 		.4byte	.LBE143-.LBB143
 7966 153d 01       		.byte	0x1
 7967 153e 0F05     		.2byte	0x50f
 7968 1540 54150000 		.4byte	0x1554
 7969 1544 1C       		.uleb128 0x1c
 7970 1545 0E000000 		.4byte	.LBB144
 7971 1549 12000000 		.4byte	.LBE144-.LBB144
 7972 154d 1D       		.uleb128 0x1d
 7973 154e 97040000 		.4byte	0x497
 7974 1552 00       		.byte	0
 7975 1553 00       		.byte	0
 7976 1554 1F       		.uleb128 0x1f
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 245


 7977 1555 24000000 		.4byte	.LVL239
 7978 1559 37110000 		.4byte	0x1137
 7979 155d 25       		.uleb128 0x25
 7980 155e 2C000000 		.4byte	.LVL240
 7981 1562 E0080000 		.4byte	0x8e0
 7982 1566 76150000 		.4byte	0x1576
 7983 156a 21       		.uleb128 0x21
 7984 156b 01       		.uleb128 0x1
 7985 156c 50       		.byte	0x50
 7986 156d 02       		.uleb128 0x2
 7987 156e 74       		.byte	0x74
 7988 156f 00       		.sleb128 0
 7989 1570 21       		.uleb128 0x21
 7990 1571 01       		.uleb128 0x1
 7991 1572 51       		.byte	0x51
 7992 1573 01       		.uleb128 0x1
 7993 1574 30       		.byte	0x30
 7994 1575 00       		.byte	0
 7995 1576 1F       		.uleb128 0x1f
 7996 1577 30000000 		.4byte	.LVL241
 7997 157b 06130000 		.4byte	0x1306
 7998 157f 00       		.byte	0
 7999 1580 29       		.uleb128 0x29
 8000 1581 EA0A0000 		.4byte	.LASF160
 8001 1585 01       		.byte	0x1
 8002 1586 230B     		.2byte	0xb23
 8003 1588 00000000 		.4byte	.LFB161
 8004 158c C8000000 		.4byte	.LFE161-.LFB161
 8005 1590 01       		.uleb128 0x1
 8006 1591 9C       		.byte	0x9c
 8007 1592 2F160000 		.4byte	0x162f
 8008 1596 28       		.uleb128 0x28
 8009 1597 1C000000 		.4byte	.LBB145
 8010 159b 36000000 		.4byte	.LBE145-.LBB145
 8011 159f CE150000 		.4byte	0x15ce
 8012 15a3 1A       		.uleb128 0x1a
 8013 15a4 3E0E0000 		.4byte	.LASF161
 8014 15a8 01       		.byte	0x1
 8015 15a9 4D0B     		.2byte	0xb4d
 8016 15ab 35160000 		.4byte	0x1635
 8017 15af 6F0A0000 		.4byte	.LLST72
 8018 15b3 32       		.uleb128 0x32
 8019 15b4 65090000 		.4byte	.LASF162
 8020 15b8 01       		.byte	0x1
 8021 15b9 4E0B     		.2byte	0xb4e
 8022 15bb 25070000 		.4byte	0x725
 8023 15bf A5CB96AD 		.sleb128 -1515870811
 8023      7A
 8024 15c4 1F       		.uleb128 0x1f
 8025 15c5 52000000 		.4byte	.LVL246
 8026 15c9 2E290000 		.4byte	0x292e
 8027 15cd 00       		.byte	0
 8028 15ce 1C       		.uleb128 0x1c
 8029 15cf 52000000 		.4byte	.LBB146
 8030 15d3 76000000 		.4byte	.LBE146-.LBB146
 8031 15d7 1A       		.uleb128 0x1a
 8032 15d8 E10E0000 		.4byte	.LASF163
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 246


 8033 15dc 01       		.byte	0x1
 8034 15dd 5B0B     		.2byte	0xb5b
 8035 15df 40010000 		.4byte	0x140
 8036 15e3 820A0000 		.4byte	.LLST73
 8037 15e7 2A       		.uleb128 0x2a
 8038 15e8 8B040000 		.4byte	0x48b
 8039 15ec 5C000000 		.4byte	.LBB147
 8040 15f0 12000000 		.4byte	.LBE147-.LBB147
 8041 15f4 01       		.byte	0x1
 8042 15f5 5B0B     		.2byte	0xb5b
 8043 15f7 0B160000 		.4byte	0x160b
 8044 15fb 1C       		.uleb128 0x1c
 8045 15fc 5C000000 		.4byte	.LBB148
 8046 1600 12000000 		.4byte	.LBE148-.LBB148
 8047 1604 1D       		.uleb128 0x1d
 8048 1605 97040000 		.4byte	0x497
 8049 1609 00       		.byte	0
 8050 160a 00       		.byte	0
 8051 160b 1C       		.uleb128 0x1c
 8052 160c 80000000 		.4byte	.LBB149
 8053 1610 3E000000 		.4byte	.LBE149-.LBB149
 8054 1614 23       		.uleb128 0x23
 8055 1615 76000000 		.4byte	.LASF164
 8056 1619 01       		.byte	0x1
 8057 161a 5B0B     		.2byte	0xb5b
 8058 161c 3A160000 		.4byte	0x163a
 8059 1620 0B       		.uleb128 0xb
 8060 1621 73       		.byte	0x73
 8061 1622 00       		.sleb128 0
 8062 1623 44       		.byte	0x44
 8063 1624 1E       		.byte	0x1e
 8064 1625 03       		.byte	0x3
 8065 1626 30000000 		.4byte	pxReadyTasksLists
 8066 162a 22       		.byte	0x22
 8067 162b 9F       		.byte	0x9f
 8068 162c 00       		.byte	0
 8069 162d 00       		.byte	0
 8070 162e 00       		.byte	0
 8071 162f 06       		.uleb128 0x6
 8072 1630 04       		.byte	0x4
 8073 1631 25070000 		.4byte	0x725
 8074 1635 07       		.uleb128 0x7
 8075 1636 2F160000 		.4byte	0x162f
 8076 163a 07       		.uleb128 0x7
 8077 163b 8C0C0000 		.4byte	0xc8c
 8078 163f 29       		.uleb128 0x29
 8079 1640 650F0000 		.4byte	.LASF165
 8080 1644 01       		.byte	0x1
 8081 1645 5E06     		.2byte	0x65e
 8082 1647 00000000 		.4byte	.LFB147
 8083 164b B8000000 		.4byte	.LFE147-.LFB147
 8084 164f 01       		.uleb128 0x1
 8085 1650 9C       		.byte	0x9c
 8086 1651 15170000 		.4byte	0x1715
 8087 1655 19       		.uleb128 0x19
 8088 1656 C20C0000 		.4byte	.LASF166
 8089 165a 01       		.byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 247


 8090 165b 5E06     		.2byte	0x65e
 8091 165d 43020000 		.4byte	0x243
 8092 1661 A00A0000 		.4byte	.LLST74
 8093 1665 1A       		.uleb128 0x1a
 8094 1666 C2100000 		.4byte	.LASF94
 8095 166a 01       		.byte	0x1
 8096 166b 6006     		.2byte	0x660
 8097 166d CF050000 		.4byte	0x5cf
 8098 1671 BE0A0000 		.4byte	.LLST75
 8099 1675 2A       		.uleb128 0x2a
 8100 1676 8B040000 		.4byte	0x48b
 8101 167a 6E000000 		.4byte	.LBB150
 8102 167e 12000000 		.4byte	.LBE150-.LBB150
 8103 1682 01       		.byte	0x1
 8104 1683 A206     		.2byte	0x6a2
 8105 1685 99160000 		.4byte	0x1699
 8106 1689 1C       		.uleb128 0x1c
 8107 168a 6E000000 		.4byte	.LBB151
 8108 168e 12000000 		.4byte	.LBE151-.LBB151
 8109 1692 1D       		.uleb128 0x1d
 8110 1693 97040000 		.4byte	0x497
 8111 1697 00       		.byte	0
 8112 1698 00       		.byte	0
 8113 1699 1F       		.uleb128 0x1f
 8114 169a 08000000 		.4byte	.LVL253
 8115 169e A6280000 		.4byte	0x28a6
 8116 16a2 25       		.uleb128 0x25
 8117 16a3 18000000 		.4byte	.LVL255
 8118 16a7 C8280000 		.4byte	0x28c8
 8119 16ab B6160000 		.4byte	0x16b6
 8120 16af 21       		.uleb128 0x21
 8121 16b0 01       		.uleb128 0x1
 8122 16b1 50       		.byte	0x50
 8123 16b2 02       		.uleb128 0x2
 8124 16b3 75       		.byte	0x75
 8125 16b4 00       		.sleb128 0
 8126 16b5 00       		.byte	0
 8127 16b6 25       		.uleb128 0x25
 8128 16b7 24000000 		.4byte	.LVL256
 8129 16bb C8280000 		.4byte	0x28c8
 8130 16bf CA160000 		.4byte	0x16ca
 8131 16c3 21       		.uleb128 0x21
 8132 16c4 01       		.uleb128 0x1
 8133 16c5 50       		.byte	0x50
 8134 16c6 02       		.uleb128 0x2
 8135 16c7 74       		.byte	0x74
 8136 16c8 18       		.sleb128 24
 8137 16c9 00       		.byte	0
 8138 16ca 25       		.uleb128 0x25
 8139 16cb 2C000000 		.4byte	.LVL257
 8140 16cf B1280000 		.4byte	0x28b1
 8141 16d3 E7160000 		.4byte	0x16e7
 8142 16d7 21       		.uleb128 0x21
 8143 16d8 01       		.uleb128 0x1
 8144 16d9 50       		.byte	0x50
 8145 16da 05       		.uleb128 0x5
 8146 16db 03       		.byte	0x3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 248


 8147 16dc 00000000 		.4byte	.LANCHOR0
 8148 16e0 21       		.uleb128 0x21
 8149 16e1 01       		.uleb128 0x1
 8150 16e2 51       		.byte	0x51
 8151 16e3 02       		.uleb128 0x2
 8152 16e4 75       		.byte	0x75
 8153 16e5 00       		.sleb128 0
 8154 16e6 00       		.byte	0
 8155 16e7 1F       		.uleb128 0x1f
 8156 16e8 40000000 		.4byte	.LVL258
 8157 16ec BD280000 		.4byte	0x28bd
 8158 16f0 1F       		.uleb128 0x1f
 8159 16f1 4C000000 		.4byte	.LVL259
 8160 16f5 A6280000 		.4byte	0x28a6
 8161 16f9 1F       		.uleb128 0x1f
 8162 16fa 50000000 		.4byte	.LVL260
 8163 16fe A8050000 		.4byte	0x5a8
 8164 1702 1F       		.uleb128 0x1f
 8165 1703 54000000 		.4byte	.LVL261
 8166 1707 BD280000 		.4byte	0x28bd
 8167 170b 1F       		.uleb128 0x1f
 8168 170c AC000000 		.4byte	.LVL265
 8169 1710 80150000 		.4byte	0x1580
 8170 1714 00       		.byte	0
 8171 1715 29       		.uleb128 0x29
 8172 1716 370B0000 		.4byte	.LASF167
 8173 171a 01       		.byte	0x1
 8174 171b 690B     		.2byte	0xb69
 8175 171d 00000000 		.4byte	.LFB162
 8176 1721 34000000 		.4byte	.LFE162-.LFB162
 8177 1725 01       		.uleb128 0x1
 8178 1726 9C       		.byte	0x9c
 8179 1727 8E170000 		.4byte	0x178e
 8180 172b 19       		.uleb128 0x19
 8181 172c 46010000 		.4byte	.LASF168
 8182 1730 01       		.byte	0x1
 8183 1731 690B     		.2byte	0xb69
 8184 1733 3A160000 		.4byte	0x163a
 8185 1737 D10A0000 		.4byte	.LLST76
 8186 173b 19       		.uleb128 0x19
 8187 173c 3A0F0000 		.4byte	.LASF115
 8188 1740 01       		.byte	0x1
 8189 1741 690B     		.2byte	0xb69
 8190 1743 6E090000 		.4byte	0x96e
 8191 1747 F20A0000 		.4byte	.LLST77
 8192 174b 2A       		.uleb128 0x2a
 8193 174c 8B040000 		.4byte	0x48b
 8194 1750 02000000 		.4byte	.LBB152
 8195 1754 12000000 		.4byte	.LBE152-.LBB152
 8196 1758 01       		.byte	0x1
 8197 1759 6B0B     		.2byte	0xb6b
 8198 175b 6F170000 		.4byte	0x176f
 8199 175f 1C       		.uleb128 0x1c
 8200 1760 02000000 		.4byte	.LBB153
 8201 1764 12000000 		.4byte	.LBE153-.LBB153
 8202 1768 1D       		.uleb128 0x1d
 8203 1769 97040000 		.4byte	0x497
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 249


 8204 176d 00       		.byte	0
 8205 176e 00       		.byte	0
 8206 176f 1F       		.uleb128 0x1f
 8207 1770 24000000 		.4byte	.LVL270
 8208 1774 D4280000 		.4byte	0x28d4
 8209 1778 20       		.uleb128 0x20
 8210 1779 2C000000 		.4byte	.LVL271
 8211 177d E0080000 		.4byte	0x8e0
 8212 1781 21       		.uleb128 0x21
 8213 1782 01       		.uleb128 0x1
 8214 1783 50       		.byte	0x50
 8215 1784 02       		.uleb128 0x2
 8216 1785 74       		.byte	0x74
 8217 1786 00       		.sleb128 0
 8218 1787 21       		.uleb128 0x21
 8219 1788 01       		.uleb128 0x1
 8220 1789 51       		.byte	0x51
 8221 178a 01       		.uleb128 0x1
 8222 178b 31       		.byte	0x31
 8223 178c 00       		.byte	0
 8224 178d 00       		.byte	0
 8225 178e 29       		.uleb128 0x29
 8226 178f 7F0E0000 		.4byte	.LASF169
 8227 1793 01       		.byte	0x1
 8228 1794 7A0B     		.2byte	0xb7a
 8229 1796 00000000 		.4byte	.LFB163
 8230 179a 5C000000 		.4byte	.LFE163-.LFB163
 8231 179e 01       		.uleb128 0x1
 8232 179f 9C       		.byte	0x9c
 8233 17a0 47180000 		.4byte	0x1847
 8234 17a4 19       		.uleb128 0x19
 8235 17a5 46010000 		.4byte	.LASF168
 8236 17a9 01       		.byte	0x1
 8237 17aa 7A0B     		.2byte	0xb7a
 8238 17ac 8C0C0000 		.4byte	0xc8c
 8239 17b0 1E0B0000 		.4byte	.LLST78
 8240 17b4 19       		.uleb128 0x19
 8241 17b5 920B0000 		.4byte	.LASF28
 8242 17b9 01       		.byte	0x1
 8243 17ba 7A0B     		.2byte	0xb7a
 8244 17bc 6E090000 		.4byte	0x96e
 8245 17c0 6E0B0000 		.4byte	.LLST79
 8246 17c4 19       		.uleb128 0x19
 8247 17c5 3A0F0000 		.4byte	.LASF115
 8248 17c9 01       		.byte	0x1
 8249 17ca 7A0B     		.2byte	0xb7a
 8250 17cc 6E090000 		.4byte	0x96e
 8251 17d0 9A0B0000 		.4byte	.LLST80
 8252 17d4 2A       		.uleb128 0x2a
 8253 17d5 8B040000 		.4byte	0x48b
 8254 17d9 02000000 		.4byte	.LBB154
 8255 17dd 14000000 		.4byte	.LBE154-.LBB154
 8256 17e1 01       		.byte	0x1
 8257 17e2 7C0B     		.2byte	0xb7c
 8258 17e4 F8170000 		.4byte	0x17f8
 8259 17e8 1C       		.uleb128 0x1c
 8260 17e9 02000000 		.4byte	.LBB155
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 250


 8261 17ed 14000000 		.4byte	.LBE155-.LBB155
 8262 17f1 1D       		.uleb128 0x1d
 8263 17f2 97040000 		.4byte	0x497
 8264 17f6 00       		.byte	0
 8265 17f7 00       		.byte	0
 8266 17f8 2A       		.uleb128 0x2a
 8267 17f9 8B040000 		.4byte	0x48b
 8268 17fd 1E000000 		.4byte	.LBB156
 8269 1801 12000000 		.4byte	.LBE156-.LBB156
 8270 1805 01       		.byte	0x1
 8271 1806 800B     		.2byte	0xb80
 8272 1808 1C180000 		.4byte	0x181c
 8273 180c 1C       		.uleb128 0x1c
 8274 180d 1E000000 		.4byte	.LBB157
 8275 1811 12000000 		.4byte	.LBE157-.LBB157
 8276 1815 1D       		.uleb128 0x1d
 8277 1816 97040000 		.4byte	0x497
 8278 181a 00       		.byte	0
 8279 181b 00       		.byte	0
 8280 181c 25       		.uleb128 0x25
 8281 181d 4E000000 		.4byte	.LVL282
 8282 1821 B1280000 		.4byte	0x28b1
 8283 1825 31180000 		.4byte	0x1831
 8284 1829 21       		.uleb128 0x21
 8285 182a 01       		.uleb128 0x1
 8286 182b 50       		.byte	0x50
 8287 182c 03       		.uleb128 0x3
 8288 182d F3       		.byte	0xf3
 8289 182e 01       		.uleb128 0x1
 8290 182f 50       		.byte	0x50
 8291 1830 00       		.byte	0
 8292 1831 20       		.uleb128 0x20
 8293 1832 56000000 		.4byte	.LVL283
 8294 1836 E0080000 		.4byte	0x8e0
 8295 183a 21       		.uleb128 0x21
 8296 183b 01       		.uleb128 0x1
 8297 183c 50       		.byte	0x50
 8298 183d 02       		.uleb128 0x2
 8299 183e 74       		.byte	0x74
 8300 183f 00       		.sleb128 0
 8301 1840 21       		.uleb128 0x21
 8302 1841 01       		.uleb128 0x1
 8303 1842 51       		.byte	0x51
 8304 1843 01       		.uleb128 0x1
 8305 1844 31       		.byte	0x31
 8306 1845 00       		.byte	0
 8307 1846 00       		.byte	0
 8308 1847 29       		.uleb128 0x29
 8309 1848 08080000 		.4byte	.LASF170
 8310 184c 01       		.byte	0x1
 8311 184d 940B     		.2byte	0xb94
 8312 184f 00000000 		.4byte	.LFB164
 8313 1853 3C000000 		.4byte	.LFE164-.LFB164
 8314 1857 01       		.uleb128 0x1
 8315 1858 9C       		.byte	0x9c
 8316 1859 D1180000 		.4byte	0x18d1
 8317 185d 19       		.uleb128 0x19
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 251


 8318 185e 46010000 		.4byte	.LASF168
 8319 1862 01       		.byte	0x1
 8320 1863 940B     		.2byte	0xb94
 8321 1865 3A160000 		.4byte	0x163a
 8322 1869 C60B0000 		.4byte	.LLST81
 8323 186d 19       		.uleb128 0x19
 8324 186e 3A0F0000 		.4byte	.LASF115
 8325 1872 01       		.byte	0x1
 8326 1873 940B     		.2byte	0xb94
 8327 1875 4B010000 		.4byte	0x14b
 8328 1879 E70B0000 		.4byte	.LLST82
 8329 187d 19       		.uleb128 0x19
 8330 187e 50060000 		.4byte	.LASF171
 8331 1882 01       		.byte	0x1
 8332 1883 940B     		.2byte	0xb94
 8333 1885 69090000 		.4byte	0x969
 8334 1889 050C0000 		.4byte	.LLST83
 8335 188d 2A       		.uleb128 0x2a
 8336 188e 8B040000 		.4byte	0x48b
 8337 1892 04000000 		.4byte	.LBB158
 8338 1896 16000000 		.4byte	.LBE158-.LBB158
 8339 189a 01       		.byte	0x1
 8340 189b 960B     		.2byte	0xb96
 8341 189d B1180000 		.4byte	0x18b1
 8342 18a1 1C       		.uleb128 0x1c
 8343 18a2 04000000 		.4byte	.LBB159
 8344 18a6 16000000 		.4byte	.LBE159-.LBB159
 8345 18aa 1D       		.uleb128 0x1d
 8346 18ab 97040000 		.4byte	0x497
 8347 18af 00       		.byte	0
 8348 18b0 00       		.byte	0
 8349 18b1 1F       		.uleb128 0x1f
 8350 18b2 26000000 		.4byte	.LVL289
 8351 18b6 B1280000 		.4byte	0x28b1
 8352 18ba 20       		.uleb128 0x20
 8353 18bb 34000000 		.4byte	.LVL291
 8354 18bf E0080000 		.4byte	0x8e0
 8355 18c3 21       		.uleb128 0x21
 8356 18c4 01       		.uleb128 0x1
 8357 18c5 50       		.byte	0x50
 8358 18c6 02       		.uleb128 0x2
 8359 18c7 74       		.byte	0x74
 8360 18c8 00       		.sleb128 0
 8361 18c9 21       		.uleb128 0x21
 8362 18ca 01       		.uleb128 0x1
 8363 18cb 51       		.byte	0x51
 8364 18cc 02       		.uleb128 0x2
 8365 18cd 75       		.byte	0x75
 8366 18ce 00       		.sleb128 0
 8367 18cf 00       		.byte	0
 8368 18d0 00       		.byte	0
 8369 18d1 27       		.uleb128 0x27
 8370 18d2 6C070000 		.4byte	.LASF172
 8371 18d6 01       		.byte	0x1
 8372 18d7 B30B     		.2byte	0xbb3
 8373 18d9 35010000 		.4byte	0x135
 8374 18dd 00000000 		.4byte	.LFB165
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 252


 8375 18e1 88000000 		.4byte	.LFE165-.LFB165
 8376 18e5 01       		.uleb128 0x1
 8377 18e6 9C       		.byte	0x9c
 8378 18e7 95190000 		.4byte	0x1995
 8379 18eb 19       		.uleb128 0x19
 8380 18ec 46010000 		.4byte	.LASF168
 8381 18f0 01       		.byte	0x1
 8382 18f1 B30B     		.2byte	0xbb3
 8383 18f3 A0190000 		.4byte	0x19a0
 8384 18f7 310C0000 		.4byte	.LLST84
 8385 18fb 1A       		.uleb128 0x1a
 8386 18fc 74040000 		.4byte	.LASF173
 8387 1900 01       		.byte	0x1
 8388 1901 B50B     		.2byte	0xbb5
 8389 1903 CF050000 		.4byte	0x5cf
 8390 1907 520C0000 		.4byte	.LLST85
 8391 190b 1A       		.uleb128 0x1a
 8392 190c 870D0000 		.4byte	.LASF93
 8393 1910 01       		.byte	0x1
 8394 1911 B60B     		.2byte	0xbb6
 8395 1913 35010000 		.4byte	0x135
 8396 1917 650C0000 		.4byte	.LLST86
 8397 191b 2A       		.uleb128 0x2a
 8398 191c 8B040000 		.4byte	0x48b
 8399 1920 08000000 		.4byte	.LBB160
 8400 1924 12000000 		.4byte	.LBE160-.LBB160
 8401 1928 01       		.byte	0x1
 8402 1929 C60B     		.2byte	0xbc6
 8403 192b 3F190000 		.4byte	0x193f
 8404 192f 1C       		.uleb128 0x1c
 8405 1930 08000000 		.4byte	.LBB161
 8406 1934 12000000 		.4byte	.LBE161-.LBB161
 8407 1938 1D       		.uleb128 0x1d
 8408 1939 97040000 		.4byte	0x497
 8409 193d 00       		.byte	0
 8410 193e 00       		.byte	0
 8411 193f 25       		.uleb128 0x25
 8412 1940 24000000 		.4byte	.LVL297
 8413 1944 C8280000 		.4byte	0x28c8
 8414 1948 53190000 		.4byte	0x1953
 8415 194c 21       		.uleb128 0x21
 8416 194d 01       		.uleb128 0x1
 8417 194e 50       		.byte	0x50
 8418 194f 02       		.uleb128 0x2
 8419 1950 75       		.byte	0x75
 8420 1951 00       		.sleb128 0
 8421 1952 00       		.byte	0
 8422 1953 25       		.uleb128 0x25
 8423 1954 34000000 		.4byte	.LVL298
 8424 1958 C8280000 		.4byte	0x28c8
 8425 195c 67190000 		.4byte	0x1967
 8426 1960 21       		.uleb128 0x21
 8427 1961 01       		.uleb128 0x1
 8428 1962 50       		.byte	0x50
 8429 1963 02       		.uleb128 0x2
 8430 1964 75       		.byte	0x75
 8431 1965 00       		.sleb128 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 253


 8432 1966 00       		.byte	0
 8433 1967 25       		.uleb128 0x25
 8434 1968 56000000 		.4byte	.LVL299
 8435 196c B1280000 		.4byte	0x28b1
 8436 1970 7B190000 		.4byte	0x197b
 8437 1974 21       		.uleb128 0x21
 8438 1975 01       		.uleb128 0x1
 8439 1976 51       		.byte	0x51
 8440 1977 02       		.uleb128 0x2
 8441 1978 75       		.byte	0x75
 8442 1979 00       		.sleb128 0
 8443 197a 00       		.byte	0
 8444 197b 20       		.uleb128 0x20
 8445 197c 60000000 		.4byte	.LVL300
 8446 1980 B1280000 		.4byte	0x28b1
 8447 1984 21       		.uleb128 0x21
 8448 1985 01       		.uleb128 0x1
 8449 1986 50       		.byte	0x50
 8450 1987 05       		.uleb128 0x5
 8451 1988 03       		.byte	0x3
 8452 1989 14000000 		.4byte	.LANCHOR0+20
 8453 198d 21       		.uleb128 0x21
 8454 198e 01       		.uleb128 0x1
 8455 198f 51       		.byte	0x51
 8456 1990 02       		.uleb128 0x2
 8457 1991 75       		.byte	0x75
 8458 1992 00       		.sleb128 0
 8459 1993 00       		.byte	0
 8460 1994 00       		.byte	0
 8461 1995 06       		.uleb128 0x6
 8462 1996 04       		.byte	0x4
 8463 1997 9B190000 		.4byte	0x199b
 8464 199b 07       		.uleb128 0x7
 8465 199c 38020000 		.4byte	0x238
 8466 19a0 07       		.uleb128 0x7
 8467 19a1 95190000 		.4byte	0x1995
 8468 19a5 29       		.uleb128 0x29
 8469 19a6 31070000 		.4byte	.LASF174
 8470 19aa 01       		.byte	0x1
 8471 19ab F70B     		.2byte	0xbf7
 8472 19ad 00000000 		.4byte	.LFB166
 8473 19b1 84000000 		.4byte	.LFE166-.LFB166
 8474 19b5 01       		.uleb128 0x1
 8475 19b6 9C       		.byte	0x9c
 8476 19b7 611A0000 		.4byte	0x1a61
 8477 19bb 19       		.uleb128 0x19
 8478 19bc 25110000 		.4byte	.LASF175
 8479 19c0 01       		.byte	0x1
 8480 19c1 F70B     		.2byte	0xbf7
 8481 19c3 32020000 		.4byte	0x232
 8482 19c7 840C0000 		.4byte	.LLST87
 8483 19cb 19       		.uleb128 0x19
 8484 19cc 920B0000 		.4byte	.LASF28
 8485 19d0 01       		.byte	0x1
 8486 19d1 F70B     		.2byte	0xbf7
 8487 19d3 6E090000 		.4byte	0x96e
 8488 19d7 A50C0000 		.4byte	.LLST88
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 254


 8489 19db 1A       		.uleb128 0x1a
 8490 19dc 74040000 		.4byte	.LASF173
 8491 19e0 01       		.byte	0x1
 8492 19e1 F90B     		.2byte	0xbf9
 8493 19e3 CF050000 		.4byte	0x5cf
 8494 19e7 C60C0000 		.4byte	.LLST89
 8495 19eb 2A       		.uleb128 0x2a
 8496 19ec 8B040000 		.4byte	0x48b
 8497 19f0 08000000 		.4byte	.LBB162
 8498 19f4 12000000 		.4byte	.LBE162-.LBB162
 8499 19f8 01       		.byte	0x1
 8500 19f9 FD0B     		.2byte	0xbfd
 8501 19fb 0F1A0000 		.4byte	0x1a0f
 8502 19ff 1C       		.uleb128 0x1c
 8503 1a00 08000000 		.4byte	.LBB163
 8504 1a04 12000000 		.4byte	.LBE163-.LBB163
 8505 1a08 1D       		.uleb128 0x1d
 8506 1a09 97040000 		.4byte	0x497
 8507 1a0d 00       		.byte	0
 8508 1a0e 00       		.byte	0
 8509 1a0f 2A       		.uleb128 0x2a
 8510 1a10 8B040000 		.4byte	0x48b
 8511 1a14 26000000 		.4byte	.LBB164
 8512 1a18 12000000 		.4byte	.LBE164-.LBB164
 8513 1a1c 01       		.byte	0x1
 8514 1a1d 050C     		.2byte	0xc05
 8515 1a1f 331A0000 		.4byte	0x1a33
 8516 1a23 1C       		.uleb128 0x1c
 8517 1a24 26000000 		.4byte	.LBB165
 8518 1a28 12000000 		.4byte	.LBE165-.LBB165
 8519 1a2c 1D       		.uleb128 0x1d
 8520 1a2d 97040000 		.4byte	0x497
 8521 1a31 00       		.byte	0
 8522 1a32 00       		.byte	0
 8523 1a33 1F       		.uleb128 0x1f
 8524 1a34 3C000000 		.4byte	.LVL309
 8525 1a38 C8280000 		.4byte	0x28c8
 8526 1a3c 25       		.uleb128 0x25
 8527 1a3d 44000000 		.4byte	.LVL310
 8528 1a41 C8280000 		.4byte	0x28c8
 8529 1a45 501A0000 		.4byte	0x1a50
 8530 1a49 21       		.uleb128 0x21
 8531 1a4a 01       		.uleb128 0x1
 8532 1a4b 50       		.byte	0x50
 8533 1a4c 02       		.uleb128 0x2
 8534 1a4d 76       		.byte	0x76
 8535 1a4e 00       		.sleb128 0
 8536 1a4f 00       		.byte	0
 8537 1a50 20       		.uleb128 0x20
 8538 1a51 6A000000 		.4byte	.LVL311
 8539 1a55 B1280000 		.4byte	0x28b1
 8540 1a59 21       		.uleb128 0x21
 8541 1a5a 01       		.uleb128 0x1
 8542 1a5b 51       		.byte	0x51
 8543 1a5c 02       		.uleb128 0x2
 8544 1a5d 76       		.byte	0x76
 8545 1a5e 00       		.sleb128 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 255


 8546 1a5f 00       		.byte	0
 8547 1a60 00       		.byte	0
 8548 1a61 29       		.uleb128 0x29
 8549 1a62 4C050000 		.4byte	.LASF176
 8550 1a66 01       		.byte	0x1
 8551 1a67 190C     		.2byte	0xc19
 8552 1a69 00000000 		.4byte	.LFB167
 8553 1a6d 34000000 		.4byte	.LFE167-.LFB167
 8554 1a71 01       		.uleb128 0x1
 8555 1a72 9C       		.byte	0x9c
 8556 1a73 BE1A0000 		.4byte	0x1abe
 8557 1a77 19       		.uleb128 0x19
 8558 1a78 A5090000 		.4byte	.LASF177
 8559 1a7c 01       		.byte	0x1
 8560 1a7d 190C     		.2byte	0xc19
 8561 1a7f C41A0000 		.4byte	0x1ac4
 8562 1a83 D90C0000 		.4byte	.LLST90
 8563 1a87 2A       		.uleb128 0x2a
 8564 1a88 8B040000 		.4byte	0x48b
 8565 1a8c 02000000 		.4byte	.LBB166
 8566 1a90 12000000 		.4byte	.LBE166-.LBB166
 8567 1a94 01       		.byte	0x1
 8568 1a95 1B0C     		.2byte	0xc1b
 8569 1a97 AB1A0000 		.4byte	0x1aab
 8570 1a9b 1C       		.uleb128 0x1c
 8571 1a9c 02000000 		.4byte	.LBB167
 8572 1aa0 12000000 		.4byte	.LBE167-.LBB167
 8573 1aa4 1D       		.uleb128 0x1d
 8574 1aa5 97040000 		.4byte	0x497
 8575 1aa9 00       		.byte	0
 8576 1aaa 00       		.byte	0
 8577 1aab 1F       		.uleb128 0x1f
 8578 1aac 1C000000 		.4byte	.LVL315
 8579 1ab0 A6280000 		.4byte	0x28a6
 8580 1ab4 1F       		.uleb128 0x1f
 8581 1ab5 2E000000 		.4byte	.LVL316
 8582 1ab9 BD280000 		.4byte	0x28bd
 8583 1abd 00       		.byte	0
 8584 1abe 06       		.uleb128 0x6
 8585 1abf 04       		.byte	0x4
 8586 1ac0 E5020000 		.4byte	0x2e5
 8587 1ac4 07       		.uleb128 0x7
 8588 1ac5 BE1A0000 		.4byte	0x1abe
 8589 1ac9 29       		.uleb128 0x29
 8590 1aca E7090000 		.4byte	.LASF178
 8591 1ace 01       		.byte	0x1
 8592 1acf 250C     		.2byte	0xc25
 8593 1ad1 00000000 		.4byte	.LFB168
 8594 1ad5 14000000 		.4byte	.LFE168-.LFB168
 8595 1ad9 01       		.uleb128 0x1
 8596 1ada 9C       		.byte	0x9c
 8597 1adb EE1A0000 		.4byte	0x1aee
 8598 1adf 22       		.uleb128 0x22
 8599 1ae0 A5090000 		.4byte	.LASF177
 8600 1ae4 01       		.byte	0x1
 8601 1ae5 250C     		.2byte	0xc25
 8602 1ae7 C41A0000 		.4byte	0x1ac4
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 256


 8603 1aeb 01       		.uleb128 0x1
 8604 1aec 50       		.byte	0x50
 8605 1aed 00       		.byte	0
 8606 1aee 27       		.uleb128 0x27
 8607 1aef D10C0000 		.4byte	.LASF179
 8608 1af3 01       		.byte	0x1
 8609 1af4 2D0C     		.2byte	0xc2d
 8610 1af6 35010000 		.4byte	0x135
 8611 1afa 00000000 		.4byte	.LFB169
 8612 1afe 80000000 		.4byte	.LFE169-.LFB169
 8613 1b02 01       		.uleb128 0x1
 8614 1b03 9C       		.byte	0x9c
 8615 1b04 D11B0000 		.4byte	0x1bd1
 8616 1b08 19       		.uleb128 0x19
 8617 1b09 A5090000 		.4byte	.LASF177
 8618 1b0d 01       		.byte	0x1
 8619 1b0e 2D0C     		.2byte	0xc2d
 8620 1b10 C41A0000 		.4byte	0x1ac4
 8621 1b14 050D0000 		.4byte	.LLST91
 8622 1b18 19       		.uleb128 0x19
 8623 1b19 32060000 		.4byte	.LASF180
 8624 1b1d 01       		.byte	0x1
 8625 1b1e 2D0C     		.2byte	0xc2d
 8626 1b20 F5140000 		.4byte	0x14f5
 8627 1b24 310D0000 		.4byte	.LLST92
 8628 1b28 1A       		.uleb128 0x1a
 8629 1b29 870D0000 		.4byte	.LASF93
 8630 1b2d 01       		.byte	0x1
 8631 1b2e 2F0C     		.2byte	0xc2f
 8632 1b30 35010000 		.4byte	0x135
 8633 1b34 A80D0000 		.4byte	.LLST93
 8634 1b38 2A       		.uleb128 0x2a
 8635 1b39 8B040000 		.4byte	0x48b
 8636 1b3d 04000000 		.4byte	.LBB168
 8637 1b41 14000000 		.4byte	.LBE168-.LBB168
 8638 1b45 01       		.byte	0x1
 8639 1b46 310C     		.2byte	0xc31
 8640 1b48 5C1B0000 		.4byte	0x1b5c
 8641 1b4c 1C       		.uleb128 0x1c
 8642 1b4d 04000000 		.4byte	.LBB169
 8643 1b51 14000000 		.4byte	.LBE169-.LBB169
 8644 1b55 1D       		.uleb128 0x1d
 8645 1b56 97040000 		.4byte	0x497
 8646 1b5a 00       		.byte	0
 8647 1b5b 00       		.byte	0
 8648 1b5c 2A       		.uleb128 0x2a
 8649 1b5d 8B040000 		.4byte	0x48b
 8650 1b61 1A000000 		.4byte	.LBB170
 8651 1b65 14000000 		.4byte	.LBE170-.LBB170
 8652 1b69 01       		.byte	0x1
 8653 1b6a 320C     		.2byte	0xc32
 8654 1b6c 801B0000 		.4byte	0x1b80
 8655 1b70 1C       		.uleb128 0x1c
 8656 1b71 1A000000 		.4byte	.LBB171
 8657 1b75 14000000 		.4byte	.LBE171-.LBB171
 8658 1b79 1D       		.uleb128 0x1d
 8659 1b7a 97040000 		.4byte	0x497
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 257


 8660 1b7e 00       		.byte	0
 8661 1b7f 00       		.byte	0
 8662 1b80 28       		.uleb128 0x28
 8663 1b81 32000000 		.4byte	.LBB172
 8664 1b85 42000000 		.4byte	.LBE172-.LBB172
 8665 1b89 BE1B0000 		.4byte	0x1bbe
 8666 1b8d 1A       		.uleb128 0x1a
 8667 1b8e 61050000 		.4byte	.LASF118
 8668 1b92 01       		.byte	0x1
 8669 1b93 370C     		.2byte	0xc37
 8670 1b95 6E090000 		.4byte	0x96e
 8671 1b99 DE0D0000 		.4byte	.LLST94
 8672 1b9d 1A       		.uleb128 0x1a
 8673 1b9e B9040000 		.4byte	.LASF181
 8674 1ba2 01       		.byte	0x1
 8675 1ba3 380C     		.2byte	0xc38
 8676 1ba5 6E090000 		.4byte	0x96e
 8677 1ba9 FC0D0000 		.4byte	.LLST95
 8678 1bad 20       		.uleb128 0x20
 8679 1bae 62000000 		.4byte	.LVL326
 8680 1bb2 C91A0000 		.4byte	0x1ac9
 8681 1bb6 21       		.uleb128 0x21
 8682 1bb7 01       		.uleb128 0x1
 8683 1bb8 50       		.byte	0x50
 8684 1bb9 02       		.uleb128 0x2
 8685 1bba 75       		.byte	0x75
 8686 1bbb 00       		.sleb128 0
 8687 1bbc 00       		.byte	0
 8688 1bbd 00       		.byte	0
 8689 1bbe 1F       		.uleb128 0x1f
 8690 1bbf 32000000 		.4byte	.LVL322
 8691 1bc3 A6280000 		.4byte	0x28a6
 8692 1bc7 1F       		.uleb128 0x1f
 8693 1bc8 78000000 		.4byte	.LVL335
 8694 1bcc BD280000 		.4byte	0x28bd
 8695 1bd0 00       		.byte	0
 8696 1bd1 2D       		.uleb128 0x2d
 8697 1bd2 980D0000 		.4byte	.LASF183
 8698 1bd6 01       		.byte	0x1
 8699 1bd7 6C0C     		.2byte	0xc6c
 8700 1bd9 00000000 		.4byte	.LFB170
 8701 1bdd 10000000 		.4byte	.LFE170-.LFB170
 8702 1be1 01       		.uleb128 0x1
 8703 1be2 9C       		.byte	0x9c
 8704 1be3 27       		.uleb128 0x27
 8705 1be4 01100000 		.4byte	.LASF184
 8706 1be8 01       		.byte	0x1
 8707 1be9 740C     		.2byte	0xc74
 8708 1beb 40010000 		.4byte	0x140
 8709 1bef 00000000 		.4byte	.LFB171
 8710 1bf3 0A000000 		.4byte	.LFE171-.LFB171
 8711 1bf7 01       		.uleb128 0x1
 8712 1bf8 9C       		.byte	0x9c
 8713 1bf9 2E1C0000 		.4byte	0x1c2e
 8714 1bfd 19       		.uleb128 0x19
 8715 1bfe AE0A0000 		.4byte	.LASF97
 8716 1c02 01       		.byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 258


 8717 1c03 740C     		.2byte	0xc74
 8718 1c05 43020000 		.4byte	0x243
 8719 1c09 1A0E0000 		.4byte	.LLST96
 8720 1c0d 1A       		.uleb128 0x1a
 8721 1c0e 9D030000 		.4byte	.LASF128
 8722 1c12 01       		.byte	0x1
 8723 1c13 760C     		.2byte	0xc76
 8724 1c15 40010000 		.4byte	0x140
 8725 1c19 540E0000 		.4byte	.LLST97
 8726 1c1d 1A       		.uleb128 0x1a
 8727 1c1e C2100000 		.4byte	.LASF94
 8728 1c22 01       		.byte	0x1
 8729 1c23 770C     		.2byte	0xc77
 8730 1c25 CF050000 		.4byte	0x5cf
 8731 1c29 720E0000 		.4byte	.LLST98
 8732 1c2d 00       		.byte	0
 8733 1c2e 29       		.uleb128 0x29
 8734 1c2f 910C0000 		.4byte	.LASF185
 8735 1c33 01       		.byte	0x1
 8736 1c34 8B0C     		.2byte	0xc8b
 8737 1c36 00000000 		.4byte	.LFB172
 8738 1c3a 06000000 		.4byte	.LFE172-.LFB172
 8739 1c3e 01       		.uleb128 0x1
 8740 1c3f 9C       		.byte	0x9c
 8741 1c40 711C0000 		.4byte	0x1c71
 8742 1c44 22       		.uleb128 0x22
 8743 1c45 AE0A0000 		.4byte	.LASF97
 8744 1c49 01       		.byte	0x1
 8745 1c4a 8B0C     		.2byte	0xc8b
 8746 1c4c 43020000 		.4byte	0x243
 8747 1c50 01       		.uleb128 0x1
 8748 1c51 50       		.byte	0x50
 8749 1c52 22       		.uleb128 0x22
 8750 1c53 80110000 		.4byte	.LASF186
 8751 1c57 01       		.byte	0x1
 8752 1c58 8B0C     		.2byte	0xc8b
 8753 1c5a 711C0000 		.4byte	0x1c71
 8754 1c5e 01       		.uleb128 0x1
 8755 1c5f 51       		.byte	0x51
 8756 1c60 1A       		.uleb128 0x1a
 8757 1c61 C2100000 		.4byte	.LASF94
 8758 1c65 01       		.byte	0x1
 8759 1c66 8D0C     		.2byte	0xc8d
 8760 1c68 CF050000 		.4byte	0x5cf
 8761 1c6c 930E0000 		.4byte	.LLST99
 8762 1c70 00       		.byte	0
 8763 1c71 07       		.uleb128 0x7
 8764 1c72 40010000 		.4byte	0x140
 8765 1c76 29       		.uleb128 0x29
 8766 1c77 40100000 		.4byte	.LASF187
 8767 1c7b 01       		.byte	0x1
 8768 1c7c 420D     		.2byte	0xd42
 8769 1c7e 00000000 		.4byte	.LFB174
 8770 1c82 1C000000 		.4byte	.LFE174-.LFB174
 8771 1c86 01       		.uleb128 0x1
 8772 1c87 9C       		.byte	0x9c
 8773 1c88 CB1C0000 		.4byte	0x1ccb
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 259


 8774 1c8c 19       		.uleb128 0x19
 8775 1c8d B7060000 		.4byte	.LASF188
 8776 1c91 01       		.byte	0x1
 8777 1c92 420D     		.2byte	0xd42
 8778 1c94 43020000 		.4byte	0x243
 8779 1c98 A60E0000 		.4byte	.LLST100
 8780 1c9c 19       		.uleb128 0x19
 8781 1c9d 490D0000 		.4byte	.LASF189
 8782 1ca1 01       		.byte	0x1
 8783 1ca2 420D     		.2byte	0xd42
 8784 1ca4 35010000 		.4byte	0x135
 8785 1ca8 B90E0000 		.4byte	.LLST101
 8786 1cac 22       		.uleb128 0x22
 8787 1cad 35110000 		.4byte	.LASF190
 8788 1cb1 01       		.byte	0x1
 8789 1cb2 420D     		.2byte	0xd42
 8790 1cb4 B0000000 		.4byte	0xb0
 8791 1cb8 01       		.uleb128 0x1
 8792 1cb9 52       		.byte	0x52
 8793 1cba 1A       		.uleb128 0x1a
 8794 1cbb C2100000 		.4byte	.LASF94
 8795 1cbf 01       		.byte	0x1
 8796 1cc0 440D     		.2byte	0xd44
 8797 1cc2 CF050000 		.4byte	0x5cf
 8798 1cc6 E70E0000 		.4byte	.LLST102
 8799 1cca 00       		.byte	0
 8800 1ccb 27       		.uleb128 0x27
 8801 1ccc 7C050000 		.4byte	.LASF191
 8802 1cd0 01       		.byte	0x1
 8803 1cd1 520D     		.2byte	0xd52
 8804 1cd3 B0000000 		.4byte	0xb0
 8805 1cd7 00000000 		.4byte	.LFB175
 8806 1cdb 20000000 		.4byte	.LFE175-.LFB175
 8807 1cdf 01       		.uleb128 0x1
 8808 1ce0 9C       		.byte	0x9c
 8809 1ce1 261D0000 		.4byte	0x1d26
 8810 1ce5 19       		.uleb128 0x19
 8811 1ce6 880A0000 		.4byte	.LASF147
 8812 1cea 01       		.byte	0x1
 8813 1ceb 520D     		.2byte	0xd52
 8814 1ced 43020000 		.4byte	0x243
 8815 1cf1 FA0E0000 		.4byte	.LLST103
 8816 1cf5 19       		.uleb128 0x19
 8817 1cf6 490D0000 		.4byte	.LASF189
 8818 1cfa 01       		.byte	0x1
 8819 1cfb 520D     		.2byte	0xd52
 8820 1cfd 35010000 		.4byte	0x135
 8821 1d01 260F0000 		.4byte	.LLST104
 8822 1d05 1A       		.uleb128 0x1a
 8823 1d06 9F050000 		.4byte	.LASF192
 8824 1d0a 01       		.byte	0x1
 8825 1d0b 540D     		.2byte	0xd54
 8826 1d0d B0000000 		.4byte	0xb0
 8827 1d11 510F0000 		.4byte	.LLST105
 8828 1d15 1A       		.uleb128 0x1a
 8829 1d16 C2100000 		.4byte	.LASF94
 8830 1d1a 01       		.byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 260


 8831 1d1b 550D     		.2byte	0xd55
 8832 1d1d CF050000 		.4byte	0x5cf
 8833 1d21 870F0000 		.4byte	.LLST106
 8834 1d25 00       		.byte	0
 8835 1d26 29       		.uleb128 0x29
 8836 1d27 90030000 		.4byte	.LASF193
 8837 1d2b 01       		.byte	0x1
 8838 1d2c B60D     		.2byte	0xdb6
 8839 1d2e 00000000 		.4byte	.LFB178
 8840 1d32 74000000 		.4byte	.LFE178-.LFB178
 8841 1d36 01       		.uleb128 0x1
 8842 1d37 9C       		.byte	0x9c
 8843 1d38 BC1D0000 		.4byte	0x1dbc
 8844 1d3c 19       		.uleb128 0x19
 8845 1d3d AE0A0000 		.4byte	.LASF97
 8846 1d41 01       		.byte	0x1
 8847 1d42 B60D     		.2byte	0xdb6
 8848 1d44 43020000 		.4byte	0x243
 8849 1d48 9A0F0000 		.4byte	.LLST107
 8850 1d4c 19       		.uleb128 0x19
 8851 1d4d 98070000 		.4byte	.LASF194
 8852 1d51 01       		.byte	0x1
 8853 1d52 B60D     		.2byte	0xdb6
 8854 1d54 BC1D0000 		.4byte	0x1dbc
 8855 1d58 AD0F0000 		.4byte	.LLST108
 8856 1d5c 19       		.uleb128 0x19
 8857 1d5d 18060000 		.4byte	.LASF195
 8858 1d61 01       		.byte	0x1
 8859 1d62 B60D     		.2byte	0xdb6
 8860 1d64 35010000 		.4byte	0x135
 8861 1d68 EF0F0000 		.4byte	.LLST109
 8862 1d6c 19       		.uleb128 0x19
 8863 1d6d C90D0000 		.4byte	.LASF196
 8864 1d71 01       		.byte	0x1
 8865 1d72 B60D     		.2byte	0xdb6
 8866 1d74 7F020000 		.4byte	0x27f
 8867 1d78 1B100000 		.4byte	.LLST110
 8868 1d7c 1A       		.uleb128 0x1a
 8869 1d7d C2100000 		.4byte	.LASF94
 8870 1d81 01       		.byte	0x1
 8871 1d82 B80D     		.2byte	0xdb8
 8872 1d84 CF050000 		.4byte	0x5cf
 8873 1d88 6E100000 		.4byte	.LLST111
 8874 1d8c 1F       		.uleb128 0x1f
 8875 1d8d 48000000 		.4byte	.LVL362
 8876 1d91 37110000 		.4byte	0x1137
 8877 1d95 1F       		.uleb128 0x1f
 8878 1d96 54000000 		.4byte	.LVL363
 8879 1d9a 06130000 		.4byte	0x1306
 8880 1d9e 25       		.uleb128 0x25
 8881 1d9f 5C000000 		.4byte	.LVL365
 8882 1da3 FD0B0000 		.4byte	0xbfd
 8883 1da7 B21D0000 		.4byte	0x1db2
 8884 1dab 21       		.uleb128 0x21
 8885 1dac 01       		.uleb128 0x1
 8886 1dad 50       		.byte	0x50
 8887 1dae 02       		.uleb128 0x2
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 261


 8888 1daf 75       		.byte	0x75
 8889 1db0 00       		.sleb128 0
 8890 1db1 00       		.byte	0
 8891 1db2 1F       		.uleb128 0x1f
 8892 1db3 66000000 		.4byte	.LVL366
 8893 1db7 62050000 		.4byte	0x562
 8894 1dbb 00       		.byte	0
 8895 1dbc 06       		.uleb128 0x6
 8896 1dbd 04       		.byte	0x4
 8897 1dbe B0030000 		.4byte	0x3b0
 8898 1dc2 18       		.uleb128 0x18
 8899 1dc3 2E000000 		.4byte	.LASF197
 8900 1dc7 01       		.byte	0x1
 8901 1dc8 160E     		.2byte	0xe16
 8902 1dca 40010000 		.4byte	0x140
 8903 1dce 00000000 		.4byte	.LFB179
 8904 1dd2 5C000000 		.4byte	.LFE179-.LFB179
 8905 1dd6 01       		.uleb128 0x1
 8906 1dd7 9C       		.byte	0x9c
 8907 1dd8 A41E0000 		.4byte	0x1ea4
 8908 1ddc 19       		.uleb128 0x19
 8909 1ddd D00D0000 		.4byte	.LASF198
 8910 1de1 01       		.byte	0x1
 8911 1de2 160E     		.2byte	0xe16
 8912 1de4 BC1D0000 		.4byte	0x1dbc
 8913 1de8 81100000 		.4byte	.LLST112
 8914 1dec 19       		.uleb128 0x19
 8915 1ded 1E110000 		.4byte	.LASF199
 8916 1df1 01       		.byte	0x1
 8917 1df2 160E     		.2byte	0xe16
 8918 1df4 8C0C0000 		.4byte	0xc8c
 8919 1df8 B8100000 		.4byte	.LLST113
 8920 1dfc 19       		.uleb128 0x19
 8921 1dfd C90D0000 		.4byte	.LASF196
 8922 1e01 01       		.byte	0x1
 8923 1e02 160E     		.2byte	0xe16
 8924 1e04 7F020000 		.4byte	0x27f
 8925 1e08 EF100000 		.4byte	.LLST114
 8926 1e0c 1A       		.uleb128 0x1a
 8927 1e0d D4050000 		.4byte	.LASF200
 8928 1e11 01       		.byte	0x1
 8929 1e12 180E     		.2byte	0xe18
 8930 1e14 CF050000 		.4byte	0x5cf
 8931 1e18 29110000 		.4byte	.LLST115
 8932 1e1c 1A       		.uleb128 0x1a
 8933 1e1d DB0F0000 		.4byte	.LASF201
 8934 1e21 01       		.byte	0x1
 8935 1e22 180E     		.2byte	0xe18
 8936 1e24 CF050000 		.4byte	0x5cf
 8937 1e28 3C110000 		.4byte	.LLST116
 8938 1e2c 1A       		.uleb128 0x1a
 8939 1e2d 350A0000 		.4byte	.LASF202
 8940 1e31 01       		.byte	0x1
 8941 1e32 190E     		.2byte	0xe19
 8942 1e34 40010000 		.4byte	0x140
 8943 1e38 4F110000 		.4byte	.LLST117
 8944 1e3c 28       		.uleb128 0x28
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 262


 8945 1e3d 08000000 		.4byte	.LBB173
 8946 1e41 1E000000 		.4byte	.LBE173-.LBB173
 8947 1e45 5A1E0000 		.4byte	0x1e5a
 8948 1e49 1A       		.uleb128 0x1a
 8949 1e4a 76000000 		.4byte	.LASF164
 8950 1e4e 01       		.byte	0x1
 8951 1e4f 1D0E     		.2byte	0xe1d
 8952 1e51 3A160000 		.4byte	0x163a
 8953 1e55 85110000 		.4byte	.LLST118
 8954 1e59 00       		.byte	0
 8955 1e5a 28       		.uleb128 0x28
 8956 1e5b 28000000 		.4byte	.LBB174
 8957 1e5f 12000000 		.4byte	.LBE174-.LBB174
 8958 1e63 781E0000 		.4byte	0x1e78
 8959 1e67 1A       		.uleb128 0x1a
 8960 1e68 76000000 		.4byte	.LASF164
 8961 1e6c 01       		.byte	0x1
 8962 1e6d 250E     		.2byte	0xe25
 8963 1e6f 3A160000 		.4byte	0x163a
 8964 1e73 A3110000 		.4byte	.LLST119
 8965 1e77 00       		.byte	0
 8966 1e78 20       		.uleb128 0x20
 8967 1e79 4C000000 		.4byte	.LVL375
 8968 1e7d 261D0000 		.4byte	0x1d26
 8969 1e81 21       		.uleb128 0x21
 8970 1e82 01       		.uleb128 0x1
 8971 1e83 50       		.byte	0x50
 8972 1e84 02       		.uleb128 0x2
 8973 1e85 76       		.byte	0x76
 8974 1e86 00       		.sleb128 0
 8975 1e87 21       		.uleb128 0x21
 8976 1e88 01       		.uleb128 0x1
 8977 1e89 51       		.byte	0x51
 8978 1e8a 0C       		.uleb128 0xc
 8979 1e8b 74       		.byte	0x74
 8980 1e8c 00       		.sleb128 0
 8981 1e8d 33       		.byte	0x33
 8982 1e8e 24       		.byte	0x24
 8983 1e8f 74       		.byte	0x74
 8984 1e90 00       		.sleb128 0
 8985 1e91 22       		.byte	0x22
 8986 1e92 32       		.byte	0x32
 8987 1e93 24       		.byte	0x24
 8988 1e94 77       		.byte	0x77
 8989 1e95 00       		.sleb128 0
 8990 1e96 22       		.byte	0x22
 8991 1e97 21       		.uleb128 0x21
 8992 1e98 01       		.uleb128 0x1
 8993 1e99 52       		.byte	0x52
 8994 1e9a 01       		.uleb128 0x1
 8995 1e9b 31       		.byte	0x31
 8996 1e9c 21       		.uleb128 0x21
 8997 1e9d 01       		.uleb128 0x1
 8998 1e9e 53       		.byte	0x53
 8999 1e9f 02       		.uleb128 0x2
 9000 1ea0 78       		.byte	0x78
 9001 1ea1 00       		.sleb128 0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 263


 9002 1ea2 00       		.byte	0
 9003 1ea3 00       		.byte	0
 9004 1ea4 27       		.uleb128 0x27
 9005 1ea5 2C090000 		.4byte	.LASF203
 9006 1ea9 01       		.byte	0x1
 9007 1eaa 6909     		.2byte	0x969
 9008 1eac 40010000 		.4byte	0x140
 9009 1eb0 00000000 		.4byte	.LFB159
 9010 1eb4 A4000000 		.4byte	.LFE159-.LFB159
 9011 1eb8 01       		.uleb128 0x1
 9012 1eb9 9C       		.byte	0x9c
 9013 1eba F01F0000 		.4byte	0x1ff0
 9014 1ebe 19       		.uleb128 0x19
 9015 1ebf D00D0000 		.4byte	.LASF198
 9016 1ec3 01       		.byte	0x1
 9017 1ec4 6909     		.2byte	0x969
 9018 1ec6 F01F0000 		.4byte	0x1ff0
 9019 1eca B6110000 		.4byte	.LLST120
 9020 1ece 19       		.uleb128 0x19
 9021 1ecf 130E0000 		.4byte	.LASF204
 9022 1ed3 01       		.byte	0x1
 9023 1ed4 6909     		.2byte	0x969
 9024 1ed6 711C0000 		.4byte	0x1c71
 9025 1eda E2110000 		.4byte	.LLST121
 9026 1ede 19       		.uleb128 0x19
 9027 1edf C6010000 		.4byte	.LASF205
 9028 1ee3 01       		.byte	0x1
 9029 1ee4 6909     		.2byte	0x969
 9030 1ee6 FB1F0000 		.4byte	0x1ffb
 9031 1eea 27120000 		.4byte	.LLST122
 9032 1eee 1A       		.uleb128 0x1a
 9033 1eef 350A0000 		.4byte	.LASF202
 9034 1ef3 01       		.byte	0x1
 9035 1ef4 6B09     		.2byte	0x96b
 9036 1ef6 40010000 		.4byte	0x140
 9037 1efa 53120000 		.4byte	.LLST123
 9038 1efe 1A       		.uleb128 0x1a
 9039 1eff A6080000 		.4byte	.LASF206
 9040 1f03 01       		.byte	0x1
 9041 1f04 6B09     		.2byte	0x96b
 9042 1f06 40010000 		.4byte	0x140
 9043 1f0a 94120000 		.4byte	.LLST124
 9044 1f0e 1F       		.uleb128 0x1f
 9045 1f0f 0C000000 		.4byte	.LVL381
 9046 1f13 37110000 		.4byte	0x1137
 9047 1f17 25       		.uleb128 0x25
 9048 1f18 34000000 		.4byte	.LVL384
 9049 1f1c C21D0000 		.4byte	0x1dc2
 9050 1f20 4D1F0000 		.4byte	0x1f4d
 9051 1f24 21       		.uleb128 0x21
 9052 1f25 01       		.uleb128 0x1
 9053 1f26 50       		.byte	0x50
 9054 1f27 0C       		.uleb128 0xc
 9055 1f28 74       		.byte	0x74
 9056 1f29 00       		.sleb128 0
 9057 1f2a 33       		.byte	0x33
 9058 1f2b 24       		.byte	0x24
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 264


 9059 1f2c 74       		.byte	0x74
 9060 1f2d 00       		.sleb128 0
 9061 1f2e 22       		.byte	0x22
 9062 1f2f 32       		.byte	0x32
 9063 1f30 24       		.byte	0x24
 9064 1f31 77       		.byte	0x77
 9065 1f32 00       		.sleb128 0
 9066 1f33 22       		.byte	0x22
 9067 1f34 21       		.uleb128 0x21
 9068 1f35 01       		.uleb128 0x1
 9069 1f36 51       		.byte	0x51
 9070 1f37 0F       		.uleb128 0xf
 9071 1f38 75       		.byte	0x75
 9072 1f39 00       		.sleb128 0
 9073 1f3a 32       		.byte	0x32
 9074 1f3b 24       		.byte	0x24
 9075 1f3c 75       		.byte	0x75
 9076 1f3d 00       		.sleb128 0
 9077 1f3e 22       		.byte	0x22
 9078 1f3f 32       		.byte	0x32
 9079 1f40 24       		.byte	0x24
 9080 1f41 03       		.byte	0x3
 9081 1f42 30000000 		.4byte	.LANCHOR0+48
 9082 1f46 22       		.byte	0x22
 9083 1f47 21       		.uleb128 0x21
 9084 1f48 01       		.uleb128 0x1
 9085 1f49 52       		.byte	0x52
 9086 1f4a 01       		.uleb128 0x1
 9087 1f4b 31       		.byte	0x31
 9088 1f4c 00       		.byte	0
 9089 1f4d 25       		.uleb128 0x25
 9090 1f4e 4C000000 		.4byte	.LVL387
 9091 1f52 C21D0000 		.4byte	0x1dc2
 9092 1f56 701F0000 		.4byte	0x1f70
 9093 1f5a 21       		.uleb128 0x21
 9094 1f5b 01       		.uleb128 0x1
 9095 1f5c 50       		.byte	0x50
 9096 1f5d 0C       		.uleb128 0xc
 9097 1f5e 74       		.byte	0x74
 9098 1f5f 00       		.sleb128 0
 9099 1f60 33       		.byte	0x33
 9100 1f61 24       		.byte	0x24
 9101 1f62 74       		.byte	0x74
 9102 1f63 00       		.sleb128 0
 9103 1f64 22       		.byte	0x22
 9104 1f65 32       		.byte	0x32
 9105 1f66 24       		.byte	0x24
 9106 1f67 77       		.byte	0x77
 9107 1f68 00       		.sleb128 0
 9108 1f69 22       		.byte	0x22
 9109 1f6a 21       		.uleb128 0x21
 9110 1f6b 01       		.uleb128 0x1
 9111 1f6c 52       		.byte	0x52
 9112 1f6d 01       		.uleb128 0x1
 9113 1f6e 32       		.byte	0x32
 9114 1f6f 00       		.byte	0
 9115 1f70 25       		.uleb128 0x25
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 265


 9116 1f71 60000000 		.4byte	.LVL389
 9117 1f75 C21D0000 		.4byte	0x1dc2
 9118 1f79 931F0000 		.4byte	0x1f93
 9119 1f7d 21       		.uleb128 0x21
 9120 1f7e 01       		.uleb128 0x1
 9121 1f7f 50       		.byte	0x50
 9122 1f80 0C       		.uleb128 0xc
 9123 1f81 74       		.byte	0x74
 9124 1f82 00       		.sleb128 0
 9125 1f83 33       		.byte	0x33
 9126 1f84 24       		.byte	0x24
 9127 1f85 74       		.byte	0x74
 9128 1f86 00       		.sleb128 0
 9129 1f87 22       		.byte	0x22
 9130 1f88 32       		.byte	0x32
 9131 1f89 24       		.byte	0x24
 9132 1f8a 77       		.byte	0x77
 9133 1f8b 00       		.sleb128 0
 9134 1f8c 22       		.byte	0x22
 9135 1f8d 21       		.uleb128 0x21
 9136 1f8e 01       		.uleb128 0x1
 9137 1f8f 52       		.byte	0x52
 9138 1f90 01       		.uleb128 0x1
 9139 1f91 32       		.byte	0x32
 9140 1f92 00       		.byte	0
 9141 1f93 25       		.uleb128 0x25
 9142 1f94 74000000 		.4byte	.LVL391
 9143 1f98 C21D0000 		.4byte	0x1dc2
 9144 1f9c BD1F0000 		.4byte	0x1fbd
 9145 1fa0 21       		.uleb128 0x21
 9146 1fa1 01       		.uleb128 0x1
 9147 1fa2 50       		.byte	0x50
 9148 1fa3 0C       		.uleb128 0xc
 9149 1fa4 74       		.byte	0x74
 9150 1fa5 00       		.sleb128 0
 9151 1fa6 33       		.byte	0x33
 9152 1fa7 24       		.byte	0x24
 9153 1fa8 74       		.byte	0x74
 9154 1fa9 00       		.sleb128 0
 9155 1faa 22       		.byte	0x22
 9156 1fab 32       		.byte	0x32
 9157 1fac 24       		.byte	0x24
 9158 1fad 77       		.byte	0x77
 9159 1fae 00       		.sleb128 0
 9160 1faf 22       		.byte	0x22
 9161 1fb0 21       		.uleb128 0x21
 9162 1fb1 01       		.uleb128 0x1
 9163 1fb2 51       		.byte	0x51
 9164 1fb3 03       		.uleb128 0x3
 9165 1fb4 75       		.byte	0x75
 9166 1fb5 E401     		.sleb128 228
 9167 1fb7 21       		.uleb128 0x21
 9168 1fb8 01       		.uleb128 0x1
 9169 1fb9 52       		.byte	0x52
 9170 1fba 01       		.uleb128 0x1
 9171 1fbb 34       		.byte	0x34
 9172 1fbc 00       		.byte	0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 266


 9173 1fbd 25       		.uleb128 0x25
 9174 1fbe 86000000 		.4byte	.LVL393
 9175 1fc2 C21D0000 		.4byte	0x1dc2
 9176 1fc6 E61F0000 		.4byte	0x1fe6
 9177 1fca 21       		.uleb128 0x21
 9178 1fcb 01       		.uleb128 0x1
 9179 1fcc 50       		.byte	0x50
 9180 1fcd 0C       		.uleb128 0xc
 9181 1fce 74       		.byte	0x74
 9182 1fcf 00       		.sleb128 0
 9183 1fd0 33       		.byte	0x33
 9184 1fd1 24       		.byte	0x24
 9185 1fd2 74       		.byte	0x74
 9186 1fd3 00       		.sleb128 0
 9187 1fd4 22       		.byte	0x22
 9188 1fd5 32       		.byte	0x32
 9189 1fd6 24       		.byte	0x24
 9190 1fd7 77       		.byte	0x77
 9191 1fd8 00       		.sleb128 0
 9192 1fd9 22       		.byte	0x22
 9193 1fda 21       		.uleb128 0x21
 9194 1fdb 01       		.uleb128 0x1
 9195 1fdc 51       		.byte	0x51
 9196 1fdd 02       		.uleb128 0x2
 9197 1fde 75       		.byte	0x75
 9198 1fdf 00       		.sleb128 0
 9199 1fe0 21       		.uleb128 0x21
 9200 1fe1 01       		.uleb128 0x1
 9201 1fe2 52       		.byte	0x52
 9202 1fe3 01       		.uleb128 0x1
 9203 1fe4 33       		.byte	0x33
 9204 1fe5 00       		.byte	0
 9205 1fe6 1F       		.uleb128 0x1f
 9206 1fe7 96000000 		.4byte	.LVL397
 9207 1feb 06130000 		.4byte	0x1306
 9208 1fef 00       		.byte	0
 9209 1ff0 07       		.uleb128 0x7
 9210 1ff1 BC1D0000 		.4byte	0x1dbc
 9211 1ff5 06       		.uleb128 0x6
 9212 1ff6 04       		.byte	0x4
 9213 1ff7 EB000000 		.4byte	0xeb
 9214 1ffb 07       		.uleb128 0x7
 9215 1ffc F51F0000 		.4byte	0x1ff5
 9216 2000 27       		.uleb128 0x27
 9217 2001 C10F0000 		.4byte	.LASF207
 9218 2005 01       		.byte	0x1
 9219 2006 B70E     		.2byte	0xeb7
 9220 2008 43020000 		.4byte	0x243
 9221 200c 00000000 		.4byte	.LFB183
 9222 2010 0C000000 		.4byte	.LFE183-.LFB183
 9223 2014 01       		.uleb128 0x1
 9224 2015 9C       		.byte	0x9c
 9225 2016 29200000 		.4byte	0x2029
 9226 201a 23       		.uleb128 0x23
 9227 201b 870D0000 		.4byte	.LASF93
 9228 201f 01       		.byte	0x1
 9229 2020 B90E     		.2byte	0xeb9
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 267


 9230 2022 43020000 		.4byte	0x243
 9231 2026 01       		.uleb128 0x1
 9232 2027 50       		.byte	0x50
 9233 2028 00       		.byte	0
 9234 2029 27       		.uleb128 0x27
 9235 202a F0000000 		.4byte	.LASF208
 9236 202e 01       		.byte	0x1
 9237 202f C80E     		.2byte	0xec8
 9238 2031 35010000 		.4byte	0x135
 9239 2035 00000000 		.4byte	.LFB184
 9240 2039 20000000 		.4byte	.LFE184-.LFB184
 9241 203d 01       		.uleb128 0x1
 9242 203e 9C       		.byte	0x9c
 9243 203f 52200000 		.4byte	0x2052
 9244 2043 23       		.uleb128 0x23
 9245 2044 870D0000 		.4byte	.LASF93
 9246 2048 01       		.byte	0x1
 9247 2049 CA0E     		.2byte	0xeca
 9248 204b 35010000 		.4byte	0x135
 9249 204f 01       		.uleb128 0x1
 9250 2050 50       		.byte	0x50
 9251 2051 00       		.byte	0
 9252 2052 29       		.uleb128 0x29
 9253 2053 C8100000 		.4byte	.LASF209
 9254 2057 01       		.byte	0x1
 9255 2058 4A10     		.2byte	0x104a
 9256 205a 00000000 		.4byte	.LFB186
 9257 205e D4000000 		.4byte	.LFE186-.LFB186
 9258 2062 01       		.uleb128 0x1
 9259 2063 9C       		.byte	0x9c
 9260 2064 39210000 		.4byte	0x2139
 9261 2068 19       		.uleb128 0x19
 9262 2069 4C020000 		.4byte	.LASF210
 9263 206d 01       		.byte	0x1
 9264 206e 4A10     		.2byte	0x104a
 9265 2070 B2000000 		.4byte	0xb2
 9266 2074 BF120000 		.4byte	.LLST125
 9267 2078 1A       		.uleb128 0x1a
 9268 2079 D00D0000 		.4byte	.LASF198
 9269 207d 01       		.byte	0x1
 9270 207e 4C10     		.2byte	0x104c
 9271 2080 BC1D0000 		.4byte	0x1dbc
 9272 2084 F3120000 		.4byte	.LLST126
 9273 2088 23       		.uleb128 0x23
 9274 2089 130E0000 		.4byte	.LASF204
 9275 208d 01       		.byte	0x1
 9276 208e 4D10     		.2byte	0x104d
 9277 2090 2D020000 		.4byte	0x22d
 9278 2094 02       		.uleb128 0x2
 9279 2095 91       		.byte	0x91
 9280 2096 64       		.sleb128 -28
 9281 2097 33       		.uleb128 0x33
 9282 2098 7800     		.ascii	"x\000"
 9283 209a 01       		.byte	0x1
 9284 209b 4D10     		.2byte	0x104d
 9285 209d 2D020000 		.4byte	0x22d
 9286 20a1 02       		.uleb128 0x2
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 268


 9287 20a2 91       		.byte	0x91
 9288 20a3 60       		.sleb128 -32
 9289 20a4 1A       		.uleb128 0x1a
 9290 20a5 CC050000 		.4byte	.LASF211
 9291 20a9 01       		.byte	0x1
 9292 20aa 4E10     		.2byte	0x104e
 9293 20ac B8000000 		.4byte	0xb8
 9294 20b0 11130000 		.4byte	.LLST127
 9295 20b4 1F       		.uleb128 0x1f
 9296 20b5 20000000 		.4byte	.LVL403
 9297 20b9 F6280000 		.4byte	0x28f6
 9298 20bd 25       		.uleb128 0x25
 9299 20be 2E000000 		.4byte	.LVL404
 9300 20c2 A41E0000 		.4byte	0x1ea4
 9301 20c6 D6200000 		.4byte	0x20d6
 9302 20ca 21       		.uleb128 0x21
 9303 20cb 01       		.uleb128 0x1
 9304 20cc 50       		.byte	0x50
 9305 20cd 02       		.uleb128 0x2
 9306 20ce 74       		.byte	0x74
 9307 20cf 00       		.sleb128 0
 9308 20d0 21       		.uleb128 0x21
 9309 20d1 01       		.uleb128 0x1
 9310 20d2 52       		.byte	0x52
 9311 20d3 01       		.uleb128 0x1
 9312 20d4 30       		.byte	0x30
 9313 20d5 00       		.byte	0
 9314 20d6 25       		.uleb128 0x25
 9315 20d7 78000000 		.4byte	.LVL411
 9316 20db 73090000 		.4byte	0x973
 9317 20df EA200000 		.4byte	0x20ea
 9318 20e3 21       		.uleb128 0x21
 9319 20e4 01       		.uleb128 0x1
 9320 20e5 50       		.byte	0x50
 9321 20e6 02       		.uleb128 0x2
 9322 20e7 75       		.byte	0x75
 9323 20e8 00       		.sleb128 0
 9324 20e9 00       		.byte	0
 9325 20ea 25       		.uleb128 0x25
 9326 20eb AA000000 		.4byte	.LVL413
 9327 20ef 3A290000 		.4byte	0x293a
 9328 20f3 14210000 		.4byte	0x2114
 9329 20f7 21       		.uleb128 0x21
 9330 20f8 01       		.uleb128 0x1
 9331 20f9 50       		.byte	0x50
 9332 20fa 02       		.uleb128 0x2
 9333 20fb 75       		.byte	0x75
 9334 20fc 00       		.sleb128 0
 9335 20fd 21       		.uleb128 0x21
 9336 20fe 01       		.uleb128 0x1
 9337 20ff 51       		.byte	0x51
 9338 2100 05       		.uleb128 0x5
 9339 2101 03       		.byte	0x3
 9340 2102 08000000 		.4byte	.LC1
 9341 2106 21       		.uleb128 0x21
 9342 2107 01       		.uleb128 0x1
 9343 2108 52       		.byte	0x52
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 269


 9344 2109 02       		.uleb128 0x2
 9345 210a 76       		.byte	0x76
 9346 210b 00       		.sleb128 0
 9347 210c 21       		.uleb128 0x21
 9348 210d 02       		.uleb128 0x2
 9349 210e 7D       		.byte	0x7d
 9350 210f 00       		.sleb128 0
 9351 2110 02       		.uleb128 0x2
 9352 2111 77       		.byte	0x77
 9353 2112 00       		.sleb128 0
 9354 2113 00       		.byte	0
 9355 2114 25       		.uleb128 0x25
 9356 2115 B0000000 		.4byte	.LVL414
 9357 2119 EB280000 		.4byte	0x28eb
 9358 211d 28210000 		.4byte	0x2128
 9359 2121 21       		.uleb128 0x21
 9360 2122 01       		.uleb128 0x1
 9361 2123 50       		.byte	0x50
 9362 2124 02       		.uleb128 0x2
 9363 2125 75       		.byte	0x75
 9364 2126 00       		.sleb128 0
 9365 2127 00       		.byte	0
 9366 2128 20       		.uleb128 0x20
 9367 2129 C6000000 		.4byte	.LVL417
 9368 212d 6D280000 		.4byte	0x286d
 9369 2131 21       		.uleb128 0x21
 9370 2132 01       		.uleb128 0x1
 9371 2133 50       		.byte	0x50
 9372 2134 02       		.uleb128 0x2
 9373 2135 74       		.byte	0x74
 9374 2136 00       		.sleb128 0
 9375 2137 00       		.byte	0
 9376 2138 00       		.byte	0
 9377 2139 27       		.uleb128 0x27
 9378 213a 3C0A0000 		.4byte	.LASF212
 9379 213e 01       		.byte	0x1
 9380 213f 2911     		.2byte	0x1129
 9381 2141 4B010000 		.4byte	0x14b
 9382 2145 00000000 		.4byte	.LFB187
 9383 2149 20000000 		.4byte	.LFE187-.LFB187
 9384 214d 01       		.uleb128 0x1
 9385 214e 9C       		.byte	0x9c
 9386 214f 62210000 		.4byte	0x2162
 9387 2153 23       		.uleb128 0x23
 9388 2154 9D030000 		.4byte	.LASF128
 9389 2158 01       		.byte	0x1
 9390 2159 2B11     		.2byte	0x112b
 9391 215b 4B010000 		.4byte	0x14b
 9392 215f 01       		.uleb128 0x1
 9393 2160 50       		.byte	0x50
 9394 2161 00       		.byte	0
 9395 2162 27       		.uleb128 0x27
 9396 2163 F7070000 		.4byte	.LASF213
 9397 2167 01       		.byte	0x1
 9398 2168 4A11     		.2byte	0x114a
 9399 216a EB000000 		.4byte	0xeb
 9400 216e 00000000 		.4byte	.LFB188
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 270


 9401 2172 80000000 		.4byte	.LFE188-.LFB188
 9402 2176 01       		.uleb128 0x1
 9403 2177 9C       		.byte	0x9c
 9404 2178 EA210000 		.4byte	0x21ea
 9405 217c 19       		.uleb128 0x19
 9406 217d 90040000 		.4byte	.LASF214
 9407 2181 01       		.byte	0x1
 9408 2182 4A11     		.2byte	0x114a
 9409 2184 35010000 		.4byte	0x135
 9410 2188 57130000 		.4byte	.LLST128
 9411 218c 19       		.uleb128 0x19
 9412 218d 3A0F0000 		.4byte	.LASF115
 9413 2191 01       		.byte	0x1
 9414 2192 4A11     		.2byte	0x114a
 9415 2194 4B010000 		.4byte	0x14b
 9416 2198 83130000 		.4byte	.LLST129
 9417 219c 1A       		.uleb128 0x1a
 9418 219d 23090000 		.4byte	.LASF215
 9419 21a1 01       		.byte	0x1
 9420 21a2 4C11     		.2byte	0x114c
 9421 21a4 EB000000 		.4byte	0xeb
 9422 21a8 AF130000 		.4byte	.LLST130
 9423 21ac 1F       		.uleb128 0x1f
 9424 21ad 0A000000 		.4byte	.LVL421
 9425 21b1 A6280000 		.4byte	0x28a6
 9426 21b5 25       		.uleb128 0x25
 9427 21b6 2A000000 		.4byte	.LVL422
 9428 21ba E0080000 		.4byte	0x8e0
 9429 21be CE210000 		.4byte	0x21ce
 9430 21c2 21       		.uleb128 0x21
 9431 21c3 01       		.uleb128 0x1
 9432 21c4 50       		.byte	0x50
 9433 21c5 02       		.uleb128 0x2
 9434 21c6 74       		.byte	0x74
 9435 21c7 00       		.sleb128 0
 9436 21c8 21       		.uleb128 0x21
 9437 21c9 01       		.uleb128 0x1
 9438 21ca 51       		.byte	0x51
 9439 21cb 01       		.uleb128 0x1
 9440 21cc 31       		.byte	0x31
 9441 21cd 00       		.byte	0
 9442 21ce 1F       		.uleb128 0x1f
 9443 21cf 3E000000 		.4byte	.LVL423
 9444 21d3 BD280000 		.4byte	0x28bd
 9445 21d7 1F       		.uleb128 0x1f
 9446 21d8 42000000 		.4byte	.LVL424
 9447 21dc A6280000 		.4byte	0x28a6
 9448 21e0 1F       		.uleb128 0x1f
 9449 21e1 74000000 		.4byte	.LVL426
 9450 21e5 BD280000 		.4byte	0x28bd
 9451 21e9 00       		.byte	0
 9452 21ea 27       		.uleb128 0x27
 9453 21eb 37080000 		.4byte	.LASF216
 9454 21ef 01       		.byte	0x1
 9455 21f0 8E11     		.2byte	0x118e
 9456 21f2 35010000 		.4byte	0x135
 9457 21f6 00000000 		.4byte	.LFB189
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 271


 9458 21fa A4000000 		.4byte	.LFE189-.LFB189
 9459 21fe 01       		.uleb128 0x1
 9460 21ff 9C       		.byte	0x9c
 9461 2200 92220000 		.4byte	0x2292
 9462 2204 19       		.uleb128 0x19
 9463 2205 1A050000 		.4byte	.LASF217
 9464 2209 01       		.byte	0x1
 9465 220a 8E11     		.2byte	0x118e
 9466 220c EB000000 		.4byte	0xeb
 9467 2210 CD130000 		.4byte	.LLST131
 9468 2214 19       		.uleb128 0x19
 9469 2215 C7000000 		.4byte	.LASF218
 9470 2219 01       		.byte	0x1
 9471 221a 8E11     		.2byte	0x118e
 9472 221c EB000000 		.4byte	0xeb
 9473 2220 F9130000 		.4byte	.LLST132
 9474 2224 19       		.uleb128 0x19
 9475 2225 720D0000 		.4byte	.LASF219
 9476 2229 01       		.byte	0x1
 9477 222a 8E11     		.2byte	0x118e
 9478 222c F51F0000 		.4byte	0x1ff5
 9479 2230 3E140000 		.4byte	.LLST133
 9480 2234 19       		.uleb128 0x19
 9481 2235 3A0F0000 		.4byte	.LASF115
 9482 2239 01       		.byte	0x1
 9483 223a 8E11     		.2byte	0x118e
 9484 223c 4B010000 		.4byte	0x14b
 9485 2240 83140000 		.4byte	.LLST134
 9486 2244 1A       		.uleb128 0x1a
 9487 2245 870D0000 		.4byte	.LASF93
 9488 2249 01       		.byte	0x1
 9489 224a 9011     		.2byte	0x1190
 9490 224c 35010000 		.4byte	0x135
 9491 2250 AF140000 		.4byte	.LLST135
 9492 2254 1F       		.uleb128 0x1f
 9493 2255 0E000000 		.4byte	.LVL429
 9494 2259 A6280000 		.4byte	0x28a6
 9495 225d 25       		.uleb128 0x25
 9496 225e 40000000 		.4byte	.LVL430
 9497 2262 E0080000 		.4byte	0x8e0
 9498 2266 76220000 		.4byte	0x2276
 9499 226a 21       		.uleb128 0x21
 9500 226b 01       		.uleb128 0x1
 9501 226c 50       		.byte	0x50
 9502 226d 02       		.uleb128 0x2
 9503 226e 76       		.byte	0x76
 9504 226f 00       		.sleb128 0
 9505 2270 21       		.uleb128 0x21
 9506 2271 01       		.uleb128 0x1
 9507 2272 51       		.byte	0x51
 9508 2273 01       		.uleb128 0x1
 9509 2274 31       		.byte	0x31
 9510 2275 00       		.byte	0
 9511 2276 1F       		.uleb128 0x1f
 9512 2277 54000000 		.4byte	.LVL431
 9513 227b BD280000 		.4byte	0x28bd
 9514 227f 1F       		.uleb128 0x1f
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 272


 9515 2280 58000000 		.4byte	.LVL432
 9516 2284 A6280000 		.4byte	0x28a6
 9517 2288 1F       		.uleb128 0x1f
 9518 2289 98000000 		.4byte	.LVL438
 9519 228d BD280000 		.4byte	0x28bd
 9520 2291 00       		.byte	0
 9521 2292 27       		.uleb128 0x27
 9522 2293 5B040000 		.4byte	.LASF220
 9523 2297 01       		.byte	0x1
 9524 2298 DE11     		.2byte	0x11de
 9525 229a 35010000 		.4byte	0x135
 9526 229e 00000000 		.4byte	.LFB190
 9527 22a2 E4000000 		.4byte	.LFE190-.LFB190
 9528 22a6 01       		.uleb128 0x1
 9529 22a7 9C       		.byte	0x9c
 9530 22a8 9F230000 		.4byte	0x239f
 9531 22ac 19       		.uleb128 0x19
 9532 22ad A00A0000 		.4byte	.LASF221
 9533 22b1 01       		.byte	0x1
 9534 22b2 DE11     		.2byte	0x11de
 9535 22b4 43020000 		.4byte	0x243
 9536 22b8 D9140000 		.4byte	.LLST136
 9537 22bc 19       		.uleb128 0x19
 9538 22bd BA0C0000 		.4byte	.LASF222
 9539 22c1 01       		.byte	0x1
 9540 22c2 DE11     		.2byte	0x11de
 9541 22c4 EB000000 		.4byte	0xeb
 9542 22c8 05150000 		.4byte	.LLST137
 9543 22cc 19       		.uleb128 0x19
 9544 22cd 1E0A0000 		.4byte	.LASF223
 9545 22d1 01       		.byte	0x1
 9546 22d2 DE11     		.2byte	0x11de
 9547 22d4 B5020000 		.4byte	0x2b5
 9548 22d8 4A150000 		.4byte	.LLST138
 9549 22dc 19       		.uleb128 0x19
 9550 22dd FB050000 		.4byte	.LASF224
 9551 22e1 01       		.byte	0x1
 9552 22e2 DE11     		.2byte	0x11de
 9553 22e4 F51F0000 		.4byte	0x1ff5
 9554 22e8 6B150000 		.4byte	.LLST139
 9555 22ec 1A       		.uleb128 0x1a
 9556 22ed C2100000 		.4byte	.LASF94
 9557 22f1 01       		.byte	0x1
 9558 22f2 E011     		.2byte	0x11e0
 9559 22f4 CF050000 		.4byte	0x5cf
 9560 22f8 B0150000 		.4byte	.LLST140
 9561 22fc 1A       		.uleb128 0x1a
 9562 22fd 870D0000 		.4byte	.LASF93
 9563 2301 01       		.byte	0x1
 9564 2302 E111     		.2byte	0x11e1
 9565 2304 35010000 		.4byte	0x135
 9566 2308 D1150000 		.4byte	.LLST141
 9567 230c 1A       		.uleb128 0x1a
 9568 230d FA010000 		.4byte	.LASF225
 9569 2311 01       		.byte	0x1
 9570 2312 E211     		.2byte	0x11e2
 9571 2314 CA000000 		.4byte	0xca
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 273


 9572 2318 FB150000 		.4byte	.LLST142
 9573 231c 2A       		.uleb128 0x2a
 9574 231d 8B040000 		.4byte	0x48b
 9575 2321 04000000 		.4byte	.LBB175
 9576 2325 1A000000 		.4byte	.LBE175-.LBB175
 9577 2329 01       		.byte	0x1
 9578 232a E411     		.2byte	0x11e4
 9579 232c 40230000 		.4byte	0x2340
 9580 2330 1C       		.uleb128 0x1c
 9581 2331 04000000 		.4byte	.LBB176
 9582 2335 1A000000 		.4byte	.LBE176-.LBB176
 9583 2339 1D       		.uleb128 0x1d
 9584 233a 97040000 		.4byte	0x497
 9585 233e 00       		.byte	0
 9586 233f 00       		.byte	0
 9587 2340 2A       		.uleb128 0x2a
 9588 2341 8B040000 		.4byte	0x48b
 9589 2345 9E000000 		.4byte	.LBB177
 9590 2349 12000000 		.4byte	.LBE177-.LBB177
 9591 234d 01       		.byte	0x1
 9592 234e 1C12     		.2byte	0x121c
 9593 2350 64230000 		.4byte	0x2364
 9594 2354 1C       		.uleb128 0x1c
 9595 2355 9E000000 		.4byte	.LBB178
 9596 2359 12000000 		.4byte	.LBE178-.LBB178
 9597 235d 1D       		.uleb128 0x1d
 9598 235e 97040000 		.4byte	0x497
 9599 2362 00       		.byte	0
 9600 2363 00       		.byte	0
 9601 2364 1F       		.uleb128 0x1f
 9602 2365 22000000 		.4byte	.LVL445
 9603 2369 A6280000 		.4byte	0x28a6
 9604 236d 25       		.uleb128 0x25
 9605 236e 78000000 		.4byte	.LVL450
 9606 2372 C8280000 		.4byte	0x28c8
 9607 2376 81230000 		.4byte	0x2381
 9608 237a 21       		.uleb128 0x21
 9609 237b 01       		.uleb128 0x1
 9610 237c 50       		.byte	0x50
 9611 237d 02       		.uleb128 0x2
 9612 237e 76       		.byte	0x76
 9613 237f 00       		.sleb128 0
 9614 2380 00       		.byte	0
 9615 2381 25       		.uleb128 0x25
 9616 2382 9A000000 		.4byte	.LVL451
 9617 2386 B1280000 		.4byte	0x28b1
 9618 238a 95230000 		.4byte	0x2395
 9619 238e 21       		.uleb128 0x21
 9620 238f 01       		.uleb128 0x1
 9621 2390 51       		.byte	0x51
 9622 2391 02       		.uleb128 0x2
 9623 2392 76       		.byte	0x76
 9624 2393 00       		.sleb128 0
 9625 2394 00       		.byte	0
 9626 2395 1F       		.uleb128 0x1f
 9627 2396 D2000000 		.4byte	.LVL453
 9628 239a BD280000 		.4byte	0x28bd
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 274


 9629 239e 00       		.byte	0
 9630 239f 27       		.uleb128 0x27
 9631 23a0 E3030000 		.4byte	.LASF226
 9632 23a4 01       		.byte	0x1
 9633 23a5 4812     		.2byte	0x1248
 9634 23a7 35010000 		.4byte	0x135
 9635 23ab 00000000 		.4byte	.LFB191
 9636 23af 20010000 		.4byte	.LFE191-.LFB191
 9637 23b3 01       		.uleb128 0x1
 9638 23b4 9C       		.byte	0x9c
 9639 23b5 1F250000 		.4byte	0x251f
 9640 23b9 19       		.uleb128 0x19
 9641 23ba A00A0000 		.4byte	.LASF221
 9642 23be 01       		.byte	0x1
 9643 23bf 4812     		.2byte	0x1248
 9644 23c1 43020000 		.4byte	0x243
 9645 23c5 0E160000 		.4byte	.LLST143
 9646 23c9 19       		.uleb128 0x19
 9647 23ca BA0C0000 		.4byte	.LASF222
 9648 23ce 01       		.byte	0x1
 9649 23cf 4812     		.2byte	0x1248
 9650 23d1 EB000000 		.4byte	0xeb
 9651 23d5 3A160000 		.4byte	.LLST144
 9652 23d9 19       		.uleb128 0x19
 9653 23da 1E0A0000 		.4byte	.LASF223
 9654 23de 01       		.byte	0x1
 9655 23df 4812     		.2byte	0x1248
 9656 23e1 B5020000 		.4byte	0x2b5
 9657 23e5 7F160000 		.4byte	.LLST145
 9658 23e9 19       		.uleb128 0x19
 9659 23ea FB050000 		.4byte	.LASF224
 9660 23ee 01       		.byte	0x1
 9661 23ef 4812     		.2byte	0x1248
 9662 23f1 F51F0000 		.4byte	0x1ff5
 9663 23f5 A0160000 		.4byte	.LLST146
 9664 23f9 19       		.uleb128 0x19
 9665 23fa 07010000 		.4byte	.LASF227
 9666 23fe 01       		.byte	0x1
 9667 23ff 4812     		.2byte	0x1248
 9668 2401 1F250000 		.4byte	0x251f
 9669 2405 E5160000 		.4byte	.LLST147
 9670 2409 1A       		.uleb128 0x1a
 9671 240a C2100000 		.4byte	.LASF94
 9672 240e 01       		.byte	0x1
 9673 240f 4A12     		.2byte	0x124a
 9674 2411 CF050000 		.4byte	0x5cf
 9675 2415 05170000 		.4byte	.LLST148
 9676 2419 1A       		.uleb128 0x1a
 9677 241a FA010000 		.4byte	.LASF225
 9678 241e 01       		.byte	0x1
 9679 241f 4B12     		.2byte	0x124b
 9680 2421 CA000000 		.4byte	0xca
 9681 2425 26170000 		.4byte	.LLST149
 9682 2429 1A       		.uleb128 0x1a
 9683 242a 870D0000 		.4byte	.LASF93
 9684 242e 01       		.byte	0x1
 9685 242f 4C12     		.2byte	0x124c
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 275


 9686 2431 35010000 		.4byte	0x135
 9687 2435 39170000 		.4byte	.LLST150
 9688 2439 2B       		.uleb128 0x2b
 9689 243a 10020000 		.4byte	.LASF140
 9690 243e 01       		.byte	0x1
 9691 243f 4D12     		.2byte	0x124d
 9692 2441 40010000 		.4byte	0x140
 9693 2445 2A       		.uleb128 0x2a
 9694 2446 8B040000 		.4byte	0x48b
 9695 244a 08000000 		.4byte	.LBB179
 9696 244e 1A000000 		.4byte	.LBE179-.LBB179
 9697 2452 01       		.byte	0x1
 9698 2453 4F12     		.2byte	0x124f
 9699 2455 69240000 		.4byte	0x2469
 9700 2459 1C       		.uleb128 0x1c
 9701 245a 08000000 		.4byte	.LBB180
 9702 245e 1A000000 		.4byte	.LBE180-.LBB180
 9703 2462 1D       		.uleb128 0x1d
 9704 2463 97040000 		.4byte	0x497
 9705 2467 00       		.byte	0
 9706 2468 00       		.byte	0
 9707 2469 2A       		.uleb128 0x2a
 9708 246a A3040000 		.4byte	0x4a3
 9709 246e 26000000 		.4byte	.LBB181
 9710 2472 14000000 		.4byte	.LBE181-.LBB181
 9711 2476 01       		.byte	0x1
 9712 2477 6512     		.2byte	0x1265
 9713 2479 92240000 		.4byte	0x2492
 9714 247d 1C       		.uleb128 0x1c
 9715 247e 26000000 		.4byte	.LBB182
 9716 2482 14000000 		.4byte	.LBE182-.LBB182
 9717 2486 1D       		.uleb128 0x1d
 9718 2487 B3040000 		.4byte	0x4b3
 9719 248b 1D       		.uleb128 0x1d
 9720 248c BE040000 		.4byte	0x4be
 9721 2490 00       		.byte	0
 9722 2491 00       		.byte	0
 9723 2492 2A       		.uleb128 0x2a
 9724 2493 8B040000 		.4byte	0x48b
 9725 2497 98000000 		.4byte	.LBB183
 9726 249b 12000000 		.4byte	.LBE183-.LBB183
 9727 249f 01       		.byte	0x1
 9728 24a0 9612     		.2byte	0x1296
 9729 24a2 B6240000 		.4byte	0x24b6
 9730 24a6 1C       		.uleb128 0x1c
 9731 24a7 98000000 		.4byte	.LBB184
 9732 24ab 12000000 		.4byte	.LBE184-.LBB184
 9733 24af 1D       		.uleb128 0x1d
 9734 24b0 97040000 		.4byte	0x497
 9735 24b4 00       		.byte	0
 9736 24b5 00       		.byte	0
 9737 24b6 2A       		.uleb128 0x2a
 9738 24b7 CA040000 		.4byte	0x4ca
 9739 24bb 08010000 		.4byte	.LBB185
 9740 24bf 04000000 		.4byte	.LBE185-.LBB185
 9741 24c3 01       		.byte	0x1
 9742 24c4 BA12     		.2byte	0x12ba
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 276


 9743 24c6 D4240000 		.4byte	0x24d4
 9744 24ca 2C       		.uleb128 0x2c
 9745 24cb D6040000 		.4byte	0x4d6
 9746 24cf 63170000 		.4byte	.LLST151
 9747 24d3 00       		.byte	0
 9748 24d4 1F       		.uleb128 0x1f
 9749 24d5 26000000 		.4byte	.LVL459
 9750 24d9 01290000 		.4byte	0x2901
 9751 24dd 25       		.uleb128 0x25
 9752 24de BC000000 		.4byte	.LVL465
 9753 24e2 C8280000 		.4byte	0x28c8
 9754 24e6 F1240000 		.4byte	0x24f1
 9755 24ea 21       		.uleb128 0x21
 9756 24eb 01       		.uleb128 0x1
 9757 24ec 50       		.byte	0x50
 9758 24ed 02       		.uleb128 0x2
 9759 24ee 78       		.byte	0x78
 9760 24ef 00       		.sleb128 0
 9761 24f0 00       		.byte	0
 9762 24f1 25       		.uleb128 0x25
 9763 24f2 DE000000 		.4byte	.LVL466
 9764 24f6 B1280000 		.4byte	0x28b1
 9765 24fa 05250000 		.4byte	0x2505
 9766 24fe 21       		.uleb128 0x21
 9767 24ff 01       		.uleb128 0x1
 9768 2500 51       		.byte	0x51
 9769 2501 02       		.uleb128 0x2
 9770 2502 78       		.byte	0x78
 9771 2503 00       		.sleb128 0
 9772 2504 00       		.byte	0
 9773 2505 20       		.uleb128 0x20
 9774 2506 EA000000 		.4byte	.LVL468
 9775 250a B1280000 		.4byte	0x28b1
 9776 250e 21       		.uleb128 0x21
 9777 250f 01       		.uleb128 0x1
 9778 2510 50       		.byte	0x50
 9779 2511 05       		.uleb128 0x5
 9780 2512 03       		.byte	0x3
 9781 2513 14000000 		.4byte	.LANCHOR0+20
 9782 2517 21       		.uleb128 0x21
 9783 2518 01       		.uleb128 0x1
 9784 2519 51       		.byte	0x51
 9785 251a 02       		.uleb128 0x2
 9786 251b 74       		.byte	0x74
 9787 251c 18       		.sleb128 24
 9788 251d 00       		.byte	0
 9789 251e 00       		.byte	0
 9790 251f 06       		.uleb128 0x6
 9791 2520 04       		.byte	0x4
 9792 2521 35010000 		.4byte	0x135
 9793 2525 29       		.uleb128 0x29
 9794 2526 3F0C0000 		.4byte	.LASF228
 9795 252a 01       		.byte	0x1
 9796 252b C412     		.2byte	0x12c4
 9797 252d 00000000 		.4byte	.LFB192
 9798 2531 CC000000 		.4byte	.LFE192-.LFB192
 9799 2535 01       		.uleb128 0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 277


 9800 2536 9C       		.byte	0x9c
 9801 2537 61260000 		.4byte	0x2661
 9802 253b 19       		.uleb128 0x19
 9803 253c A00A0000 		.4byte	.LASF221
 9804 2540 01       		.byte	0x1
 9805 2541 C412     		.2byte	0x12c4
 9806 2543 43020000 		.4byte	0x243
 9807 2547 76170000 		.4byte	.LLST152
 9808 254b 19       		.uleb128 0x19
 9809 254c 07010000 		.4byte	.LASF227
 9810 2550 01       		.byte	0x1
 9811 2551 C412     		.2byte	0x12c4
 9812 2553 1F250000 		.4byte	0x251f
 9813 2557 A2170000 		.4byte	.LLST153
 9814 255b 1A       		.uleb128 0x1a
 9815 255c C2100000 		.4byte	.LASF94
 9816 2560 01       		.byte	0x1
 9817 2561 C612     		.2byte	0x12c6
 9818 2563 CF050000 		.4byte	0x5cf
 9819 2567 CE170000 		.4byte	.LLST154
 9820 256b 1A       		.uleb128 0x1a
 9821 256c FA010000 		.4byte	.LASF225
 9822 2570 01       		.byte	0x1
 9823 2571 C712     		.2byte	0x12c7
 9824 2573 CA000000 		.4byte	0xca
 9825 2577 EF170000 		.4byte	.LLST155
 9826 257b 2B       		.uleb128 0x2b
 9827 257c 10020000 		.4byte	.LASF140
 9828 2580 01       		.byte	0x1
 9829 2581 C812     		.2byte	0x12c8
 9830 2583 40010000 		.4byte	0x140
 9831 2587 2A       		.uleb128 0x2a
 9832 2588 8B040000 		.4byte	0x48b
 9833 258c 04000000 		.4byte	.LBB187
 9834 2590 16000000 		.4byte	.LBE187-.LBB187
 9835 2594 01       		.byte	0x1
 9836 2595 CA12     		.2byte	0x12ca
 9837 2597 AB250000 		.4byte	0x25ab
 9838 259b 1C       		.uleb128 0x1c
 9839 259c 04000000 		.4byte	.LBB188
 9840 25a0 16000000 		.4byte	.LBE188-.LBB188
 9841 25a4 1D       		.uleb128 0x1d
 9842 25a5 97040000 		.4byte	0x497
 9843 25a9 00       		.byte	0
 9844 25aa 00       		.byte	0
 9845 25ab 2A       		.uleb128 0x2a
 9846 25ac A3040000 		.4byte	0x4a3
 9847 25b0 1E000000 		.4byte	.LBB189
 9848 25b4 14000000 		.4byte	.LBE189-.LBB189
 9849 25b8 01       		.byte	0x1
 9850 25b9 E012     		.2byte	0x12e0
 9851 25bb D4250000 		.4byte	0x25d4
 9852 25bf 1C       		.uleb128 0x1c
 9853 25c0 1E000000 		.4byte	.LBB190
 9854 25c4 14000000 		.4byte	.LBE190-.LBB190
 9855 25c8 1D       		.uleb128 0x1d
 9856 25c9 B3040000 		.4byte	0x4b3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 278


 9857 25cd 1D       		.uleb128 0x1d
 9858 25ce BE040000 		.4byte	0x4be
 9859 25d2 00       		.byte	0
 9860 25d3 00       		.byte	0
 9861 25d4 2A       		.uleb128 0x2a
 9862 25d5 8B040000 		.4byte	0x48b
 9863 25d9 4C000000 		.4byte	.LBB191
 9864 25dd 12000000 		.4byte	.LBE191-.LBB191
 9865 25e1 01       		.byte	0x1
 9866 25e2 F012     		.2byte	0x12f0
 9867 25e4 F8250000 		.4byte	0x25f8
 9868 25e8 1C       		.uleb128 0x1c
 9869 25e9 4C000000 		.4byte	.LBB192
 9870 25ed 12000000 		.4byte	.LBE192-.LBB192
 9871 25f1 1D       		.uleb128 0x1d
 9872 25f2 97040000 		.4byte	0x497
 9873 25f6 00       		.byte	0
 9874 25f7 00       		.byte	0
 9875 25f8 2A       		.uleb128 0x2a
 9876 25f9 CA040000 		.4byte	0x4ca
 9877 25fd BA000000 		.4byte	.LBB193
 9878 2601 12000000 		.4byte	.LBE193-.LBB193
 9879 2605 01       		.byte	0x1
 9880 2606 1413     		.2byte	0x1314
 9881 2608 16260000 		.4byte	0x2616
 9882 260c 2C       		.uleb128 0x2c
 9883 260d D6040000 		.4byte	0x4d6
 9884 2611 02180000 		.4byte	.LLST156
 9885 2615 00       		.byte	0
 9886 2616 1F       		.uleb128 0x1f
 9887 2617 1E000000 		.4byte	.LVL474
 9888 261b 01290000 		.4byte	0x2901
 9889 261f 25       		.uleb128 0x25
 9890 2620 6E000000 		.4byte	.LVL478
 9891 2624 C8280000 		.4byte	0x28c8
 9892 2628 33260000 		.4byte	0x2633
 9893 262c 21       		.uleb128 0x21
 9894 262d 01       		.uleb128 0x1
 9895 262e 50       		.byte	0x50
 9896 262f 02       		.uleb128 0x2
 9897 2630 77       		.byte	0x77
 9898 2631 00       		.sleb128 0
 9899 2632 00       		.byte	0
 9900 2633 25       		.uleb128 0x25
 9901 2634 90000000 		.4byte	.LVL479
 9902 2638 B1280000 		.4byte	0x28b1
 9903 263c 47260000 		.4byte	0x2647
 9904 2640 21       		.uleb128 0x21
 9905 2641 01       		.uleb128 0x1
 9906 2642 51       		.byte	0x51
 9907 2643 02       		.uleb128 0x2
 9908 2644 77       		.byte	0x77
 9909 2645 00       		.sleb128 0
 9910 2646 00       		.byte	0
 9911 2647 20       		.uleb128 0x20
 9912 2648 9C000000 		.4byte	.LVL480
 9913 264c B1280000 		.4byte	0x28b1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 279


 9914 2650 21       		.uleb128 0x21
 9915 2651 01       		.uleb128 0x1
 9916 2652 50       		.byte	0x50
 9917 2653 05       		.uleb128 0x5
 9918 2654 03       		.byte	0x3
 9919 2655 14000000 		.4byte	.LANCHOR0+20
 9920 2659 21       		.uleb128 0x21
 9921 265a 01       		.uleb128 0x1
 9922 265b 51       		.byte	0x51
 9923 265c 02       		.uleb128 0x2
 9924 265d 74       		.byte	0x74
 9925 265e 18       		.sleb128 24
 9926 265f 00       		.byte	0
 9927 2660 00       		.byte	0
 9928 2661 27       		.uleb128 0x27
 9929 2662 EB060000 		.4byte	.LASF229
 9930 2666 01       		.byte	0x1
 9931 2667 1D13     		.2byte	0x131d
 9932 2669 35010000 		.4byte	0x135
 9933 266d 00000000 		.4byte	.LFB193
 9934 2671 34000000 		.4byte	.LFE193-.LFB193
 9935 2675 01       		.uleb128 0x1
 9936 2676 9C       		.byte	0x9c
 9937 2677 BE260000 		.4byte	0x26be
 9938 267b 19       		.uleb128 0x19
 9939 267c AE0A0000 		.4byte	.LASF97
 9940 2680 01       		.byte	0x1
 9941 2681 1D13     		.2byte	0x131d
 9942 2683 43020000 		.4byte	0x243
 9943 2687 15180000 		.4byte	.LLST157
 9944 268b 1A       		.uleb128 0x1a
 9945 268c C2100000 		.4byte	.LASF94
 9946 2690 01       		.byte	0x1
 9947 2691 1F13     		.2byte	0x131f
 9948 2693 CF050000 		.4byte	0x5cf
 9949 2697 28180000 		.4byte	.LLST158
 9950 269b 1A       		.uleb128 0x1a
 9951 269c 870D0000 		.4byte	.LASF93
 9952 26a0 01       		.byte	0x1
 9953 26a1 2013     		.2byte	0x1320
 9954 26a3 35010000 		.4byte	0x135
 9955 26a7 46180000 		.4byte	.LLST159
 9956 26ab 1F       		.uleb128 0x1f
 9957 26ac 10000000 		.4byte	.LVL486
 9958 26b0 A6280000 		.4byte	0x28a6
 9959 26b4 1F       		.uleb128 0x1f
 9960 26b5 2A000000 		.4byte	.LVL491
 9961 26b9 BD280000 		.4byte	0x28bd
 9962 26bd 00       		.byte	0
 9963 26be 0B       		.uleb128 0xb
 9964 26bf 38020000 		.4byte	0x238
 9965 26c3 CE260000 		.4byte	0x26ce
 9966 26c7 0C       		.uleb128 0xc
 9967 26c8 A9000000 		.4byte	0xa9
 9968 26cc 06       		.byte	0x6
 9969 26cd 00       		.byte	0
 9970 26ce 23       		.uleb128 0x23
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 280


 9971 26cf B4010000 		.4byte	.LASF230
 9972 26d3 01       		.byte	0x1
 9973 26d4 5F01     		.2byte	0x15f
 9974 26d6 BE260000 		.4byte	0x26be
 9975 26da 05       		.uleb128 0x5
 9976 26db 03       		.byte	0x3
 9977 26dc 30000000 		.4byte	pxReadyTasksLists
 9978 26e0 23       		.uleb128 0x23
 9979 26e1 5A020000 		.4byte	.LASF231
 9980 26e5 01       		.byte	0x1
 9981 26e6 6001     		.2byte	0x160
 9982 26e8 38020000 		.4byte	0x238
 9983 26ec 05       		.uleb128 0x5
 9984 26ed 03       		.byte	0x3
 9985 26ee BC000000 		.4byte	xDelayedTaskList1
 9986 26f2 23       		.uleb128 0x23
 9987 26f3 6C020000 		.4byte	.LASF232
 9988 26f7 01       		.byte	0x1
 9989 26f8 6101     		.2byte	0x161
 9990 26fa 38020000 		.4byte	0x238
 9991 26fe 05       		.uleb128 0x5
 9992 26ff 03       		.byte	0x3
 9993 2700 D0000000 		.4byte	xDelayedTaskList2
 9994 2704 23       		.uleb128 0x23
 9995 2705 560C0000 		.4byte	.LASF233
 9996 2709 01       		.byte	0x1
 9997 270a 6201     		.2byte	0x162
 9998 270c 16270000 		.4byte	0x2716
 9999 2710 05       		.uleb128 0x5
 10000 2711 03       		.byte	0x3
 10001 2712 28000000 		.4byte	pxDelayedTaskList
 10002 2716 08       		.uleb128 0x8
 10003 2717 8C0C0000 		.4byte	0xc8c
 10004 271b 23       		.uleb128 0x23
 10005 271c C2060000 		.4byte	.LASF234
 10006 2720 01       		.byte	0x1
 10007 2721 6301     		.2byte	0x163
 10008 2723 16270000 		.4byte	0x2716
 10009 2727 05       		.uleb128 0x5
 10010 2728 03       		.byte	0x3
 10011 2729 F8000000 		.4byte	pxOverflowDelayedTaskList
 10012 272d 23       		.uleb128 0x23
 10013 272e 2F050000 		.4byte	.LASF235
 10014 2732 01       		.byte	0x1
 10015 2733 6401     		.2byte	0x164
 10016 2735 38020000 		.4byte	0x238
 10017 2739 05       		.uleb128 0x5
 10018 273a 03       		.byte	0x3
 10019 273b 14000000 		.4byte	xPendingReadyList
 10020 273f 23       		.uleb128 0x23
 10021 2740 53070000 		.4byte	.LASF236
 10022 2744 01       		.byte	0x1
 10023 2745 6801     		.2byte	0x168
 10024 2747 38020000 		.4byte	0x238
 10025 274b 05       		.uleb128 0x5
 10026 274c 03       		.byte	0x3
 10027 274d E4000000 		.4byte	xTasksWaitingTermination
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 281


 10028 2751 23       		.uleb128 0x23
 10029 2752 82010000 		.4byte	.LASF237
 10030 2756 01       		.byte	0x1
 10031 2757 6901     		.2byte	0x169
 10032 2759 2D020000 		.4byte	0x22d
 10033 275d 05       		.uleb128 0x5
 10034 275e 03       		.byte	0x3
 10035 275f 10010000 		.4byte	uxDeletedTasksWaitingCleanUp
 10036 2763 23       		.uleb128 0x23
 10037 2764 C6040000 		.4byte	.LASF238
 10038 2768 01       		.byte	0x1
 10039 2769 6F01     		.2byte	0x16f
 10040 276b 38020000 		.4byte	0x238
 10041 276f 05       		.uleb128 0x5
 10042 2770 03       		.byte	0x3
 10043 2771 00000000 		.4byte	xSuspendedTaskList
 10044 2775 23       		.uleb128 0x23
 10045 2776 62100000 		.4byte	.LASF239
 10046 277a 01       		.byte	0x1
 10047 277b 7401     		.2byte	0x174
 10048 277d 2D020000 		.4byte	0x22d
 10049 2781 05       		.uleb128 0x5
 10050 2782 03       		.byte	0x3
 10051 2783 FC000000 		.4byte	uxCurrentNumberOfTasks
 10052 2787 23       		.uleb128 0x23
 10053 2788 62060000 		.4byte	.LASF240
 10054 278c 01       		.byte	0x1
 10055 278d 7501     		.2byte	0x175
 10056 278f 99270000 		.4byte	0x2799
 10057 2793 05       		.uleb128 0x5
 10058 2794 03       		.byte	0x3
 10059 2795 14010000 		.4byte	xTickCount
 10060 2799 08       		.uleb128 0x8
 10061 279a 4B010000 		.4byte	0x14b
 10062 279e 23       		.uleb128 0x23
 10063 279f 020D0000 		.4byte	.LASF241
 10064 27a3 01       		.byte	0x1
 10065 27a4 7601     		.2byte	0x176
 10066 27a6 2D020000 		.4byte	0x22d
 10067 27aa 05       		.uleb128 0x5
 10068 27ab 03       		.byte	0x3
 10069 27ac 0C010000 		.4byte	uxTopReadyPriority
 10070 27b0 23       		.uleb128 0x23
 10071 27b1 52010000 		.4byte	.LASF242
 10072 27b5 01       		.byte	0x1
 10073 27b6 7701     		.2byte	0x177
 10074 27b8 C2270000 		.4byte	0x27c2
 10075 27bc 05       		.uleb128 0x5
 10076 27bd 03       		.byte	0x3
 10077 27be 04010000 		.4byte	xSchedulerRunning
 10078 27c2 08       		.uleb128 0x8
 10079 27c3 35010000 		.4byte	0x135
 10080 27c7 23       		.uleb128 0x23
 10081 27c8 A90D0000 		.4byte	.LASF243
 10082 27cc 01       		.byte	0x1
 10083 27cd 7801     		.2byte	0x178
 10084 27cf 2D020000 		.4byte	0x22d
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 282


 10085 27d3 05       		.uleb128 0x5
 10086 27d4 03       		.byte	0x3
 10087 27d5 24010000 		.4byte	uxPendedTicks
 10088 27d9 23       		.uleb128 0x23
 10089 27da AD110000 		.4byte	.LASF244
 10090 27de 01       		.byte	0x1
 10091 27df 7901     		.2byte	0x179
 10092 27e1 C2270000 		.4byte	0x27c2
 10093 27e5 05       		.uleb128 0x5
 10094 27e6 03       		.byte	0x3
 10095 27e7 28010000 		.4byte	xYieldPending
 10096 27eb 23       		.uleb128 0x23
 10097 27ec FD0A0000 		.4byte	.LASF245
 10098 27f0 01       		.byte	0x1
 10099 27f1 7A01     		.2byte	0x17a
 10100 27f3 C2270000 		.4byte	0x27c2
 10101 27f7 05       		.uleb128 0x5
 10102 27f8 03       		.byte	0x3
 10103 27f9 20010000 		.4byte	xNumOfOverflows
 10104 27fd 23       		.uleb128 0x23
 10105 27fe 040A0000 		.4byte	.LASF83
 10106 2802 01       		.byte	0x1
 10107 2803 7B01     		.2byte	0x17b
 10108 2805 40010000 		.4byte	0x140
 10109 2809 05       		.uleb128 0x5
 10110 280a 03       		.byte	0x3
 10111 280b 08010000 		.4byte	uxTaskNumber
 10112 280f 23       		.uleb128 0x23
 10113 2810 C8080000 		.4byte	.LASF246
 10114 2814 01       		.byte	0x1
 10115 2815 7C01     		.2byte	0x17c
 10116 2817 99270000 		.4byte	0x2799
 10117 281b 05       		.uleb128 0x5
 10118 281c 03       		.byte	0x3
 10119 281d 2C000000 		.4byte	xNextTaskUnblockTime
 10120 2821 23       		.uleb128 0x23
 10121 2822 190B0000 		.4byte	.LASF247
 10122 2826 01       		.byte	0x1
 10123 2827 7D01     		.2byte	0x17d
 10124 2829 43020000 		.4byte	0x243
 10125 282d 05       		.uleb128 0x5
 10126 282e 03       		.byte	0x3
 10127 282f 1C010000 		.4byte	xIdleTaskHandle
 10128 2833 23       		.uleb128 0x23
 10129 2834 D9100000 		.4byte	.LASF248
 10130 2838 01       		.byte	0x1
 10131 2839 8701     		.2byte	0x187
 10132 283b 2D020000 		.4byte	0x22d
 10133 283f 05       		.uleb128 0x5
 10134 2840 03       		.byte	0x3
 10135 2841 18010000 		.4byte	uxSchedulerSuspended
 10136 2845 34       		.uleb128 0x34
 10137 2846 9A060000 		.4byte	.LASF249
 10138 284a 09       		.byte	0x9
 10139 284b F907     		.2byte	0x7f9
 10140 284d 51280000 		.4byte	0x2851
 10141 2851 08       		.uleb128 0x8
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 283


 10142 2852 E0000000 		.4byte	0xe0
 10143 2856 35       		.uleb128 0x35
 10144 2857 1E100000 		.4byte	.LASF250
 10145 285b 01       		.byte	0x1
 10146 285c 5C01     		.2byte	0x15c
 10147 285e 68280000 		.4byte	0x2868
 10148 2862 05       		.uleb128 0x5
 10149 2863 03       		.byte	0x3
 10150 2864 00000000 		.4byte	pxCurrentTCB
 10151 2868 08       		.uleb128 0x8
 10152 2869 CF050000 		.4byte	0x5cf
 10153 286d 36       		.uleb128 0x36
 10154 286e F80C0000 		.4byte	.LASF251
 10155 2872 F80C0000 		.4byte	.LASF251
 10156 2876 0A       		.byte	0xa
 10157 2877 82       		.byte	0x82
 10158 2878 36       		.uleb128 0x36
 10159 2879 9E090000 		.4byte	.LASF252
 10160 287d 9E090000 		.4byte	.LASF252
 10161 2881 0B       		.byte	0xb
 10162 2882 19       		.byte	0x19
 10163 2883 37       		.uleb128 0x37
 10164 2884 710B0000 		.4byte	.LASF253
 10165 2888 710B0000 		.4byte	.LASF253
 10166 288c 07       		.byte	0x7
 10167 288d 6301     		.2byte	0x163
 10168 288f 36       		.uleb128 0x36
 10169 2890 F0080000 		.4byte	.LASF254
 10170 2894 F0080000 		.4byte	.LASF254
 10171 2898 0A       		.byte	0xa
 10172 2899 66       		.byte	0x66
 10173 289a 37       		.uleb128 0x37
 10174 289b A90E0000 		.4byte	.LASF255
 10175 289f A90E0000 		.4byte	.LASF255
 10176 28a3 07       		.byte	0x7
 10177 28a4 5801     		.2byte	0x158
 10178 28a6 36       		.uleb128 0x36
 10179 28a7 9D020000 		.4byte	.LASF256
 10180 28ab 9D020000 		.4byte	.LASF256
 10181 28af 02       		.byte	0x2
 10182 28b0 61       		.byte	0x61
 10183 28b1 37       		.uleb128 0x37
 10184 28b2 8B060000 		.4byte	.LASF257
 10185 28b6 8B060000 		.4byte	.LASF257
 10186 28ba 07       		.byte	0x7
 10187 28bb 8501     		.2byte	0x185
 10188 28bd 36       		.uleb128 0x36
 10189 28be 1C000000 		.4byte	.LASF258
 10190 28c2 1C000000 		.4byte	.LASF258
 10191 28c6 02       		.byte	0x2
 10192 28c7 62       		.byte	0x62
 10193 28c8 37       		.uleb128 0x37
 10194 28c9 1B040000 		.4byte	.LASF259
 10195 28cd 1B040000 		.4byte	.LASF259
 10196 28d1 07       		.byte	0x7
 10197 28d2 9401     		.2byte	0x194
 10198 28d4 37       		.uleb128 0x37
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 284


 10199 28d5 00000000 		.4byte	.LASF260
 10200 28d9 00000000 		.4byte	.LASF260
 10201 28dd 07       		.byte	0x7
 10202 28de 7001     		.2byte	0x170
 10203 28e0 36       		.uleb128 0x36
 10204 28e1 06040000 		.4byte	.LASF261
 10205 28e5 06040000 		.4byte	.LASF261
 10206 28e9 0B       		.byte	0xb
 10207 28ea 1E       		.byte	0x1e
 10208 28eb 36       		.uleb128 0x36
 10209 28ec 50000000 		.4byte	.LASF262
 10210 28f0 50000000 		.4byte	.LASF262
 10211 28f4 0B       		.byte	0xb
 10212 28f5 21       		.byte	0x21
 10213 28f6 36       		.uleb128 0x36
 10214 28f7 AF050000 		.4byte	.LASF263
 10215 28fb AF050000 		.4byte	.LASF263
 10216 28ff 0A       		.byte	0xa
 10217 2900 81       		.byte	0x81
 10218 2901 36       		.uleb128 0x36
 10219 2902 B90E0000 		.4byte	.LASF264
 10220 2906 B90E0000 		.4byte	.LASF264
 10221 290a 02       		.byte	0x2
 10222 290b 75       		.byte	0x75
 10223 290c 37       		.uleb128 0x37
 10224 290d BD030000 		.4byte	.LASF265
 10225 2911 BD030000 		.4byte	.LASF265
 10226 2915 0C       		.byte	0xc
 10227 2916 EF04     		.2byte	0x4ef
 10228 2918 36       		.uleb128 0x36
 10229 2919 57000000 		.4byte	.LASF266
 10230 291d 57000000 		.4byte	.LASF266
 10231 2921 0A       		.byte	0xa
 10232 2922 8B       		.byte	0x8b
 10233 2923 36       		.uleb128 0x36
 10234 2924 E60C0000 		.4byte	.LASF267
 10235 2928 E60C0000 		.4byte	.LASF267
 10236 292c 0A       		.byte	0xa
 10237 292d 92       		.byte	0x92
 10238 292e 37       		.uleb128 0x37
 10239 292f D6010000 		.4byte	.LASF268
 10240 2933 D6010000 		.4byte	.LASF268
 10241 2937 01       		.byte	0x1
 10242 2938 9701     		.2byte	0x197
 10243 293a 36       		.uleb128 0x36
 10244 293b CD0A0000 		.4byte	.LASF269
 10245 293f CD0A0000 		.4byte	.LASF269
 10246 2943 0D       		.byte	0xd
 10247 2944 E7       		.byte	0xe7
 10248 2945 00       		.byte	0
 10249              		.section	.debug_abbrev,"",%progbits
 10250              	.Ldebug_abbrev0:
 10251 0000 01       		.uleb128 0x1
 10252 0001 11       		.uleb128 0x11
 10253 0002 01       		.byte	0x1
 10254 0003 25       		.uleb128 0x25
 10255 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 285


 10256 0005 13       		.uleb128 0x13
 10257 0006 0B       		.uleb128 0xb
 10258 0007 03       		.uleb128 0x3
 10259 0008 0E       		.uleb128 0xe
 10260 0009 1B       		.uleb128 0x1b
 10261 000a 0E       		.uleb128 0xe
 10262 000b 55       		.uleb128 0x55
 10263 000c 17       		.uleb128 0x17
 10264 000d 11       		.uleb128 0x11
 10265 000e 01       		.uleb128 0x1
 10266 000f 10       		.uleb128 0x10
 10267 0010 17       		.uleb128 0x17
 10268 0011 00       		.byte	0
 10269 0012 00       		.byte	0
 10270 0013 02       		.uleb128 0x2
 10271 0014 16       		.uleb128 0x16
 10272 0015 00       		.byte	0
 10273 0016 03       		.uleb128 0x3
 10274 0017 0E       		.uleb128 0xe
 10275 0018 3A       		.uleb128 0x3a
 10276 0019 0B       		.uleb128 0xb
 10277 001a 3B       		.uleb128 0x3b
 10278 001b 0B       		.uleb128 0xb
 10279 001c 49       		.uleb128 0x49
 10280 001d 13       		.uleb128 0x13
 10281 001e 00       		.byte	0
 10282 001f 00       		.byte	0
 10283 0020 03       		.uleb128 0x3
 10284 0021 24       		.uleb128 0x24
 10285 0022 00       		.byte	0
 10286 0023 0B       		.uleb128 0xb
 10287 0024 0B       		.uleb128 0xb
 10288 0025 3E       		.uleb128 0x3e
 10289 0026 0B       		.uleb128 0xb
 10290 0027 03       		.uleb128 0x3
 10291 0028 0E       		.uleb128 0xe
 10292 0029 00       		.byte	0
 10293 002a 00       		.byte	0
 10294 002b 04       		.uleb128 0x4
 10295 002c 24       		.uleb128 0x24
 10296 002d 00       		.byte	0
 10297 002e 0B       		.uleb128 0xb
 10298 002f 0B       		.uleb128 0xb
 10299 0030 3E       		.uleb128 0x3e
 10300 0031 0B       		.uleb128 0xb
 10301 0032 03       		.uleb128 0x3
 10302 0033 08       		.uleb128 0x8
 10303 0034 00       		.byte	0
 10304 0035 00       		.byte	0
 10305 0036 05       		.uleb128 0x5
 10306 0037 0F       		.uleb128 0xf
 10307 0038 00       		.byte	0
 10308 0039 0B       		.uleb128 0xb
 10309 003a 0B       		.uleb128 0xb
 10310 003b 00       		.byte	0
 10311 003c 00       		.byte	0
 10312 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 286


 10313 003e 0F       		.uleb128 0xf
 10314 003f 00       		.byte	0
 10315 0040 0B       		.uleb128 0xb
 10316 0041 0B       		.uleb128 0xb
 10317 0042 49       		.uleb128 0x49
 10318 0043 13       		.uleb128 0x13
 10319 0044 00       		.byte	0
 10320 0045 00       		.byte	0
 10321 0046 07       		.uleb128 0x7
 10322 0047 26       		.uleb128 0x26
 10323 0048 00       		.byte	0
 10324 0049 49       		.uleb128 0x49
 10325 004a 13       		.uleb128 0x13
 10326 004b 00       		.byte	0
 10327 004c 00       		.byte	0
 10328 004d 08       		.uleb128 0x8
 10329 004e 35       		.uleb128 0x35
 10330 004f 00       		.byte	0
 10331 0050 49       		.uleb128 0x49
 10332 0051 13       		.uleb128 0x13
 10333 0052 00       		.byte	0
 10334 0053 00       		.byte	0
 10335 0054 09       		.uleb128 0x9
 10336 0055 15       		.uleb128 0x15
 10337 0056 01       		.byte	0x1
 10338 0057 27       		.uleb128 0x27
 10339 0058 19       		.uleb128 0x19
 10340 0059 01       		.uleb128 0x1
 10341 005a 13       		.uleb128 0x13
 10342 005b 00       		.byte	0
 10343 005c 00       		.byte	0
 10344 005d 0A       		.uleb128 0xa
 10345 005e 05       		.uleb128 0x5
 10346 005f 00       		.byte	0
 10347 0060 49       		.uleb128 0x49
 10348 0061 13       		.uleb128 0x13
 10349 0062 00       		.byte	0
 10350 0063 00       		.byte	0
 10351 0064 0B       		.uleb128 0xb
 10352 0065 01       		.uleb128 0x1
 10353 0066 01       		.byte	0x1
 10354 0067 49       		.uleb128 0x49
 10355 0068 13       		.uleb128 0x13
 10356 0069 01       		.uleb128 0x1
 10357 006a 13       		.uleb128 0x13
 10358 006b 00       		.byte	0
 10359 006c 00       		.byte	0
 10360 006d 0C       		.uleb128 0xc
 10361 006e 21       		.uleb128 0x21
 10362 006f 00       		.byte	0
 10363 0070 49       		.uleb128 0x49
 10364 0071 13       		.uleb128 0x13
 10365 0072 2F       		.uleb128 0x2f
 10366 0073 0B       		.uleb128 0xb
 10367 0074 00       		.byte	0
 10368 0075 00       		.byte	0
 10369 0076 0D       		.uleb128 0xd
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 287


 10370 0077 13       		.uleb128 0x13
 10371 0078 01       		.byte	0x1
 10372 0079 03       		.uleb128 0x3
 10373 007a 0E       		.uleb128 0xe
 10374 007b 0B       		.uleb128 0xb
 10375 007c 0B       		.uleb128 0xb
 10376 007d 3A       		.uleb128 0x3a
 10377 007e 0B       		.uleb128 0xb
 10378 007f 3B       		.uleb128 0x3b
 10379 0080 0B       		.uleb128 0xb
 10380 0081 01       		.uleb128 0x1
 10381 0082 13       		.uleb128 0x13
 10382 0083 00       		.byte	0
 10383 0084 00       		.byte	0
 10384 0085 0E       		.uleb128 0xe
 10385 0086 0D       		.uleb128 0xd
 10386 0087 00       		.byte	0
 10387 0088 03       		.uleb128 0x3
 10388 0089 0E       		.uleb128 0xe
 10389 008a 3A       		.uleb128 0x3a
 10390 008b 0B       		.uleb128 0xb
 10391 008c 3B       		.uleb128 0x3b
 10392 008d 0B       		.uleb128 0xb
 10393 008e 49       		.uleb128 0x49
 10394 008f 13       		.uleb128 0x13
 10395 0090 38       		.uleb128 0x38
 10396 0091 0B       		.uleb128 0xb
 10397 0092 00       		.byte	0
 10398 0093 00       		.byte	0
 10399 0094 0F       		.uleb128 0xf
 10400 0095 04       		.uleb128 0x4
 10401 0096 01       		.byte	0x1
 10402 0097 0B       		.uleb128 0xb
 10403 0098 0B       		.uleb128 0xb
 10404 0099 49       		.uleb128 0x49
 10405 009a 13       		.uleb128 0x13
 10406 009b 3A       		.uleb128 0x3a
 10407 009c 0B       		.uleb128 0xb
 10408 009d 3B       		.uleb128 0x3b
 10409 009e 0B       		.uleb128 0xb
 10410 009f 01       		.uleb128 0x1
 10411 00a0 13       		.uleb128 0x13
 10412 00a1 00       		.byte	0
 10413 00a2 00       		.byte	0
 10414 00a3 10       		.uleb128 0x10
 10415 00a4 28       		.uleb128 0x28
 10416 00a5 00       		.byte	0
 10417 00a6 03       		.uleb128 0x3
 10418 00a7 0E       		.uleb128 0xe
 10419 00a8 1C       		.uleb128 0x1c
 10420 00a9 0B       		.uleb128 0xb
 10421 00aa 00       		.byte	0
 10422 00ab 00       		.byte	0
 10423 00ac 11       		.uleb128 0x11
 10424 00ad 13       		.uleb128 0x13
 10425 00ae 01       		.byte	0x1
 10426 00af 03       		.uleb128 0x3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 288


 10427 00b0 0E       		.uleb128 0xe
 10428 00b1 0B       		.uleb128 0xb
 10429 00b2 0B       		.uleb128 0xb
 10430 00b3 3A       		.uleb128 0x3a
 10431 00b4 0B       		.uleb128 0xb
 10432 00b5 3B       		.uleb128 0x3b
 10433 00b6 05       		.uleb128 0x5
 10434 00b7 01       		.uleb128 0x1
 10435 00b8 13       		.uleb128 0x13
 10436 00b9 00       		.byte	0
 10437 00ba 00       		.byte	0
 10438 00bb 12       		.uleb128 0x12
 10439 00bc 0D       		.uleb128 0xd
 10440 00bd 00       		.byte	0
 10441 00be 03       		.uleb128 0x3
 10442 00bf 0E       		.uleb128 0xe
 10443 00c0 3A       		.uleb128 0x3a
 10444 00c1 0B       		.uleb128 0xb
 10445 00c2 3B       		.uleb128 0x3b
 10446 00c3 05       		.uleb128 0x5
 10447 00c4 49       		.uleb128 0x49
 10448 00c5 13       		.uleb128 0x13
 10449 00c6 38       		.uleb128 0x38
 10450 00c7 0B       		.uleb128 0xb
 10451 00c8 00       		.byte	0
 10452 00c9 00       		.byte	0
 10453 00ca 13       		.uleb128 0x13
 10454 00cb 16       		.uleb128 0x16
 10455 00cc 00       		.byte	0
 10456 00cd 03       		.uleb128 0x3
 10457 00ce 0E       		.uleb128 0xe
 10458 00cf 3A       		.uleb128 0x3a
 10459 00d0 0B       		.uleb128 0xb
 10460 00d1 3B       		.uleb128 0x3b
 10461 00d2 05       		.uleb128 0x5
 10462 00d3 49       		.uleb128 0x49
 10463 00d4 13       		.uleb128 0x13
 10464 00d5 00       		.byte	0
 10465 00d6 00       		.byte	0
 10466 00d7 14       		.uleb128 0x14
 10467 00d8 2E       		.uleb128 0x2e
 10468 00d9 01       		.byte	0x1
 10469 00da 03       		.uleb128 0x3
 10470 00db 0E       		.uleb128 0xe
 10471 00dc 3A       		.uleb128 0x3a
 10472 00dd 0B       		.uleb128 0xb
 10473 00de 3B       		.uleb128 0x3b
 10474 00df 0B       		.uleb128 0xb
 10475 00e0 27       		.uleb128 0x27
 10476 00e1 19       		.uleb128 0x19
 10477 00e2 20       		.uleb128 0x20
 10478 00e3 0B       		.uleb128 0xb
 10479 00e4 01       		.uleb128 0x1
 10480 00e5 13       		.uleb128 0x13
 10481 00e6 00       		.byte	0
 10482 00e7 00       		.byte	0
 10483 00e8 15       		.uleb128 0x15
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 289


 10484 00e9 34       		.uleb128 0x34
 10485 00ea 00       		.byte	0
 10486 00eb 03       		.uleb128 0x3
 10487 00ec 0E       		.uleb128 0xe
 10488 00ed 3A       		.uleb128 0x3a
 10489 00ee 0B       		.uleb128 0xb
 10490 00ef 3B       		.uleb128 0x3b
 10491 00f0 0B       		.uleb128 0xb
 10492 00f1 49       		.uleb128 0x49
 10493 00f2 13       		.uleb128 0x13
 10494 00f3 00       		.byte	0
 10495 00f4 00       		.byte	0
 10496 00f5 16       		.uleb128 0x16
 10497 00f6 2E       		.uleb128 0x2e
 10498 00f7 01       		.byte	0x1
 10499 00f8 03       		.uleb128 0x3
 10500 00f9 0E       		.uleb128 0xe
 10501 00fa 3A       		.uleb128 0x3a
 10502 00fb 0B       		.uleb128 0xb
 10503 00fc 3B       		.uleb128 0x3b
 10504 00fd 0B       		.uleb128 0xb
 10505 00fe 27       		.uleb128 0x27
 10506 00ff 19       		.uleb128 0x19
 10507 0100 49       		.uleb128 0x49
 10508 0101 13       		.uleb128 0x13
 10509 0102 20       		.uleb128 0x20
 10510 0103 0B       		.uleb128 0xb
 10511 0104 01       		.uleb128 0x1
 10512 0105 13       		.uleb128 0x13
 10513 0106 00       		.byte	0
 10514 0107 00       		.byte	0
 10515 0108 17       		.uleb128 0x17
 10516 0109 05       		.uleb128 0x5
 10517 010a 00       		.byte	0
 10518 010b 03       		.uleb128 0x3
 10519 010c 0E       		.uleb128 0xe
 10520 010d 3A       		.uleb128 0x3a
 10521 010e 0B       		.uleb128 0xb
 10522 010f 3B       		.uleb128 0x3b
 10523 0110 0B       		.uleb128 0xb
 10524 0111 49       		.uleb128 0x49
 10525 0112 13       		.uleb128 0x13
 10526 0113 00       		.byte	0
 10527 0114 00       		.byte	0
 10528 0115 18       		.uleb128 0x18
 10529 0116 2E       		.uleb128 0x2e
 10530 0117 01       		.byte	0x1
 10531 0118 03       		.uleb128 0x3
 10532 0119 0E       		.uleb128 0xe
 10533 011a 3A       		.uleb128 0x3a
 10534 011b 0B       		.uleb128 0xb
 10535 011c 3B       		.uleb128 0x3b
 10536 011d 05       		.uleb128 0x5
 10537 011e 27       		.uleb128 0x27
 10538 011f 19       		.uleb128 0x19
 10539 0120 49       		.uleb128 0x49
 10540 0121 13       		.uleb128 0x13
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 290


 10541 0122 11       		.uleb128 0x11
 10542 0123 01       		.uleb128 0x1
 10543 0124 12       		.uleb128 0x12
 10544 0125 06       		.uleb128 0x6
 10545 0126 40       		.uleb128 0x40
 10546 0127 18       		.uleb128 0x18
 10547 0128 9742     		.uleb128 0x2117
 10548 012a 19       		.uleb128 0x19
 10549 012b 01       		.uleb128 0x1
 10550 012c 13       		.uleb128 0x13
 10551 012d 00       		.byte	0
 10552 012e 00       		.byte	0
 10553 012f 19       		.uleb128 0x19
 10554 0130 05       		.uleb128 0x5
 10555 0131 00       		.byte	0
 10556 0132 03       		.uleb128 0x3
 10557 0133 0E       		.uleb128 0xe
 10558 0134 3A       		.uleb128 0x3a
 10559 0135 0B       		.uleb128 0xb
 10560 0136 3B       		.uleb128 0x3b
 10561 0137 05       		.uleb128 0x5
 10562 0138 49       		.uleb128 0x49
 10563 0139 13       		.uleb128 0x13
 10564 013a 02       		.uleb128 0x2
 10565 013b 17       		.uleb128 0x17
 10566 013c 00       		.byte	0
 10567 013d 00       		.byte	0
 10568 013e 1A       		.uleb128 0x1a
 10569 013f 34       		.uleb128 0x34
 10570 0140 00       		.byte	0
 10571 0141 03       		.uleb128 0x3
 10572 0142 0E       		.uleb128 0xe
 10573 0143 3A       		.uleb128 0x3a
 10574 0144 0B       		.uleb128 0xb
 10575 0145 3B       		.uleb128 0x3b
 10576 0146 05       		.uleb128 0x5
 10577 0147 49       		.uleb128 0x49
 10578 0148 13       		.uleb128 0x13
 10579 0149 02       		.uleb128 0x2
 10580 014a 17       		.uleb128 0x17
 10581 014b 00       		.byte	0
 10582 014c 00       		.byte	0
 10583 014d 1B       		.uleb128 0x1b
 10584 014e 1D       		.uleb128 0x1d
 10585 014f 01       		.byte	0x1
 10586 0150 31       		.uleb128 0x31
 10587 0151 13       		.uleb128 0x13
 10588 0152 11       		.uleb128 0x11
 10589 0153 01       		.uleb128 0x1
 10590 0154 12       		.uleb128 0x12
 10591 0155 06       		.uleb128 0x6
 10592 0156 58       		.uleb128 0x58
 10593 0157 0B       		.uleb128 0xb
 10594 0158 59       		.uleb128 0x59
 10595 0159 05       		.uleb128 0x5
 10596 015a 00       		.byte	0
 10597 015b 00       		.byte	0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 291


 10598 015c 1C       		.uleb128 0x1c
 10599 015d 0B       		.uleb128 0xb
 10600 015e 01       		.byte	0x1
 10601 015f 11       		.uleb128 0x11
 10602 0160 01       		.uleb128 0x1
 10603 0161 12       		.uleb128 0x12
 10604 0162 06       		.uleb128 0x6
 10605 0163 00       		.byte	0
 10606 0164 00       		.byte	0
 10607 0165 1D       		.uleb128 0x1d
 10608 0166 34       		.uleb128 0x34
 10609 0167 00       		.byte	0
 10610 0168 31       		.uleb128 0x31
 10611 0169 13       		.uleb128 0x13
 10612 016a 00       		.byte	0
 10613 016b 00       		.byte	0
 10614 016c 1E       		.uleb128 0x1e
 10615 016d 2E       		.uleb128 0x2e
 10616 016e 01       		.byte	0x1
 10617 016f 03       		.uleb128 0x3
 10618 0170 0E       		.uleb128 0xe
 10619 0171 3A       		.uleb128 0x3a
 10620 0172 0B       		.uleb128 0xb
 10621 0173 3B       		.uleb128 0x3b
 10622 0174 05       		.uleb128 0x5
 10623 0175 27       		.uleb128 0x27
 10624 0176 19       		.uleb128 0x19
 10625 0177 11       		.uleb128 0x11
 10626 0178 01       		.uleb128 0x1
 10627 0179 12       		.uleb128 0x12
 10628 017a 06       		.uleb128 0x6
 10629 017b 40       		.uleb128 0x40
 10630 017c 18       		.uleb128 0x18
 10631 017d 9742     		.uleb128 0x2117
 10632 017f 19       		.uleb128 0x19
 10633 0180 01       		.uleb128 0x1
 10634 0181 13       		.uleb128 0x13
 10635 0182 00       		.byte	0
 10636 0183 00       		.byte	0
 10637 0184 1F       		.uleb128 0x1f
 10638 0185 898201   		.uleb128 0x4109
 10639 0188 00       		.byte	0
 10640 0189 11       		.uleb128 0x11
 10641 018a 01       		.uleb128 0x1
 10642 018b 31       		.uleb128 0x31
 10643 018c 13       		.uleb128 0x13
 10644 018d 00       		.byte	0
 10645 018e 00       		.byte	0
 10646 018f 20       		.uleb128 0x20
 10647 0190 898201   		.uleb128 0x4109
 10648 0193 01       		.byte	0x1
 10649 0194 11       		.uleb128 0x11
 10650 0195 01       		.uleb128 0x1
 10651 0196 31       		.uleb128 0x31
 10652 0197 13       		.uleb128 0x13
 10653 0198 00       		.byte	0
 10654 0199 00       		.byte	0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 292


 10655 019a 21       		.uleb128 0x21
 10656 019b 8A8201   		.uleb128 0x410a
 10657 019e 00       		.byte	0
 10658 019f 02       		.uleb128 0x2
 10659 01a0 18       		.uleb128 0x18
 10660 01a1 9142     		.uleb128 0x2111
 10661 01a3 18       		.uleb128 0x18
 10662 01a4 00       		.byte	0
 10663 01a5 00       		.byte	0
 10664 01a6 22       		.uleb128 0x22
 10665 01a7 05       		.uleb128 0x5
 10666 01a8 00       		.byte	0
 10667 01a9 03       		.uleb128 0x3
 10668 01aa 0E       		.uleb128 0xe
 10669 01ab 3A       		.uleb128 0x3a
 10670 01ac 0B       		.uleb128 0xb
 10671 01ad 3B       		.uleb128 0x3b
 10672 01ae 05       		.uleb128 0x5
 10673 01af 49       		.uleb128 0x49
 10674 01b0 13       		.uleb128 0x13
 10675 01b1 02       		.uleb128 0x2
 10676 01b2 18       		.uleb128 0x18
 10677 01b3 00       		.byte	0
 10678 01b4 00       		.byte	0
 10679 01b5 23       		.uleb128 0x23
 10680 01b6 34       		.uleb128 0x34
 10681 01b7 00       		.byte	0
 10682 01b8 03       		.uleb128 0x3
 10683 01b9 0E       		.uleb128 0xe
 10684 01ba 3A       		.uleb128 0x3a
 10685 01bb 0B       		.uleb128 0xb
 10686 01bc 3B       		.uleb128 0x3b
 10687 01bd 05       		.uleb128 0x5
 10688 01be 49       		.uleb128 0x49
 10689 01bf 13       		.uleb128 0x13
 10690 01c0 02       		.uleb128 0x2
 10691 01c1 18       		.uleb128 0x18
 10692 01c2 00       		.byte	0
 10693 01c3 00       		.byte	0
 10694 01c4 24       		.uleb128 0x24
 10695 01c5 34       		.uleb128 0x34
 10696 01c6 00       		.byte	0
 10697 01c7 03       		.uleb128 0x3
 10698 01c8 08       		.uleb128 0x8
 10699 01c9 3A       		.uleb128 0x3a
 10700 01ca 0B       		.uleb128 0xb
 10701 01cb 3B       		.uleb128 0x3b
 10702 01cc 05       		.uleb128 0x5
 10703 01cd 49       		.uleb128 0x49
 10704 01ce 13       		.uleb128 0x13
 10705 01cf 02       		.uleb128 0x2
 10706 01d0 17       		.uleb128 0x17
 10707 01d1 00       		.byte	0
 10708 01d2 00       		.byte	0
 10709 01d3 25       		.uleb128 0x25
 10710 01d4 898201   		.uleb128 0x4109
 10711 01d7 01       		.byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 293


 10712 01d8 11       		.uleb128 0x11
 10713 01d9 01       		.uleb128 0x1
 10714 01da 31       		.uleb128 0x31
 10715 01db 13       		.uleb128 0x13
 10716 01dc 01       		.uleb128 0x1
 10717 01dd 13       		.uleb128 0x13
 10718 01de 00       		.byte	0
 10719 01df 00       		.byte	0
 10720 01e0 26       		.uleb128 0x26
 10721 01e1 2E       		.uleb128 0x2e
 10722 01e2 01       		.byte	0x1
 10723 01e3 03       		.uleb128 0x3
 10724 01e4 0E       		.uleb128 0xe
 10725 01e5 3A       		.uleb128 0x3a
 10726 01e6 0B       		.uleb128 0xb
 10727 01e7 3B       		.uleb128 0x3b
 10728 01e8 05       		.uleb128 0x5
 10729 01e9 27       		.uleb128 0x27
 10730 01ea 19       		.uleb128 0x19
 10731 01eb 8701     		.uleb128 0x87
 10732 01ed 19       		.uleb128 0x19
 10733 01ee 11       		.uleb128 0x11
 10734 01ef 01       		.uleb128 0x1
 10735 01f0 12       		.uleb128 0x12
 10736 01f1 06       		.uleb128 0x6
 10737 01f2 40       		.uleb128 0x40
 10738 01f3 18       		.uleb128 0x18
 10739 01f4 9742     		.uleb128 0x2117
 10740 01f6 19       		.uleb128 0x19
 10741 01f7 01       		.uleb128 0x1
 10742 01f8 13       		.uleb128 0x13
 10743 01f9 00       		.byte	0
 10744 01fa 00       		.byte	0
 10745 01fb 27       		.uleb128 0x27
 10746 01fc 2E       		.uleb128 0x2e
 10747 01fd 01       		.byte	0x1
 10748 01fe 3F       		.uleb128 0x3f
 10749 01ff 19       		.uleb128 0x19
 10750 0200 03       		.uleb128 0x3
 10751 0201 0E       		.uleb128 0xe
 10752 0202 3A       		.uleb128 0x3a
 10753 0203 0B       		.uleb128 0xb
 10754 0204 3B       		.uleb128 0x3b
 10755 0205 05       		.uleb128 0x5
 10756 0206 27       		.uleb128 0x27
 10757 0207 19       		.uleb128 0x19
 10758 0208 49       		.uleb128 0x49
 10759 0209 13       		.uleb128 0x13
 10760 020a 11       		.uleb128 0x11
 10761 020b 01       		.uleb128 0x1
 10762 020c 12       		.uleb128 0x12
 10763 020d 06       		.uleb128 0x6
 10764 020e 40       		.uleb128 0x40
 10765 020f 18       		.uleb128 0x18
 10766 0210 9742     		.uleb128 0x2117
 10767 0212 19       		.uleb128 0x19
 10768 0213 01       		.uleb128 0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 294


 10769 0214 13       		.uleb128 0x13
 10770 0215 00       		.byte	0
 10771 0216 00       		.byte	0
 10772 0217 28       		.uleb128 0x28
 10773 0218 0B       		.uleb128 0xb
 10774 0219 01       		.byte	0x1
 10775 021a 11       		.uleb128 0x11
 10776 021b 01       		.uleb128 0x1
 10777 021c 12       		.uleb128 0x12
 10778 021d 06       		.uleb128 0x6
 10779 021e 01       		.uleb128 0x1
 10780 021f 13       		.uleb128 0x13
 10781 0220 00       		.byte	0
 10782 0221 00       		.byte	0
 10783 0222 29       		.uleb128 0x29
 10784 0223 2E       		.uleb128 0x2e
 10785 0224 01       		.byte	0x1
 10786 0225 3F       		.uleb128 0x3f
 10787 0226 19       		.uleb128 0x19
 10788 0227 03       		.uleb128 0x3
 10789 0228 0E       		.uleb128 0xe
 10790 0229 3A       		.uleb128 0x3a
 10791 022a 0B       		.uleb128 0xb
 10792 022b 3B       		.uleb128 0x3b
 10793 022c 05       		.uleb128 0x5
 10794 022d 27       		.uleb128 0x27
 10795 022e 19       		.uleb128 0x19
 10796 022f 11       		.uleb128 0x11
 10797 0230 01       		.uleb128 0x1
 10798 0231 12       		.uleb128 0x12
 10799 0232 06       		.uleb128 0x6
 10800 0233 40       		.uleb128 0x40
 10801 0234 18       		.uleb128 0x18
 10802 0235 9742     		.uleb128 0x2117
 10803 0237 19       		.uleb128 0x19
 10804 0238 01       		.uleb128 0x1
 10805 0239 13       		.uleb128 0x13
 10806 023a 00       		.byte	0
 10807 023b 00       		.byte	0
 10808 023c 2A       		.uleb128 0x2a
 10809 023d 1D       		.uleb128 0x1d
 10810 023e 01       		.byte	0x1
 10811 023f 31       		.uleb128 0x31
 10812 0240 13       		.uleb128 0x13
 10813 0241 11       		.uleb128 0x11
 10814 0242 01       		.uleb128 0x1
 10815 0243 12       		.uleb128 0x12
 10816 0244 06       		.uleb128 0x6
 10817 0245 58       		.uleb128 0x58
 10818 0246 0B       		.uleb128 0xb
 10819 0247 59       		.uleb128 0x59
 10820 0248 05       		.uleb128 0x5
 10821 0249 01       		.uleb128 0x1
 10822 024a 13       		.uleb128 0x13
 10823 024b 00       		.byte	0
 10824 024c 00       		.byte	0
 10825 024d 2B       		.uleb128 0x2b
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 295


 10826 024e 34       		.uleb128 0x34
 10827 024f 00       		.byte	0
 10828 0250 03       		.uleb128 0x3
 10829 0251 0E       		.uleb128 0xe
 10830 0252 3A       		.uleb128 0x3a
 10831 0253 0B       		.uleb128 0xb
 10832 0254 3B       		.uleb128 0x3b
 10833 0255 05       		.uleb128 0x5
 10834 0256 49       		.uleb128 0x49
 10835 0257 13       		.uleb128 0x13
 10836 0258 00       		.byte	0
 10837 0259 00       		.byte	0
 10838 025a 2C       		.uleb128 0x2c
 10839 025b 05       		.uleb128 0x5
 10840 025c 00       		.byte	0
 10841 025d 31       		.uleb128 0x31
 10842 025e 13       		.uleb128 0x13
 10843 025f 02       		.uleb128 0x2
 10844 0260 17       		.uleb128 0x17
 10845 0261 00       		.byte	0
 10846 0262 00       		.byte	0
 10847 0263 2D       		.uleb128 0x2d
 10848 0264 2E       		.uleb128 0x2e
 10849 0265 00       		.byte	0
 10850 0266 3F       		.uleb128 0x3f
 10851 0267 19       		.uleb128 0x19
 10852 0268 03       		.uleb128 0x3
 10853 0269 0E       		.uleb128 0xe
 10854 026a 3A       		.uleb128 0x3a
 10855 026b 0B       		.uleb128 0xb
 10856 026c 3B       		.uleb128 0x3b
 10857 026d 05       		.uleb128 0x5
 10858 026e 27       		.uleb128 0x27
 10859 026f 19       		.uleb128 0x19
 10860 0270 11       		.uleb128 0x11
 10861 0271 01       		.uleb128 0x1
 10862 0272 12       		.uleb128 0x12
 10863 0273 06       		.uleb128 0x6
 10864 0274 40       		.uleb128 0x40
 10865 0275 18       		.uleb128 0x18
 10866 0276 9742     		.uleb128 0x2117
 10867 0278 19       		.uleb128 0x19
 10868 0279 00       		.byte	0
 10869 027a 00       		.byte	0
 10870 027b 2E       		.uleb128 0x2e
 10871 027c 34       		.uleb128 0x34
 10872 027d 00       		.byte	0
 10873 027e 03       		.uleb128 0x3
 10874 027f 0E       		.uleb128 0xe
 10875 0280 3A       		.uleb128 0x3a
 10876 0281 0B       		.uleb128 0xb
 10877 0282 3B       		.uleb128 0x3b
 10878 0283 05       		.uleb128 0x5
 10879 0284 49       		.uleb128 0x49
 10880 0285 13       		.uleb128 0x13
 10881 0286 1C       		.uleb128 0x1c
 10882 0287 0B       		.uleb128 0xb
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 296


 10883 0288 00       		.byte	0
 10884 0289 00       		.byte	0
 10885 028a 2F       		.uleb128 0x2f
 10886 028b 2E       		.uleb128 0x2e
 10887 028c 00       		.byte	0
 10888 028d 3F       		.uleb128 0x3f
 10889 028e 19       		.uleb128 0x19
 10890 028f 03       		.uleb128 0x3
 10891 0290 0E       		.uleb128 0xe
 10892 0291 3A       		.uleb128 0x3a
 10893 0292 0B       		.uleb128 0xb
 10894 0293 3B       		.uleb128 0x3b
 10895 0294 05       		.uleb128 0x5
 10896 0295 27       		.uleb128 0x27
 10897 0296 19       		.uleb128 0x19
 10898 0297 49       		.uleb128 0x49
 10899 0298 13       		.uleb128 0x13
 10900 0299 11       		.uleb128 0x11
 10901 029a 01       		.uleb128 0x1
 10902 029b 12       		.uleb128 0x12
 10903 029c 06       		.uleb128 0x6
 10904 029d 40       		.uleb128 0x40
 10905 029e 18       		.uleb128 0x18
 10906 029f 9742     		.uleb128 0x2117
 10907 02a1 19       		.uleb128 0x19
 10908 02a2 00       		.byte	0
 10909 02a3 00       		.byte	0
 10910 02a4 30       		.uleb128 0x30
 10911 02a5 0B       		.uleb128 0xb
 10912 02a6 01       		.byte	0x1
 10913 02a7 55       		.uleb128 0x55
 10914 02a8 17       		.uleb128 0x17
 10915 02a9 00       		.byte	0
 10916 02aa 00       		.byte	0
 10917 02ab 31       		.uleb128 0x31
 10918 02ac 0B       		.uleb128 0xb
 10919 02ad 01       		.byte	0x1
 10920 02ae 55       		.uleb128 0x55
 10921 02af 17       		.uleb128 0x17
 10922 02b0 01       		.uleb128 0x1
 10923 02b1 13       		.uleb128 0x13
 10924 02b2 00       		.byte	0
 10925 02b3 00       		.byte	0
 10926 02b4 32       		.uleb128 0x32
 10927 02b5 34       		.uleb128 0x34
 10928 02b6 00       		.byte	0
 10929 02b7 03       		.uleb128 0x3
 10930 02b8 0E       		.uleb128 0xe
 10931 02b9 3A       		.uleb128 0x3a
 10932 02ba 0B       		.uleb128 0xb
 10933 02bb 3B       		.uleb128 0x3b
 10934 02bc 05       		.uleb128 0x5
 10935 02bd 49       		.uleb128 0x49
 10936 02be 13       		.uleb128 0x13
 10937 02bf 1C       		.uleb128 0x1c
 10938 02c0 0D       		.uleb128 0xd
 10939 02c1 00       		.byte	0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 297


 10940 02c2 00       		.byte	0
 10941 02c3 33       		.uleb128 0x33
 10942 02c4 34       		.uleb128 0x34
 10943 02c5 00       		.byte	0
 10944 02c6 03       		.uleb128 0x3
 10945 02c7 08       		.uleb128 0x8
 10946 02c8 3A       		.uleb128 0x3a
 10947 02c9 0B       		.uleb128 0xb
 10948 02ca 3B       		.uleb128 0x3b
 10949 02cb 05       		.uleb128 0x5
 10950 02cc 49       		.uleb128 0x49
 10951 02cd 13       		.uleb128 0x13
 10952 02ce 02       		.uleb128 0x2
 10953 02cf 18       		.uleb128 0x18
 10954 02d0 00       		.byte	0
 10955 02d1 00       		.byte	0
 10956 02d2 34       		.uleb128 0x34
 10957 02d3 34       		.uleb128 0x34
 10958 02d4 00       		.byte	0
 10959 02d5 03       		.uleb128 0x3
 10960 02d6 0E       		.uleb128 0xe
 10961 02d7 3A       		.uleb128 0x3a
 10962 02d8 0B       		.uleb128 0xb
 10963 02d9 3B       		.uleb128 0x3b
 10964 02da 05       		.uleb128 0x5
 10965 02db 49       		.uleb128 0x49
 10966 02dc 13       		.uleb128 0x13
 10967 02dd 3F       		.uleb128 0x3f
 10968 02de 19       		.uleb128 0x19
 10969 02df 3C       		.uleb128 0x3c
 10970 02e0 19       		.uleb128 0x19
 10971 02e1 00       		.byte	0
 10972 02e2 00       		.byte	0
 10973 02e3 35       		.uleb128 0x35
 10974 02e4 34       		.uleb128 0x34
 10975 02e5 00       		.byte	0
 10976 02e6 03       		.uleb128 0x3
 10977 02e7 0E       		.uleb128 0xe
 10978 02e8 3A       		.uleb128 0x3a
 10979 02e9 0B       		.uleb128 0xb
 10980 02ea 3B       		.uleb128 0x3b
 10981 02eb 05       		.uleb128 0x5
 10982 02ec 49       		.uleb128 0x49
 10983 02ed 13       		.uleb128 0x13
 10984 02ee 3F       		.uleb128 0x3f
 10985 02ef 19       		.uleb128 0x19
 10986 02f0 02       		.uleb128 0x2
 10987 02f1 18       		.uleb128 0x18
 10988 02f2 00       		.byte	0
 10989 02f3 00       		.byte	0
 10990 02f4 36       		.uleb128 0x36
 10991 02f5 2E       		.uleb128 0x2e
 10992 02f6 00       		.byte	0
 10993 02f7 3F       		.uleb128 0x3f
 10994 02f8 19       		.uleb128 0x19
 10995 02f9 3C       		.uleb128 0x3c
 10996 02fa 19       		.uleb128 0x19
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 298


 10997 02fb 6E       		.uleb128 0x6e
 10998 02fc 0E       		.uleb128 0xe
 10999 02fd 03       		.uleb128 0x3
 11000 02fe 0E       		.uleb128 0xe
 11001 02ff 3A       		.uleb128 0x3a
 11002 0300 0B       		.uleb128 0xb
 11003 0301 3B       		.uleb128 0x3b
 11004 0302 0B       		.uleb128 0xb
 11005 0303 00       		.byte	0
 11006 0304 00       		.byte	0
 11007 0305 37       		.uleb128 0x37
 11008 0306 2E       		.uleb128 0x2e
 11009 0307 00       		.byte	0
 11010 0308 3F       		.uleb128 0x3f
 11011 0309 19       		.uleb128 0x19
 11012 030a 3C       		.uleb128 0x3c
 11013 030b 19       		.uleb128 0x19
 11014 030c 6E       		.uleb128 0x6e
 11015 030d 0E       		.uleb128 0xe
 11016 030e 03       		.uleb128 0x3
 11017 030f 0E       		.uleb128 0xe
 11018 0310 3A       		.uleb128 0x3a
 11019 0311 0B       		.uleb128 0xb
 11020 0312 3B       		.uleb128 0x3b
 11021 0313 05       		.uleb128 0x5
 11022 0314 00       		.byte	0
 11023 0315 00       		.byte	0
 11024 0316 00       		.byte	0
 11025              		.section	.debug_loc,"",%progbits
 11026              	.Ldebug_loc0:
 11027              	.LLST0:
 11028 0000 00000000 		.4byte	.LVL0
 11029 0004 36000000 		.4byte	.LVL2
 11030 0008 0100     		.2byte	0x1
 11031 000a 50       		.byte	0x50
 11032 000b 36000000 		.4byte	.LVL2
 11033 000f 38000000 		.4byte	.LVL3
 11034 0013 0400     		.2byte	0x4
 11035 0015 F3       		.byte	0xf3
 11036 0016 01       		.uleb128 0x1
 11037 0017 50       		.byte	0x50
 11038 0018 9F       		.byte	0x9f
 11039 0019 38000000 		.4byte	.LVL3
 11040 001d 3A000000 		.4byte	.LVL4
 11041 0021 0100     		.2byte	0x1
 11042 0023 50       		.byte	0x50
 11043 0024 3A000000 		.4byte	.LVL4
 11044 0028 3C000000 		.4byte	.LVL5
 11045 002c 0100     		.2byte	0x1
 11046 002e 52       		.byte	0x52
 11047 002f 3C000000 		.4byte	.LVL5
 11048 0033 3E000000 		.4byte	.LVL6
 11049 0037 0100     		.2byte	0x1
 11050 0039 50       		.byte	0x50
 11051 003a 3E000000 		.4byte	.LVL6
 11052 003e 40000000 		.4byte	.LVL7
 11053 0042 0400     		.2byte	0x4
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 299


 11054 0044 F3       		.byte	0xf3
 11055 0045 01       		.uleb128 0x1
 11056 0046 50       		.byte	0x50
 11057 0047 9F       		.byte	0x9f
 11058 0048 40000000 		.4byte	.LVL7
 11059 004c 42000000 		.4byte	.LVL8
 11060 0050 0100     		.2byte	0x1
 11061 0052 50       		.byte	0x50
 11062 0053 42000000 		.4byte	.LVL8
 11063 0057 4C000000 		.4byte	.LFE148
 11064 005b 0400     		.2byte	0x4
 11065 005d F3       		.byte	0xf3
 11066 005e 01       		.uleb128 0x1
 11067 005f 50       		.byte	0x50
 11068 0060 9F       		.byte	0x9f
 11069 0061 00000000 		.4byte	0
 11070 0065 00000000 		.4byte	0
 11071              	.LLST1:
 11072 0069 00000000 		.4byte	.LVL0
 11073 006d 42000000 		.4byte	.LVL8
 11074 0071 0200     		.2byte	0x2
 11075 0073 30       		.byte	0x30
 11076 0074 9F       		.byte	0x9f
 11077 0075 42000000 		.4byte	.LVL8
 11078 0079 4C000000 		.4byte	.LFE148
 11079 007d 0100     		.2byte	0x1
 11080 007f 50       		.byte	0x50
 11081 0080 00000000 		.4byte	0
 11082 0084 00000000 		.4byte	0
 11083              	.LLST2:
 11084 0088 00000000 		.4byte	.LVL0
 11085 008c 36000000 		.4byte	.LVL2
 11086 0090 0100     		.2byte	0x1
 11087 0092 50       		.byte	0x50
 11088 0093 36000000 		.4byte	.LVL2
 11089 0097 38000000 		.4byte	.LVL3
 11090 009b 0400     		.2byte	0x4
 11091 009d F3       		.byte	0xf3
 11092 009e 01       		.uleb128 0x1
 11093 009f 50       		.byte	0x50
 11094 00a0 9F       		.byte	0x9f
 11095 00a1 38000000 		.4byte	.LVL3
 11096 00a5 3A000000 		.4byte	.LVL4
 11097 00a9 0100     		.2byte	0x1
 11098 00ab 50       		.byte	0x50
 11099 00ac 3A000000 		.4byte	.LVL4
 11100 00b0 3C000000 		.4byte	.LVL5
 11101 00b4 0100     		.2byte	0x1
 11102 00b6 52       		.byte	0x52
 11103 00b7 3C000000 		.4byte	.LVL5
 11104 00bb 3E000000 		.4byte	.LVL6
 11105 00bf 0100     		.2byte	0x1
 11106 00c1 50       		.byte	0x50
 11107 00c2 3E000000 		.4byte	.LVL6
 11108 00c6 40000000 		.4byte	.LVL7
 11109 00ca 0400     		.2byte	0x4
 11110 00cc F3       		.byte	0xf3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 300


 11111 00cd 01       		.uleb128 0x1
 11112 00ce 50       		.byte	0x50
 11113 00cf 9F       		.byte	0x9f
 11114 00d0 40000000 		.4byte	.LVL7
 11115 00d4 42000000 		.4byte	.LVL8
 11116 00d8 0100     		.2byte	0x1
 11117 00da 50       		.byte	0x50
 11118 00db 42000000 		.4byte	.LVL8
 11119 00df 4C000000 		.4byte	.LFE148
 11120 00e3 0400     		.2byte	0x4
 11121 00e5 F3       		.byte	0xf3
 11122 00e6 01       		.uleb128 0x1
 11123 00e7 50       		.byte	0x50
 11124 00e8 9F       		.byte	0x9f
 11125 00e9 00000000 		.4byte	0
 11126 00ed 00000000 		.4byte	0
 11127              	.LLST3:
 11128 00f1 00000000 		.4byte	.LVL9
 11129 00f5 06000000 		.4byte	.LVL11
 11130 00f9 0100     		.2byte	0x1
 11131 00fb 50       		.byte	0x50
 11132 00fc 06000000 		.4byte	.LVL11
 11133 0100 12000000 		.4byte	.LVL14
 11134 0104 0100     		.2byte	0x1
 11135 0106 50       		.byte	0x50
 11136 0107 00000000 		.4byte	0
 11137 010b 00000000 		.4byte	0
 11138              	.LLST4:
 11139 010f 00000000 		.4byte	.LVL9
 11140 0113 04000000 		.4byte	.LVL10
 11141 0117 0200     		.2byte	0x2
 11142 0119 30       		.byte	0x30
 11143 011a 9F       		.byte	0x9f
 11144 011b 04000000 		.4byte	.LVL10
 11145 011f 0E000000 		.4byte	.LVL13
 11146 0123 0100     		.2byte	0x1
 11147 0125 53       		.byte	0x53
 11148 0126 0E000000 		.4byte	.LVL13
 11149 012a 14000000 		.4byte	.LFE180
 11150 012e 0500     		.2byte	0x5
 11151 0130 73       		.byte	0x73
 11152 0131 00       		.sleb128 0
 11153 0132 32       		.byte	0x32
 11154 0133 25       		.byte	0x25
 11155 0134 9F       		.byte	0x9f
 11156 0135 00000000 		.4byte	0
 11157 0139 00000000 		.4byte	0
 11158              	.LLST5:
 11159 013d 22000000 		.4byte	.LVL15
 11160 0141 24000000 		.4byte	.LVL16
 11161 0145 0100     		.2byte	0x1
 11162 0147 52       		.byte	0x52
 11163 0148 00000000 		.4byte	0
 11164 014c 00000000 		.4byte	0
 11165              	.LLST6:
 11166 0150 00000000 		.4byte	.LVL17
 11167 0154 06000000 		.4byte	.LVL18
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 301


 11168 0158 0100     		.2byte	0x1
 11169 015a 50       		.byte	0x50
 11170 015b 06000000 		.4byte	.LVL18
 11171 015f 12000000 		.4byte	.LFE181
 11172 0163 0100     		.2byte	0x1
 11173 0165 54       		.byte	0x54
 11174 0166 00000000 		.4byte	0
 11175 016a 00000000 		.4byte	0
 11176              	.LLST7:
 11177 016e 00000000 		.4byte	.LVL21
 11178 0172 18000000 		.4byte	.LVL24
 11179 0176 0100     		.2byte	0x1
 11180 0178 50       		.byte	0x50
 11181 0179 18000000 		.4byte	.LVL24
 11182 017d 9E000000 		.4byte	.LFE138
 11183 0181 0100     		.2byte	0x1
 11184 0183 5A       		.byte	0x5a
 11185 0184 00000000 		.4byte	0
 11186 0188 00000000 		.4byte	0
 11187              	.LLST8:
 11188 018c 00000000 		.4byte	.LVL21
 11189 0190 16000000 		.4byte	.LVL23
 11190 0194 0100     		.2byte	0x1
 11191 0196 51       		.byte	0x51
 11192 0197 16000000 		.4byte	.LVL23
 11193 019b 9E000000 		.4byte	.LFE138
 11194 019f 0100     		.2byte	0x1
 11195 01a1 59       		.byte	0x59
 11196 01a2 00000000 		.4byte	0
 11197 01a6 00000000 		.4byte	0
 11198              	.LLST9:
 11199 01aa 00000000 		.4byte	.LVL21
 11200 01ae 14000000 		.4byte	.LVL22
 11201 01b2 0100     		.2byte	0x1
 11202 01b4 52       		.byte	0x52
 11203 01b5 14000000 		.4byte	.LVL22
 11204 01b9 28000000 		.4byte	.LVL26
 11205 01bd 0100     		.2byte	0x1
 11206 01bf 55       		.byte	0x55
 11207 01c0 28000000 		.4byte	.LVL26
 11208 01c4 30000000 		.4byte	.LVL28
 11209 01c8 0700     		.2byte	0x7
 11210 01ca 72       		.byte	0x72
 11211 01cb 81808080 		.sleb128 -1073741823
 11211      7C
 11212 01d0 9F       		.byte	0x9f
 11213 01d1 30000000 		.4byte	.LVL28
 11214 01d5 9E000000 		.4byte	.LFE138
 11215 01d9 0400     		.2byte	0x4
 11216 01db F3       		.byte	0xf3
 11217 01dc 01       		.uleb128 0x1
 11218 01dd 52       		.byte	0x52
 11219 01de 9F       		.byte	0x9f
 11220 01df 00000000 		.4byte	0
 11221 01e3 00000000 		.4byte	0
 11222              	.LLST10:
 11223 01e7 00000000 		.4byte	.LVL21
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 302


 11224 01eb 1B000000 		.4byte	.LVL25-1
 11225 01ef 0100     		.2byte	0x1
 11226 01f1 53       		.byte	0x53
 11227 01f2 1B000000 		.4byte	.LVL25-1
 11228 01f6 9E000000 		.4byte	.LFE138
 11229 01fa 0100     		.2byte	0x1
 11230 01fc 58       		.byte	0x58
 11231 01fd 00000000 		.4byte	0
 11232 0201 00000000 		.4byte	0
 11233              	.LLST11:
 11234 0205 00000000 		.4byte	.LVL21
 11235 0209 52000000 		.4byte	.LVL31
 11236 020d 0200     		.2byte	0x2
 11237 020f 91       		.byte	0x91
 11238 0210 00       		.sleb128 0
 11239 0211 52000000 		.4byte	.LVL31
 11240 0215 9E000000 		.4byte	.LFE138
 11241 0219 0100     		.2byte	0x1
 11242 021b 57       		.byte	0x57
 11243 021c 00000000 		.4byte	0
 11244 0220 00000000 		.4byte	0
 11245              	.LLST12:
 11246 0224 30000000 		.4byte	.LVL28
 11247 0228 48000000 		.4byte	.LVL30
 11248 022c 0100     		.2byte	0x1
 11249 022e 53       		.byte	0x53
 11250 022f 6C000000 		.4byte	.LVL34
 11251 0233 70000000 		.4byte	.LVL35
 11252 0237 0200     		.2byte	0x2
 11253 0239 30       		.byte	0x30
 11254 023a 9F       		.byte	0x9f
 11255 023b 70000000 		.4byte	.LVL35
 11256 023f 84000000 		.4byte	.LVL37
 11257 0243 0100     		.2byte	0x1
 11258 0245 53       		.byte	0x53
 11259 0246 00000000 		.4byte	0
 11260 024a 00000000 		.4byte	0
 11261              	.LLST13:
 11262 024e 02000000 		.4byte	.LVL39
 11263 0252 06000000 		.4byte	.LVL40
 11264 0256 0200     		.2byte	0x2
 11265 0258 30       		.byte	0x30
 11266 0259 9F       		.byte	0x9f
 11267 025a 06000000 		.4byte	.LVL40
 11268 025e 1C000000 		.4byte	.LVL43
 11269 0262 0100     		.2byte	0x1
 11270 0264 54       		.byte	0x54
 11271 0265 00000000 		.4byte	0
 11272 0269 00000000 		.4byte	0
 11273              	.LLST14:
 11274 026d 00000000 		.4byte	.LVL49
 11275 0271 07000000 		.4byte	.LVL50-1
 11276 0275 0100     		.2byte	0x1
 11277 0277 50       		.byte	0x50
 11278 0278 07000000 		.4byte	.LVL50-1
 11279 027c A4000000 		.4byte	.LVL54
 11280 0280 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 303


 11281 0282 54       		.byte	0x54
 11282 0283 A4000000 		.4byte	.LVL54
 11283 0287 AC000000 		.4byte	.LFE139
 11284 028b 0400     		.2byte	0x4
 11285 028d F3       		.byte	0xf3
 11286 028e 01       		.uleb128 0x1
 11287 028f 50       		.byte	0x50
 11288 0290 9F       		.byte	0x9f
 11289 0291 00000000 		.4byte	0
 11290 0295 00000000 		.4byte	0
 11291              	.LLST15:
 11292 0299 10000000 		.4byte	.LVL56
 11293 029d 34000000 		.4byte	.LVL59
 11294 02a1 0100     		.2byte	0x1
 11295 02a3 55       		.byte	0x55
 11296 02a4 00000000 		.4byte	0
 11297 02a8 00000000 		.4byte	0
 11298              	.LLST16:
 11299 02ac 00000000 		.4byte	.LVL60
 11300 02b0 02000000 		.4byte	.LVL61
 11301 02b4 0100     		.2byte	0x1
 11302 02b6 50       		.byte	0x50
 11303 02b7 02000000 		.4byte	.LVL61
 11304 02bb 28000000 		.4byte	.LFE173
 11305 02bf 0400     		.2byte	0x4
 11306 02c1 F3       		.byte	0xf3
 11307 02c2 01       		.uleb128 0x1
 11308 02c3 50       		.byte	0x50
 11309 02c4 9F       		.byte	0x9f
 11310 02c5 00000000 		.4byte	0
 11311 02c9 00000000 		.4byte	0
 11312              	.LLST17:
 11313 02cd 00000000 		.4byte	.LVL63
 11314 02d1 10000000 		.4byte	.LVL65
 11315 02d5 0100     		.2byte	0x1
 11316 02d7 50       		.byte	0x50
 11317 02d8 10000000 		.4byte	.LVL65
 11318 02dc 2E000000 		.4byte	.LVL69
 11319 02e0 0100     		.2byte	0x1
 11320 02e2 54       		.byte	0x54
 11321 02e3 2E000000 		.4byte	.LVL69
 11322 02e7 68000000 		.4byte	.LFE194
 11323 02eb 0400     		.2byte	0x4
 11324 02ed F3       		.byte	0xf3
 11325 02ee 01       		.uleb128 0x1
 11326 02ef 50       		.byte	0x50
 11327 02f0 9F       		.byte	0x9f
 11328 02f1 00000000 		.4byte	0
 11329 02f5 00000000 		.4byte	0
 11330              	.LLST18:
 11331 02f9 00000000 		.4byte	.LVL63
 11332 02fd 15000000 		.4byte	.LVL66-1
 11333 0301 0100     		.2byte	0x1
 11334 0303 51       		.byte	0x51
 11335 0304 15000000 		.4byte	.LVL66-1
 11336 0308 64000000 		.4byte	.LVL74
 11337 030c 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 304


 11338 030e 56       		.byte	0x56
 11339 030f 64000000 		.4byte	.LVL74
 11340 0313 68000000 		.4byte	.LFE194
 11341 0317 0400     		.2byte	0x4
 11342 0319 F3       		.byte	0xf3
 11343 031a 01       		.uleb128 0x1
 11344 031b 51       		.byte	0x51
 11345 031c 9F       		.byte	0x9f
 11346 031d 00000000 		.4byte	0
 11347 0321 00000000 		.4byte	0
 11348              	.LLST19:
 11349 0325 2E000000 		.4byte	.LVL69
 11350 0329 64000000 		.4byte	.LVL74
 11351 032d 0100     		.2byte	0x1
 11352 032f 54       		.byte	0x54
 11353 0330 00000000 		.4byte	0
 11354 0334 00000000 		.4byte	0
 11355              	.LLST20:
 11356 0338 0C000000 		.4byte	.LVL64
 11357 033c 4E000000 		.4byte	.LVL72
 11358 0340 0100     		.2byte	0x1
 11359 0342 55       		.byte	0x55
 11360 0343 00000000 		.4byte	0
 11361 0347 00000000 		.4byte	0
 11362              	.LLST21:
 11363 034b 00000000 		.4byte	.LVL75
 11364 034f 07000000 		.4byte	.LVL76-1
 11365 0353 0100     		.2byte	0x1
 11366 0355 50       		.byte	0x50
 11367 0356 07000000 		.4byte	.LVL76-1
 11368 035a 22000000 		.4byte	.LFE185
 11369 035e 0100     		.2byte	0x1
 11370 0360 54       		.byte	0x54
 11371 0361 00000000 		.4byte	0
 11372 0365 00000000 		.4byte	0
 11373              	.LLST22:
 11374 0369 00000000 		.4byte	.LVL75
 11375 036d 07000000 		.4byte	.LVL76-1
 11376 0371 0100     		.2byte	0x1
 11377 0373 51       		.byte	0x51
 11378 0374 07000000 		.4byte	.LVL76-1
 11379 0378 22000000 		.4byte	.LFE185
 11380 037c 0400     		.2byte	0x4
 11381 037e F3       		.byte	0xf3
 11382 037f 01       		.uleb128 0x1
 11383 0380 51       		.byte	0x51
 11384 0381 9F       		.byte	0x9f
 11385 0382 00000000 		.4byte	0
 11386 0386 00000000 		.4byte	0
 11387              	.LLST23:
 11388 038a 0E000000 		.4byte	.LVL77
 11389 038e 20000000 		.4byte	.LVL79
 11390 0392 0100     		.2byte	0x1
 11391 0394 50       		.byte	0x50
 11392 0395 00000000 		.4byte	0
 11393 0399 00000000 		.4byte	0
 11394              	.LLST24:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 305


 11395 039d 00000000 		.4byte	.LVL80
 11396 03a1 10000000 		.4byte	.LVL81
 11397 03a5 0100     		.2byte	0x1
 11398 03a7 50       		.byte	0x50
 11399 03a8 10000000 		.4byte	.LVL81
 11400 03ac 62000000 		.4byte	.LFE137
 11401 03b0 0100     		.2byte	0x1
 11402 03b2 56       		.byte	0x56
 11403 03b3 00000000 		.4byte	0
 11404 03b7 00000000 		.4byte	0
 11405              	.LLST25:
 11406 03bb 00000000 		.4byte	.LVL80
 11407 03bf 13000000 		.4byte	.LVL82-1
 11408 03c3 0100     		.2byte	0x1
 11409 03c5 51       		.byte	0x51
 11410 03c6 13000000 		.4byte	.LVL82-1
 11411 03ca 62000000 		.4byte	.LFE137
 11412 03ce 0100     		.2byte	0x1
 11413 03d0 57       		.byte	0x57
 11414 03d1 00000000 		.4byte	0
 11415 03d5 00000000 		.4byte	0
 11416              	.LLST26:
 11417 03d9 00000000 		.4byte	.LVL80
 11418 03dd 13000000 		.4byte	.LVL82-1
 11419 03e1 0100     		.2byte	0x1
 11420 03e3 52       		.byte	0x52
 11421 03e4 13000000 		.4byte	.LVL82-1
 11422 03e8 62000000 		.4byte	.LFE137
 11423 03ec 0400     		.2byte	0x4
 11424 03ee F3       		.byte	0xf3
 11425 03ef 01       		.uleb128 0x1
 11426 03f0 52       		.byte	0x52
 11427 03f1 9F       		.byte	0x9f
 11428 03f2 00000000 		.4byte	0
 11429 03f6 00000000 		.4byte	0
 11430              	.LLST27:
 11431 03fa 00000000 		.4byte	.LVL80
 11432 03fe 13000000 		.4byte	.LVL82-1
 11433 0402 0100     		.2byte	0x1
 11434 0404 53       		.byte	0x53
 11435 0405 13000000 		.4byte	.LVL82-1
 11436 0409 62000000 		.4byte	.LFE137
 11437 040d 0100     		.2byte	0x1
 11438 040f 58       		.byte	0x58
 11439 0410 00000000 		.4byte	0
 11440 0414 00000000 		.4byte	0
 11441              	.LLST28:
 11442 0418 1E000000 		.4byte	.LVL84
 11443 041c 2A000000 		.4byte	.LVL85
 11444 0420 0100     		.2byte	0x1
 11445 0422 50       		.byte	0x50
 11446 0423 2A000000 		.4byte	.LVL85
 11447 0427 30000000 		.4byte	.LVL87
 11448 042b 0100     		.2byte	0x1
 11449 042d 54       		.byte	0x54
 11450 042e 32000000 		.4byte	.LVL88
 11451 0432 62000000 		.4byte	.LFE137
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 306


 11452 0436 0100     		.2byte	0x1
 11453 0438 54       		.byte	0x54
 11454 0439 00000000 		.4byte	0
 11455 043d 00000000 		.4byte	0
 11456              	.LLST29:
 11457 0441 54000000 		.4byte	.LVL90
 11458 0445 58000000 		.4byte	.LVL91
 11459 0449 0200     		.2byte	0x2
 11460 044b 31       		.byte	0x31
 11461 044c 9F       		.byte	0x9f
 11462 044d 5C000000 		.4byte	.LVL92
 11463 0451 62000000 		.4byte	.LFE137
 11464 0455 0100     		.2byte	0x1
 11465 0457 50       		.byte	0x50
 11466 0458 00000000 		.4byte	0
 11467 045c 00000000 		.4byte	0
 11468              	.LLST30:
 11469 0460 14000000 		.4byte	.LVL82
 11470 0464 1A000000 		.4byte	.LVL83
 11471 0468 0100     		.2byte	0x1
 11472 046a 50       		.byte	0x50
 11473 046b 1A000000 		.4byte	.LVL83
 11474 046f 30000000 		.4byte	.LVL87
 11475 0473 0100     		.2byte	0x1
 11476 0475 59       		.byte	0x59
 11477 0476 30000000 		.4byte	.LVL87
 11478 047a 32000000 		.4byte	.LVL88
 11479 047e 0100     		.2byte	0x1
 11480 0480 50       		.byte	0x50
 11481 0481 00000000 		.4byte	0
 11482 0485 00000000 		.4byte	0
 11483              	.LLST31:
 11484 0489 00000000 		.4byte	.LVL93
 11485 048d 07000000 		.4byte	.LVL94-1
 11486 0491 0100     		.2byte	0x1
 11487 0493 50       		.byte	0x50
 11488 0494 07000000 		.4byte	.LVL94-1
 11489 0498 10000000 		.4byte	.LVL95
 11490 049c 0100     		.2byte	0x1
 11491 049e 54       		.byte	0x54
 11492 049f 00000000 		.4byte	0
 11493 04a3 00000000 		.4byte	0
 11494              	.LLST32:
 11495 04a7 10000000 		.4byte	.LVL95
 11496 04ab A8000000 		.4byte	.LVL103
 11497 04af 0100     		.2byte	0x1
 11498 04b1 54       		.byte	0x54
 11499 04b2 00000000 		.4byte	0
 11500 04b6 00000000 		.4byte	0
 11501              	.LLST33:
 11502 04ba 00000000 		.4byte	.LVL104
 11503 04be 25000000 		.4byte	.LVL107-1
 11504 04c2 0100     		.2byte	0x1
 11505 04c4 50       		.byte	0x50
 11506 04c5 25000000 		.4byte	.LVL107-1
 11507 04c9 58000000 		.4byte	.LVL111
 11508 04cd 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 307


 11509 04cf 55       		.byte	0x55
 11510 04d0 58000000 		.4byte	.LVL111
 11511 04d4 5A000000 		.4byte	.LVL112
 11512 04d8 0100     		.2byte	0x1
 11513 04da 50       		.byte	0x50
 11514 04db 5A000000 		.4byte	.LVL112
 11515 04df 70000000 		.4byte	.LVL119
 11516 04e3 0100     		.2byte	0x1
 11517 04e5 55       		.byte	0x55
 11518 04e6 70000000 		.4byte	.LVL119
 11519 04ea 78000000 		.4byte	.LFE143
 11520 04ee 0400     		.2byte	0x4
 11521 04f0 F3       		.byte	0xf3
 11522 04f1 01       		.uleb128 0x1
 11523 04f2 50       		.byte	0x50
 11524 04f3 9F       		.byte	0x9f
 11525 04f4 00000000 		.4byte	0
 11526 04f8 00000000 		.4byte	0
 11527              	.LLST34:
 11528 04fc 28000000 		.4byte	.LVL108
 11529 0500 58000000 		.4byte	.LVL111
 11530 0504 0100     		.2byte	0x1
 11531 0506 54       		.byte	0x54
 11532 0507 5C000000 		.4byte	.LVL113
 11533 050b 70000000 		.4byte	.LVL119
 11534 050f 0100     		.2byte	0x1
 11535 0511 54       		.byte	0x54
 11536 0512 00000000 		.4byte	0
 11537 0516 00000000 		.4byte	0
 11538              	.LLST35:
 11539 051a 02000000 		.4byte	.LVL105
 11540 051e 25000000 		.4byte	.LVL107-1
 11541 0522 0100     		.2byte	0x1
 11542 0524 50       		.byte	0x50
 11543 0525 25000000 		.4byte	.LVL107-1
 11544 0529 58000000 		.4byte	.LVL111
 11545 052d 0100     		.2byte	0x1
 11546 052f 55       		.byte	0x55
 11547 0530 58000000 		.4byte	.LVL111
 11548 0534 5A000000 		.4byte	.LVL112
 11549 0538 0100     		.2byte	0x1
 11550 053a 50       		.byte	0x50
 11551 053b 5A000000 		.4byte	.LVL112
 11552 053f 70000000 		.4byte	.LVL119
 11553 0543 0100     		.2byte	0x1
 11554 0545 55       		.byte	0x55
 11555 0546 70000000 		.4byte	.LVL119
 11556 054a 78000000 		.4byte	.LFE143
 11557 054e 0400     		.2byte	0x4
 11558 0550 F3       		.byte	0xf3
 11559 0551 01       		.uleb128 0x1
 11560 0552 50       		.byte	0x50
 11561 0553 9F       		.byte	0x9f
 11562 0554 00000000 		.4byte	0
 11563 0558 00000000 		.4byte	0
 11564              	.LLST36:
 11565 055c 00000000 		.4byte	.LVL120
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 308


 11566 0560 07000000 		.4byte	.LVL121-1
 11567 0564 0100     		.2byte	0x1
 11568 0566 50       		.byte	0x50
 11569 0567 07000000 		.4byte	.LVL121-1
 11570 056b 10000000 		.4byte	.LVL122
 11571 056f 0100     		.2byte	0x1
 11572 0571 54       		.byte	0x54
 11573 0572 00000000 		.4byte	0
 11574 0576 00000000 		.4byte	0
 11575              	.LLST37:
 11576 057a 10000000 		.4byte	.LVL122
 11577 057e 12000000 		.4byte	.LVL123
 11578 0582 0100     		.2byte	0x1
 11579 0584 54       		.byte	0x54
 11580 0585 00000000 		.4byte	0
 11581 0589 00000000 		.4byte	0
 11582              	.LLST38:
 11583 058d 12000000 		.4byte	.LVL123
 11584 0591 1A000000 		.4byte	.LVL125
 11585 0595 0100     		.2byte	0x1
 11586 0597 54       		.byte	0x54
 11587 0598 1A000000 		.4byte	.LVL125
 11588 059c 20000000 		.4byte	.LFE144
 11589 05a0 0100     		.2byte	0x1
 11590 05a2 50       		.byte	0x50
 11591 05a3 00000000 		.4byte	0
 11592 05a7 00000000 		.4byte	0
 11593              	.LLST39:
 11594 05ab 00000000 		.4byte	.LVL126
 11595 05af 07000000 		.4byte	.LVL127-1
 11596 05b3 0100     		.2byte	0x1
 11597 05b5 50       		.byte	0x50
 11598 05b6 07000000 		.4byte	.LVL127-1
 11599 05ba 24000000 		.4byte	.LVL128
 11600 05be 0100     		.2byte	0x1
 11601 05c0 54       		.byte	0x54
 11602 05c1 00000000 		.4byte	0
 11603 05c5 00000000 		.4byte	0
 11604              	.LLST40:
 11605 05c9 24000000 		.4byte	.LVL128
 11606 05cd 2C000000 		.4byte	.LVL131
 11607 05d1 0100     		.2byte	0x1
 11608 05d3 54       		.byte	0x54
 11609 05d4 00000000 		.4byte	0
 11610 05d8 00000000 		.4byte	0
 11611              	.LLST41:
 11612 05dc 26000000 		.4byte	.LVL129
 11613 05e0 2A000000 		.4byte	.LVL130
 11614 05e4 0100     		.2byte	0x1
 11615 05e6 53       		.byte	0x53
 11616 05e7 00000000 		.4byte	0
 11617 05eb 00000000 		.4byte	0
 11618              	.LLST42:
 11619 05ef 00000000 		.4byte	.LVL132
 11620 05f3 25000000 		.4byte	.LVL135-1
 11621 05f7 0100     		.2byte	0x1
 11622 05f9 50       		.byte	0x50
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 309


 11623 05fa 25000000 		.4byte	.LVL135-1
 11624 05fe 2E000000 		.4byte	.LVL136
 11625 0602 0100     		.2byte	0x1
 11626 0604 54       		.byte	0x54
 11627 0605 00000000 		.4byte	0
 11628 0609 00000000 		.4byte	0
 11629              	.LLST43:
 11630 060d 00000000 		.4byte	.LVL132
 11631 0611 22000000 		.4byte	.LVL134
 11632 0615 0100     		.2byte	0x1
 11633 0617 51       		.byte	0x51
 11634 0618 22000000 		.4byte	.LVL134
 11635 061c 74000000 		.4byte	.LVL139
 11636 0620 0100     		.2byte	0x1
 11637 0622 55       		.byte	0x55
 11638 0623 74000000 		.4byte	.LVL139
 11639 0627 95000000 		.4byte	.LVL141-1
 11640 062b 0200     		.2byte	0x2
 11641 062d 74       		.byte	0x74
 11642 062e 2C       		.sleb128 44
 11643 062f 00000000 		.4byte	0
 11644 0633 00000000 		.4byte	0
 11645              	.LLST44:
 11646 0637 2E000000 		.4byte	.LVL136
 11647 063b D0000000 		.4byte	.LVL145
 11648 063f 0100     		.2byte	0x1
 11649 0641 54       		.byte	0x54
 11650 0642 00000000 		.4byte	0
 11651 0646 00000000 		.4byte	0
 11652              	.LLST45:
 11653 064a 30000000 		.4byte	.LVL137
 11654 064e 7C000000 		.4byte	.LVL140
 11655 0652 0100     		.2byte	0x1
 11656 0654 53       		.byte	0x53
 11657 0655 00000000 		.4byte	0
 11658 0659 00000000 		.4byte	0
 11659              	.LLST46:
 11660 065d 68000000 		.4byte	.LVL138
 11661 0661 7C000000 		.4byte	.LVL140
 11662 0665 0100     		.2byte	0x1
 11663 0667 53       		.byte	0x53
 11664 0668 00000000 		.4byte	0
 11665 066c 00000000 		.4byte	0
 11666              	.LLST47:
 11667 0670 00000000 		.4byte	.LVL132
 11668 0674 68000000 		.4byte	.LVL138
 11669 0678 0200     		.2byte	0x2
 11670 067a 30       		.byte	0x30
 11671 067b 9F       		.byte	0x9f
 11672 067c 68000000 		.4byte	.LVL138
 11673 0680 CA000000 		.4byte	.LVL143
 11674 0684 0100     		.2byte	0x1
 11675 0686 56       		.byte	0x56
 11676 0687 00000000 		.4byte	0
 11677 068b 00000000 		.4byte	0
 11678              	.LLST48:
 11679 068f 00000000 		.4byte	.LVL146
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 310


 11680 0693 27000000 		.4byte	.LVL148-1
 11681 0697 0100     		.2byte	0x1
 11682 0699 50       		.byte	0x50
 11683 069a 27000000 		.4byte	.LVL148-1
 11684 069e 80000000 		.4byte	.LVL153
 11685 06a2 0100     		.2byte	0x1
 11686 06a4 54       		.byte	0x54
 11687 06a5 80000000 		.4byte	.LVL153
 11688 06a9 88000000 		.4byte	.LFE149
 11689 06ad 0400     		.2byte	0x4
 11690 06af F3       		.byte	0xf3
 11691 06b0 01       		.uleb128 0x1
 11692 06b1 50       		.byte	0x50
 11693 06b2 9F       		.byte	0x9f
 11694 06b3 00000000 		.4byte	0
 11695 06b7 00000000 		.4byte	0
 11696              	.LLST49:
 11697 06bb 00000000 		.4byte	.LVL146
 11698 06bf 27000000 		.4byte	.LVL148-1
 11699 06c3 0100     		.2byte	0x1
 11700 06c5 50       		.byte	0x50
 11701 06c6 27000000 		.4byte	.LVL148-1
 11702 06ca 80000000 		.4byte	.LVL153
 11703 06ce 0100     		.2byte	0x1
 11704 06d0 54       		.byte	0x54
 11705 06d1 80000000 		.4byte	.LVL153
 11706 06d5 88000000 		.4byte	.LFE149
 11707 06d9 0400     		.2byte	0x4
 11708 06db F3       		.byte	0xf3
 11709 06dc 01       		.uleb128 0x1
 11710 06dd 50       		.byte	0x50
 11711 06de 9F       		.byte	0x9f
 11712 06df 00000000 		.4byte	0
 11713 06e3 00000000 		.4byte	0
 11714              	.LLST50:
 11715 06e7 00000000 		.4byte	.LVL154
 11716 06eb 1B000000 		.4byte	.LVL157-1
 11717 06ef 0100     		.2byte	0x1
 11718 06f1 50       		.byte	0x50
 11719 06f2 1B000000 		.4byte	.LVL157-1
 11720 06f6 98000000 		.4byte	.LVL166
 11721 06fa 0100     		.2byte	0x1
 11722 06fc 54       		.byte	0x54
 11723 06fd 98000000 		.4byte	.LVL166
 11724 0701 A4000000 		.4byte	.LFE150
 11725 0705 0400     		.2byte	0x4
 11726 0707 F3       		.byte	0xf3
 11727 0708 01       		.uleb128 0x1
 11728 0709 50       		.byte	0x50
 11729 070a 9F       		.byte	0x9f
 11730 070b 00000000 		.4byte	0
 11731 070f 00000000 		.4byte	0
 11732              	.LLST51:
 11733 0713 02000000 		.4byte	.LVL155
 11734 0717 54000000 		.4byte	.LVL159
 11735 071b 0200     		.2byte	0x2
 11736 071d 30       		.byte	0x30
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 311


 11737 071e 9F       		.byte	0x9f
 11738 071f 54000000 		.4byte	.LVL159
 11739 0723 80000000 		.4byte	.LVL162
 11740 0727 0100     		.2byte	0x1
 11741 0729 55       		.byte	0x55
 11742 072a 80000000 		.4byte	.LVL162
 11743 072e 90000000 		.4byte	.LVL164
 11744 0732 0200     		.2byte	0x2
 11745 0734 30       		.byte	0x30
 11746 0735 9F       		.byte	0x9f
 11747 0736 90000000 		.4byte	.LVL164
 11748 073a 98000000 		.4byte	.LVL166
 11749 073e 0100     		.2byte	0x1
 11750 0740 55       		.byte	0x55
 11751 0741 98000000 		.4byte	.LVL166
 11752 0745 A4000000 		.4byte	.LFE150
 11753 0749 0100     		.2byte	0x1
 11754 074b 50       		.byte	0x50
 11755 074c 00000000 		.4byte	0
 11756 0750 00000000 		.4byte	0
 11757              	.LLST52:
 11758 0754 02000000 		.4byte	.LVL155
 11759 0758 1B000000 		.4byte	.LVL157-1
 11760 075c 0100     		.2byte	0x1
 11761 075e 50       		.byte	0x50
 11762 075f 1B000000 		.4byte	.LVL157-1
 11763 0763 98000000 		.4byte	.LVL166
 11764 0767 0100     		.2byte	0x1
 11765 0769 54       		.byte	0x54
 11766 076a 98000000 		.4byte	.LVL166
 11767 076e A4000000 		.4byte	.LFE150
 11768 0772 0400     		.2byte	0x4
 11769 0774 F3       		.byte	0xf3
 11770 0775 01       		.uleb128 0x1
 11771 0776 50       		.byte	0x50
 11772 0777 9F       		.byte	0x9f
 11773 0778 00000000 		.4byte	0
 11774 077c 00000000 		.4byte	0
 11775              	.LLST53:
 11776 0780 90000000 		.4byte	.LVL164
 11777 0784 94000000 		.4byte	.LVL165
 11778 0788 0100     		.2byte	0x1
 11779 078a 57       		.byte	0x57
 11780 078b 00000000 		.4byte	0
 11781 078f 00000000 		.4byte	0
 11782              	.LLST54:
 11783 0793 16000000 		.4byte	.LVL167
 11784 0797 1D000000 		.4byte	.LVL168-1
 11785 079b 0100     		.2byte	0x1
 11786 079d 50       		.byte	0x50
 11787 079e 1E000000 		.4byte	.LVL168
 11788 07a2 49000000 		.4byte	.LVL169-1
 11789 07a6 0100     		.2byte	0x1
 11790 07a8 50       		.byte	0x50
 11791 07a9 4C000000 		.4byte	.LVL170
 11792 07ad 64000000 		.4byte	.LVL172
 11793 07b1 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 312


 11794 07b3 50       		.byte	0x50
 11795 07b4 00000000 		.4byte	0
 11796 07b8 00000000 		.4byte	0
 11797              	.LLST55:
 11798 07bc 00000000 		.4byte	.LVL177
 11799 07c0 0A000000 		.4byte	.LVL178
 11800 07c4 0100     		.2byte	0x1
 11801 07c6 50       		.byte	0x50
 11802 07c7 00000000 		.4byte	0
 11803 07cb 00000000 		.4byte	0
 11804              	.LLST56:
 11805 07cf 0A000000 		.4byte	.LVL178
 11806 07d3 1C000000 		.4byte	.LVL179
 11807 07d7 0100     		.2byte	0x1
 11808 07d9 53       		.byte	0x53
 11809 07da 1E000000 		.4byte	.LVL180
 11810 07de 28000000 		.4byte	.LFE158
 11811 07e2 0100     		.2byte	0x1
 11812 07e4 53       		.byte	0x53
 11813 07e5 00000000 		.4byte	0
 11814 07e9 00000000 		.4byte	0
 11815              	.LLST57:
 11816 07ed 5C000000 		.4byte	.LVL188
 11817 07f1 60000000 		.4byte	.LVL190
 11818 07f5 0100     		.2byte	0x1
 11819 07f7 55       		.byte	0x55
 11820 07f8 84000000 		.4byte	.LVL192
 11821 07fc DA000000 		.4byte	.LVL197
 11822 0800 0100     		.2byte	0x1
 11823 0802 55       		.byte	0x55
 11824 0803 00000000 		.4byte	0
 11825 0807 00000000 		.4byte	0
 11826              	.LLST58:
 11827 080b 86000000 		.4byte	.LVL193
 11828 080f 99000000 		.4byte	.LVL194-1
 11829 0813 0100     		.2byte	0x1
 11830 0815 53       		.byte	0x53
 11831 0816 00000000 		.4byte	0
 11832 081a 00000000 		.4byte	0
 11833              	.LLST59:
 11834 081e 04000000 		.4byte	.LVL181
 11835 0822 5C000000 		.4byte	.LVL188
 11836 0826 0200     		.2byte	0x2
 11837 0828 30       		.byte	0x30
 11838 0829 9F       		.byte	0x9f
 11839 082a 5C000000 		.4byte	.LVL188
 11840 082e 5E000000 		.4byte	.LVL189
 11841 0832 0100     		.2byte	0x1
 11842 0834 56       		.byte	0x56
 11843 0835 60000000 		.4byte	.LVL190
 11844 0839 62000000 		.4byte	.LVL191
 11845 083d 0200     		.2byte	0x2
 11846 083f 30       		.byte	0x30
 11847 0840 9F       		.byte	0x9f
 11848 0841 62000000 		.4byte	.LVL191
 11849 0845 DA000000 		.4byte	.LVL197
 11850 0849 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 313


 11851 084b 56       		.byte	0x56
 11852 084c DA000000 		.4byte	.LVL197
 11853 0850 E8000000 		.4byte	.LVL198
 11854 0854 0200     		.2byte	0x2
 11855 0856 30       		.byte	0x30
 11856 0857 9F       		.byte	0x9f
 11857 0858 E8000000 		.4byte	.LVL198
 11858 085c F8000000 		.4byte	.LVL200
 11859 0860 0100     		.2byte	0x1
 11860 0862 56       		.byte	0x56
 11861 0863 F8000000 		.4byte	.LVL200
 11862 0867 FC000000 		.4byte	.LFE160
 11863 086b 0100     		.2byte	0x1
 11864 086d 50       		.byte	0x50
 11865 086e 00000000 		.4byte	0
 11866 0872 00000000 		.4byte	0
 11867              	.LLST60:
 11868 0876 16000000 		.4byte	.LVL182
 11869 087a DA000000 		.4byte	.LVL197
 11870 087e 0100     		.2byte	0x1
 11871 0880 54       		.byte	0x54
 11872 0881 00000000 		.4byte	0
 11873 0885 00000000 		.4byte	0
 11874              	.LLST61:
 11875 0889 38000000 		.4byte	.LVL184
 11876 088d 46000000 		.4byte	.LVL185
 11877 0891 0100     		.2byte	0x1
 11878 0893 52       		.byte	0x52
 11879 0894 46000000 		.4byte	.LVL185
 11880 0898 4C000000 		.4byte	.LVL186
 11881 089c 0500     		.2byte	0x5
 11882 089e 03       		.byte	0x3
 11883 089f F8000000 		.4byte	pxOverflowDelayedTaskList
 11884 08a3 00000000 		.4byte	0
 11885 08a7 00000000 		.4byte	0
 11886              	.LLST62:
 11887 08ab 00000000 		.4byte	.LVL201
 11888 08af 40000000 		.4byte	.LVL204
 11889 08b3 0200     		.2byte	0x2
 11890 08b5 30       		.byte	0x30
 11891 08b6 9F       		.byte	0x9f
 11892 08b7 40000000 		.4byte	.LVL204
 11893 08bb 8C000000 		.4byte	.LVL209
 11894 08bf 0100     		.2byte	0x1
 11895 08c1 54       		.byte	0x54
 11896 08c2 8C000000 		.4byte	.LVL209
 11897 08c6 8E000000 		.4byte	.LVL210
 11898 08ca 0200     		.2byte	0x2
 11899 08cc 30       		.byte	0x30
 11900 08cd 9F       		.byte	0x9f
 11901 08ce 8E000000 		.4byte	.LVL210
 11902 08d2 A2000000 		.4byte	.LVL212
 11903 08d6 0100     		.2byte	0x1
 11904 08d8 54       		.byte	0x54
 11905 08d9 DA000000 		.4byte	.LVL218
 11906 08dd DE000000 		.4byte	.LVL219
 11907 08e1 0200     		.2byte	0x2
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 314


 11908 08e3 30       		.byte	0x30
 11909 08e4 9F       		.byte	0x9f
 11910 08e5 00000000 		.4byte	0
 11911 08e9 00000000 		.4byte	0
 11912              	.LLST63:
 11913 08ed 00000000 		.4byte	.LVL201
 11914 08f1 C6000000 		.4byte	.LVL216
 11915 08f5 0200     		.2byte	0x2
 11916 08f7 30       		.byte	0x30
 11917 08f8 9F       		.byte	0x9f
 11918 08f9 C6000000 		.4byte	.LVL216
 11919 08fd DA000000 		.4byte	.LVL218
 11920 0901 0200     		.2byte	0x2
 11921 0903 31       		.byte	0x31
 11922 0904 9F       		.byte	0x9f
 11923 0905 DA000000 		.4byte	.LVL218
 11924 0909 E0000000 		.4byte	.LVL220
 11925 090d 0200     		.2byte	0x2
 11926 090f 30       		.byte	0x30
 11927 0910 9F       		.byte	0x9f
 11928 0911 E0000000 		.4byte	.LVL220
 11929 0915 E8000000 		.4byte	.LVL222
 11930 0919 0100     		.2byte	0x1
 11931 091b 54       		.byte	0x54
 11932 091c E8000000 		.4byte	.LVL222
 11933 0920 F0000000 		.4byte	.LFE154
 11934 0924 0100     		.2byte	0x1
 11935 0926 50       		.byte	0x50
 11936 0927 00000000 		.4byte	0
 11937 092b 00000000 		.4byte	0
 11938              	.LLST64:
 11939 092f A2000000 		.4byte	.LVL212
 11940 0933 B2000000 		.4byte	.LVL214
 11941 0937 0100     		.2byte	0x1
 11942 0939 54       		.byte	0x54
 11943 093a B2000000 		.4byte	.LVL214
 11944 093e B4000000 		.4byte	.LVL215
 11945 0942 0300     		.2byte	0x3
 11946 0944 74       		.byte	0x74
 11947 0945 7F       		.sleb128 -1
 11948 0946 9F       		.byte	0x9f
 11949 0947 B4000000 		.4byte	.LVL215
 11950 094b D8000000 		.4byte	.LVL217
 11951 094f 0100     		.2byte	0x1
 11952 0951 54       		.byte	0x54
 11953 0952 DE000000 		.4byte	.LVL219
 11954 0956 E0000000 		.4byte	.LVL220
 11955 095a 0100     		.2byte	0x1
 11956 095c 54       		.byte	0x54
 11957 095d 00000000 		.4byte	0
 11958 0961 00000000 		.4byte	0
 11959              	.LLST65:
 11960 0965 00000000 		.4byte	.LVL223
 11961 0969 4B000000 		.4byte	.LVL228-1
 11962 096d 0100     		.2byte	0x1
 11963 096f 50       		.byte	0x50
 11964 0970 4B000000 		.4byte	.LVL228-1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 315


 11965 0974 A4000000 		.4byte	.LVL235
 11966 0978 0100     		.2byte	0x1
 11967 097a 55       		.byte	0x55
 11968 097b A4000000 		.4byte	.LVL235
 11969 097f AC000000 		.4byte	.LFE141
 11970 0983 0400     		.2byte	0x4
 11971 0985 F3       		.byte	0xf3
 11972 0986 01       		.uleb128 0x1
 11973 0987 50       		.byte	0x50
 11974 0988 9F       		.byte	0x9f
 11975 0989 00000000 		.4byte	0
 11976 098d 00000000 		.4byte	0
 11977              	.LLST66:
 11978 0991 00000000 		.4byte	.LVL223
 11979 0995 4B000000 		.4byte	.LVL228-1
 11980 0999 0100     		.2byte	0x1
 11981 099b 51       		.byte	0x51
 11982 099c 4B000000 		.4byte	.LVL228-1
 11983 09a0 A4000000 		.4byte	.LVL235
 11984 09a4 0100     		.2byte	0x1
 11985 09a6 54       		.byte	0x54
 11986 09a7 A4000000 		.4byte	.LVL235
 11987 09ab AC000000 		.4byte	.LFE141
 11988 09af 0400     		.2byte	0x4
 11989 09b1 F3       		.byte	0xf3
 11990 09b2 01       		.uleb128 0x1
 11991 09b3 51       		.byte	0x51
 11992 09b4 9F       		.byte	0x9f
 11993 09b5 00000000 		.4byte	0
 11994 09b9 00000000 		.4byte	0
 11995              	.LLST67:
 11996 09bd 56000000 		.4byte	.LVL230
 11997 09c1 8B000000 		.4byte	.LVL233-1
 11998 09c5 0100     		.2byte	0x1
 11999 09c7 53       		.byte	0x53
 12000 09c8 00000000 		.4byte	0
 12001 09cc 00000000 		.4byte	0
 12002              	.LLST68:
 12003 09d0 02000000 		.4byte	.LVL224
 12004 09d4 80000000 		.4byte	.LVL231
 12005 09d8 0200     		.2byte	0x2
 12006 09da 30       		.byte	0x30
 12007 09db 9F       		.byte	0x9f
 12008 09dc 80000000 		.4byte	.LVL231
 12009 09e0 8B000000 		.4byte	.LVL233-1
 12010 09e4 0100     		.2byte	0x1
 12011 09e6 52       		.byte	0x52
 12012 09e7 00000000 		.4byte	0
 12013 09eb 00000000 		.4byte	0
 12014              	.LLST69:
 12015 09ef 52000000 		.4byte	.LVL229
 12016 09f3 88000000 		.4byte	.LVL232
 12017 09f7 0100     		.2byte	0x1
 12018 09f9 50       		.byte	0x50
 12019 09fa 00000000 		.4byte	0
 12020 09fe 00000000 		.4byte	0
 12021              	.LLST70:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 316


 12022 0a02 00000000 		.4byte	.LVL236
 12023 0a06 23000000 		.4byte	.LVL239-1
 12024 0a0a 0100     		.2byte	0x1
 12025 0a0c 50       		.byte	0x50
 12026 0a0d 23000000 		.4byte	.LVL239-1
 12027 0a11 32000000 		.4byte	.LVL242
 12028 0a15 0100     		.2byte	0x1
 12029 0a17 54       		.byte	0x54
 12030 0a18 32000000 		.4byte	.LVL242
 12031 0a1c 34000000 		.4byte	.LVL243
 12032 0a20 0100     		.2byte	0x1
 12033 0a22 50       		.byte	0x50
 12034 0a23 34000000 		.4byte	.LVL243
 12035 0a27 50000000 		.4byte	.LFE142
 12036 0a2b 0400     		.2byte	0x4
 12037 0a2d F3       		.byte	0xf3
 12038 0a2e 01       		.uleb128 0x1
 12039 0a2f 50       		.byte	0x50
 12040 0a30 9F       		.byte	0x9f
 12041 0a31 00000000 		.4byte	0
 12042 0a35 00000000 		.4byte	0
 12043              	.LLST71:
 12044 0a39 02000000 		.4byte	.LVL237
 12045 0a3d 30000000 		.4byte	.LVL241
 12046 0a41 0200     		.2byte	0x2
 12047 0a43 30       		.byte	0x30
 12048 0a44 9F       		.byte	0x9f
 12049 0a45 30000000 		.4byte	.LVL241
 12050 0a49 32000000 		.4byte	.LVL242
 12051 0a4d 0100     		.2byte	0x1
 12052 0a4f 50       		.byte	0x50
 12053 0a50 32000000 		.4byte	.LVL242
 12054 0a54 34000000 		.4byte	.LVL243
 12055 0a58 0200     		.2byte	0x2
 12056 0a5a 30       		.byte	0x30
 12057 0a5b 9F       		.byte	0x9f
 12058 0a5c 34000000 		.4byte	.LVL243
 12059 0a60 50000000 		.4byte	.LFE142
 12060 0a64 0100     		.2byte	0x1
 12061 0a66 50       		.byte	0x50
 12062 0a67 00000000 		.4byte	0
 12063 0a6b 00000000 		.4byte	0
 12064              	.LLST72:
 12065 0a6f 22000000 		.4byte	.LVL244
 12066 0a73 3C000000 		.4byte	.LVL245
 12067 0a77 0100     		.2byte	0x1
 12068 0a79 53       		.byte	0x53
 12069 0a7a 00000000 		.4byte	0
 12070 0a7e 00000000 		.4byte	0
 12071              	.LLST73:
 12072 0a82 58000000 		.4byte	.LVL247
 12073 0a86 6C000000 		.4byte	.LVL248
 12074 0a8a 0100     		.2byte	0x1
 12075 0a8c 53       		.byte	0x53
 12076 0a8d 6E000000 		.4byte	.LVL249
 12077 0a91 C8000000 		.4byte	.LFE161
 12078 0a95 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 317


 12079 0a97 53       		.byte	0x53
 12080 0a98 00000000 		.4byte	0
 12081 0a9c 00000000 		.4byte	0
 12082              	.LLST74:
 12083 0aa0 00000000 		.4byte	.LVL252
 12084 0aa4 07000000 		.4byte	.LVL253-1
 12085 0aa8 0100     		.2byte	0x1
 12086 0aaa 50       		.byte	0x50
 12087 0aab 07000000 		.4byte	.LVL253-1
 12088 0aaf 10000000 		.4byte	.LVL254
 12089 0ab3 0100     		.2byte	0x1
 12090 0ab5 54       		.byte	0x54
 12091 0ab6 00000000 		.4byte	0
 12092 0aba 00000000 		.4byte	0
 12093              	.LLST75:
 12094 0abe 10000000 		.4byte	.LVL254
 12095 0ac2 AE000000 		.4byte	.LVL266
 12096 0ac6 0100     		.2byte	0x1
 12097 0ac8 54       		.byte	0x54
 12098 0ac9 00000000 		.4byte	0
 12099 0acd 00000000 		.4byte	0
 12100              	.LLST76:
 12101 0ad1 00000000 		.4byte	.LVL267
 12102 0ad5 23000000 		.4byte	.LVL270-1
 12103 0ad9 0100     		.2byte	0x1
 12104 0adb 50       		.byte	0x50
 12105 0adc 23000000 		.4byte	.LVL270-1
 12106 0ae0 34000000 		.4byte	.LFE162
 12107 0ae4 0400     		.2byte	0x4
 12108 0ae6 F3       		.byte	0xf3
 12109 0ae7 01       		.uleb128 0x1
 12110 0ae8 50       		.byte	0x50
 12111 0ae9 9F       		.byte	0x9f
 12112 0aea 00000000 		.4byte	0
 12113 0aee 00000000 		.4byte	0
 12114              	.LLST77:
 12115 0af2 00000000 		.4byte	.LVL267
 12116 0af6 1E000000 		.4byte	.LVL269
 12117 0afa 0100     		.2byte	0x1
 12118 0afc 51       		.byte	0x51
 12119 0afd 1E000000 		.4byte	.LVL269
 12120 0b01 2E000000 		.4byte	.LVL272
 12121 0b05 0100     		.2byte	0x1
 12122 0b07 54       		.byte	0x54
 12123 0b08 2E000000 		.4byte	.LVL272
 12124 0b0c 34000000 		.4byte	.LFE162
 12125 0b10 0400     		.2byte	0x4
 12126 0b12 F3       		.byte	0xf3
 12127 0b13 01       		.uleb128 0x1
 12128 0b14 51       		.byte	0x51
 12129 0b15 9F       		.byte	0x9f
 12130 0b16 00000000 		.4byte	0
 12131 0b1a 00000000 		.4byte	0
 12132              	.LLST78:
 12133 0b1e 00000000 		.4byte	.LVL273
 12134 0b22 18000000 		.4byte	.LVL275
 12135 0b26 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 318


 12136 0b28 50       		.byte	0x50
 12137 0b29 18000000 		.4byte	.LVL275
 12138 0b2d 2E000000 		.4byte	.LVL276
 12139 0b31 0100     		.2byte	0x1
 12140 0b33 53       		.byte	0x53
 12141 0b34 2E000000 		.4byte	.LVL276
 12142 0b38 30000000 		.4byte	.LVL277
 12143 0b3c 0400     		.2byte	0x4
 12144 0b3e F3       		.byte	0xf3
 12145 0b3f 01       		.uleb128 0x1
 12146 0b40 50       		.byte	0x50
 12147 0b41 9F       		.byte	0x9f
 12148 0b42 30000000 		.4byte	.LVL277
 12149 0b46 38000000 		.4byte	.LVL278
 12150 0b4a 0100     		.2byte	0x1
 12151 0b4c 53       		.byte	0x53
 12152 0b4d 38000000 		.4byte	.LVL278
 12153 0b51 4D000000 		.4byte	.LVL282-1
 12154 0b55 0100     		.2byte	0x1
 12155 0b57 50       		.byte	0x50
 12156 0b58 4D000000 		.4byte	.LVL282-1
 12157 0b5c 5C000000 		.4byte	.LFE163
 12158 0b60 0400     		.2byte	0x4
 12159 0b62 F3       		.byte	0xf3
 12160 0b63 01       		.uleb128 0x1
 12161 0b64 50       		.byte	0x50
 12162 0b65 9F       		.byte	0x9f
 12163 0b66 00000000 		.4byte	0
 12164 0b6a 00000000 		.4byte	0
 12165              	.LLST79:
 12166 0b6e 00000000 		.4byte	.LVL273
 12167 0b72 3E000000 		.4byte	.LVL280
 12168 0b76 0100     		.2byte	0x1
 12169 0b78 51       		.byte	0x51
 12170 0b79 3E000000 		.4byte	.LVL280
 12171 0b7d 42000000 		.4byte	.LVL281
 12172 0b81 0100     		.2byte	0x1
 12173 0b83 53       		.byte	0x53
 12174 0b84 42000000 		.4byte	.LVL281
 12175 0b88 5C000000 		.4byte	.LFE163
 12176 0b8c 0400     		.2byte	0x4
 12177 0b8e F3       		.byte	0xf3
 12178 0b8f 01       		.uleb128 0x1
 12179 0b90 51       		.byte	0x51
 12180 0b91 9F       		.byte	0x9f
 12181 0b92 00000000 		.4byte	0
 12182 0b96 00000000 		.4byte	0
 12183              	.LLST80:
 12184 0b9a 00000000 		.4byte	.LVL273
 12185 0b9e 3A000000 		.4byte	.LVL279
 12186 0ba2 0100     		.2byte	0x1
 12187 0ba4 52       		.byte	0x52
 12188 0ba5 3A000000 		.4byte	.LVL279
 12189 0ba9 58000000 		.4byte	.LVL284
 12190 0bad 0100     		.2byte	0x1
 12191 0baf 54       		.byte	0x54
 12192 0bb0 58000000 		.4byte	.LVL284
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 319


 12193 0bb4 5C000000 		.4byte	.LFE163
 12194 0bb8 0400     		.2byte	0x4
 12195 0bba F3       		.byte	0xf3
 12196 0bbb 01       		.uleb128 0x1
 12197 0bbc 52       		.byte	0x52
 12198 0bbd 9F       		.byte	0x9f
 12199 0bbe 00000000 		.4byte	0
 12200 0bc2 00000000 		.4byte	0
 12201              	.LLST81:
 12202 0bc6 00000000 		.4byte	.LVL285
 12203 0bca 25000000 		.4byte	.LVL289-1
 12204 0bce 0100     		.2byte	0x1
 12205 0bd0 50       		.byte	0x50
 12206 0bd1 25000000 		.4byte	.LVL289-1
 12207 0bd5 3C000000 		.4byte	.LFE164
 12208 0bd9 0400     		.2byte	0x4
 12209 0bdb F3       		.byte	0xf3
 12210 0bdc 01       		.uleb128 0x1
 12211 0bdd 50       		.byte	0x50
 12212 0bde 9F       		.byte	0x9f
 12213 0bdf 00000000 		.4byte	0
 12214 0be3 00000000 		.4byte	0
 12215              	.LLST82:
 12216 0be7 00000000 		.4byte	.LVL285
 12217 0beb 20000000 		.4byte	.LVL288
 12218 0bef 0100     		.2byte	0x1
 12219 0bf1 51       		.byte	0x51
 12220 0bf2 20000000 		.4byte	.LVL288
 12221 0bf6 36000000 		.4byte	.LVL292
 12222 0bfa 0100     		.2byte	0x1
 12223 0bfc 54       		.byte	0x54
 12224 0bfd 00000000 		.4byte	0
 12225 0c01 00000000 		.4byte	0
 12226              	.LLST83:
 12227 0c05 00000000 		.4byte	.LVL285
 12228 0c09 1C000000 		.4byte	.LVL287
 12229 0c0d 0100     		.2byte	0x1
 12230 0c0f 52       		.byte	0x52
 12231 0c10 1C000000 		.4byte	.LVL287
 12232 0c14 36000000 		.4byte	.LVL292
 12233 0c18 0100     		.2byte	0x1
 12234 0c1a 55       		.byte	0x55
 12235 0c1b 36000000 		.4byte	.LVL292
 12236 0c1f 3C000000 		.4byte	.LFE164
 12237 0c23 0400     		.2byte	0x4
 12238 0c25 F3       		.byte	0xf3
 12239 0c26 01       		.uleb128 0x1
 12240 0c27 52       		.byte	0x52
 12241 0c28 9F       		.byte	0x9f
 12242 0c29 00000000 		.4byte	0
 12243 0c2d 00000000 		.4byte	0
 12244              	.LLST84:
 12245 0c31 00000000 		.4byte	.LVL293
 12246 0c35 20000000 		.4byte	.LVL296
 12247 0c39 0100     		.2byte	0x1
 12248 0c3b 50       		.byte	0x50
 12249 0c3c 20000000 		.4byte	.LVL296
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 320


 12250 0c40 88000000 		.4byte	.LFE165
 12251 0c44 0400     		.2byte	0x4
 12252 0c46 F3       		.byte	0xf3
 12253 0c47 01       		.uleb128 0x1
 12254 0c48 50       		.byte	0x50
 12255 0c49 9F       		.byte	0x9f
 12256 0c4a 00000000 		.4byte	0
 12257 0c4e 00000000 		.4byte	0
 12258              	.LLST85:
 12259 0c52 06000000 		.4byte	.LVL294
 12260 0c56 7C000000 		.4byte	.LVL304
 12261 0c5a 0100     		.2byte	0x1
 12262 0c5c 54       		.byte	0x54
 12263 0c5d 00000000 		.4byte	0
 12264 0c61 00000000 		.4byte	0
 12265              	.LLST86:
 12266 0c65 6E000000 		.4byte	.LVL301
 12267 0c69 78000000 		.4byte	.LVL302
 12268 0c6d 0200     		.2byte	0x2
 12269 0c6f 31       		.byte	0x31
 12270 0c70 9F       		.byte	0x9f
 12271 0c71 7A000000 		.4byte	.LVL303
 12272 0c75 88000000 		.4byte	.LFE165
 12273 0c79 0100     		.2byte	0x1
 12274 0c7b 50       		.byte	0x50
 12275 0c7c 00000000 		.4byte	0
 12276 0c80 00000000 		.4byte	0
 12277              	.LLST87:
 12278 0c84 00000000 		.4byte	.LVL305
 12279 0c88 3B000000 		.4byte	.LVL309-1
 12280 0c8c 0100     		.2byte	0x1
 12281 0c8e 50       		.byte	0x50
 12282 0c8f 3B000000 		.4byte	.LVL309-1
 12283 0c93 84000000 		.4byte	.LFE166
 12284 0c97 0400     		.2byte	0x4
 12285 0c99 F3       		.byte	0xf3
 12286 0c9a 01       		.uleb128 0x1
 12287 0c9b 50       		.byte	0x50
 12288 0c9c 9F       		.byte	0x9f
 12289 0c9d 00000000 		.4byte	0
 12290 0ca1 00000000 		.4byte	0
 12291              	.LLST88:
 12292 0ca5 00000000 		.4byte	.LVL305
 12293 0ca9 3B000000 		.4byte	.LVL309-1
 12294 0cad 0100     		.2byte	0x1
 12295 0caf 51       		.byte	0x51
 12296 0cb0 3B000000 		.4byte	.LVL309-1
 12297 0cb4 84000000 		.4byte	.LFE166
 12298 0cb8 0400     		.2byte	0x4
 12299 0cba F3       		.byte	0xf3
 12300 0cbb 01       		.uleb128 0x1
 12301 0cbc 51       		.byte	0x51
 12302 0cbd 9F       		.byte	0x9f
 12303 0cbe 00000000 		.4byte	0
 12304 0cc2 00000000 		.4byte	0
 12305              	.LLST89:
 12306 0cc6 24000000 		.4byte	.LVL307
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 321


 12307 0cca 7E000000 		.4byte	.LVL312
 12308 0cce 0100     		.2byte	0x1
 12309 0cd0 54       		.byte	0x54
 12310 0cd1 00000000 		.4byte	0
 12311 0cd5 00000000 		.4byte	0
 12312              	.LLST90:
 12313 0cd9 00000000 		.4byte	.LVL313
 12314 0cdd 1B000000 		.4byte	.LVL315-1
 12315 0ce1 0100     		.2byte	0x1
 12316 0ce3 50       		.byte	0x50
 12317 0ce4 1B000000 		.4byte	.LVL315-1
 12318 0ce8 30000000 		.4byte	.LVL317
 12319 0cec 0100     		.2byte	0x1
 12320 0cee 54       		.byte	0x54
 12321 0cef 30000000 		.4byte	.LVL317
 12322 0cf3 34000000 		.4byte	.LFE167
 12323 0cf7 0400     		.2byte	0x4
 12324 0cf9 F3       		.byte	0xf3
 12325 0cfa 01       		.uleb128 0x1
 12326 0cfb 50       		.byte	0x50
 12327 0cfc 9F       		.byte	0x9f
 12328 0cfd 00000000 		.4byte	0
 12329 0d01 00000000 		.4byte	0
 12330              	.LLST91:
 12331 0d05 00000000 		.4byte	.LVL319
 12332 0d09 31000000 		.4byte	.LVL322-1
 12333 0d0d 0100     		.2byte	0x1
 12334 0d0f 50       		.byte	0x50
 12335 0d10 31000000 		.4byte	.LVL322-1
 12336 0d14 7C000000 		.4byte	.LVL336
 12337 0d18 0100     		.2byte	0x1
 12338 0d1a 55       		.byte	0x55
 12339 0d1b 7C000000 		.4byte	.LVL336
 12340 0d1f 80000000 		.4byte	.LFE169
 12341 0d23 0400     		.2byte	0x4
 12342 0d25 F3       		.byte	0xf3
 12343 0d26 01       		.uleb128 0x1
 12344 0d27 50       		.byte	0x50
 12345 0d28 9F       		.byte	0x9f
 12346 0d29 00000000 		.4byte	0
 12347 0d2d 00000000 		.4byte	0
 12348              	.LLST92:
 12349 0d31 00000000 		.4byte	.LVL319
 12350 0d35 31000000 		.4byte	.LVL322-1
 12351 0d39 0100     		.2byte	0x1
 12352 0d3b 51       		.byte	0x51
 12353 0d3c 31000000 		.4byte	.LVL322-1
 12354 0d40 64000000 		.4byte	.LVL327
 12355 0d44 0100     		.2byte	0x1
 12356 0d46 54       		.byte	0x54
 12357 0d47 64000000 		.4byte	.LVL327
 12358 0d4b 66000000 		.4byte	.LVL328
 12359 0d4f 0400     		.2byte	0x4
 12360 0d51 F3       		.byte	0xf3
 12361 0d52 01       		.uleb128 0x1
 12362 0d53 51       		.byte	0x51
 12363 0d54 9F       		.byte	0x9f
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 322


 12364 0d55 66000000 		.4byte	.LVL328
 12365 0d59 6C000000 		.4byte	.LVL330
 12366 0d5d 0100     		.2byte	0x1
 12367 0d5f 54       		.byte	0x54
 12368 0d60 6C000000 		.4byte	.LVL330
 12369 0d64 6E000000 		.4byte	.LVL331
 12370 0d68 0400     		.2byte	0x4
 12371 0d6a F3       		.byte	0xf3
 12372 0d6b 01       		.uleb128 0x1
 12373 0d6c 51       		.byte	0x51
 12374 0d6d 9F       		.byte	0x9f
 12375 0d6e 6E000000 		.4byte	.LVL331
 12376 0d72 70000000 		.4byte	.LVL332
 12377 0d76 0100     		.2byte	0x1
 12378 0d78 54       		.byte	0x54
 12379 0d79 70000000 		.4byte	.LVL332
 12380 0d7d 72000000 		.4byte	.LVL333
 12381 0d81 0400     		.2byte	0x4
 12382 0d83 F3       		.byte	0xf3
 12383 0d84 01       		.uleb128 0x1
 12384 0d85 51       		.byte	0x51
 12385 0d86 9F       		.byte	0x9f
 12386 0d87 72000000 		.4byte	.LVL333
 12387 0d8b 74000000 		.4byte	.LVL334
 12388 0d8f 0100     		.2byte	0x1
 12389 0d91 54       		.byte	0x54
 12390 0d92 74000000 		.4byte	.LVL334
 12391 0d96 80000000 		.4byte	.LFE169
 12392 0d9a 0400     		.2byte	0x4
 12393 0d9c F3       		.byte	0xf3
 12394 0d9d 01       		.uleb128 0x1
 12395 0d9e 51       		.byte	0x51
 12396 0d9f 9F       		.byte	0x9f
 12397 0da0 00000000 		.4byte	0
 12398 0da4 00000000 		.4byte	0
 12399              	.LLST93:
 12400 0da8 62000000 		.4byte	.LVL326
 12401 0dac 66000000 		.4byte	.LVL328
 12402 0db0 0200     		.2byte	0x2
 12403 0db2 30       		.byte	0x30
 12404 0db3 9F       		.byte	0x9f
 12405 0db4 6A000000 		.4byte	.LVL329
 12406 0db8 6E000000 		.4byte	.LVL331
 12407 0dbc 0200     		.2byte	0x2
 12408 0dbe 31       		.byte	0x31
 12409 0dbf 9F       		.byte	0x9f
 12410 0dc0 74000000 		.4byte	.LVL334
 12411 0dc4 7C000000 		.4byte	.LVL336
 12412 0dc8 0100     		.2byte	0x1
 12413 0dca 54       		.byte	0x54
 12414 0dcb 7C000000 		.4byte	.LVL336
 12415 0dcf 80000000 		.4byte	.LFE169
 12416 0dd3 0100     		.2byte	0x1
 12417 0dd5 50       		.byte	0x50
 12418 0dd6 00000000 		.4byte	0
 12419 0dda 00000000 		.4byte	0
 12420              	.LLST94:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 323


 12421 0dde 38000000 		.4byte	.LVL323
 12422 0de2 5E000000 		.4byte	.LVL325
 12423 0de6 0100     		.2byte	0x1
 12424 0de8 50       		.byte	0x50
 12425 0de9 66000000 		.4byte	.LVL328
 12426 0ded 74000000 		.4byte	.LVL334
 12427 0df1 0100     		.2byte	0x1
 12428 0df3 50       		.byte	0x50
 12429 0df4 00000000 		.4byte	0
 12430 0df8 00000000 		.4byte	0
 12431              	.LLST95:
 12432 0dfc 3C000000 		.4byte	.LVL324
 12433 0e00 61000000 		.4byte	.LVL326-1
 12434 0e04 0100     		.2byte	0x1
 12435 0e06 52       		.byte	0x52
 12436 0e07 66000000 		.4byte	.LVL328
 12437 0e0b 74000000 		.4byte	.LVL334
 12438 0e0f 0100     		.2byte	0x1
 12439 0e11 52       		.byte	0x52
 12440 0e12 00000000 		.4byte	0
 12441 0e16 00000000 		.4byte	0
 12442              	.LLST96:
 12443 0e1a 00000000 		.4byte	.LVL337
 12444 0e1e 04000000 		.4byte	.LVL339
 12445 0e22 0100     		.2byte	0x1
 12446 0e24 50       		.byte	0x50
 12447 0e25 04000000 		.4byte	.LVL339
 12448 0e29 06000000 		.4byte	.LVL340
 12449 0e2d 0400     		.2byte	0x4
 12450 0e2f F3       		.byte	0xf3
 12451 0e30 01       		.uleb128 0x1
 12452 0e31 50       		.byte	0x50
 12453 0e32 9F       		.byte	0x9f
 12454 0e33 06000000 		.4byte	.LVL340
 12455 0e37 08000000 		.4byte	.LVL341
 12456 0e3b 0100     		.2byte	0x1
 12457 0e3d 50       		.byte	0x50
 12458 0e3e 08000000 		.4byte	.LVL341
 12459 0e42 0A000000 		.4byte	.LFE171
 12460 0e46 0400     		.2byte	0x4
 12461 0e48 F3       		.byte	0xf3
 12462 0e49 01       		.uleb128 0x1
 12463 0e4a 50       		.byte	0x50
 12464 0e4b 9F       		.byte	0x9f
 12465 0e4c 00000000 		.4byte	0
 12466 0e50 00000000 		.4byte	0
 12467              	.LLST97:
 12468 0e54 04000000 		.4byte	.LVL339
 12469 0e58 06000000 		.4byte	.LVL340
 12470 0e5c 0100     		.2byte	0x1
 12471 0e5e 50       		.byte	0x50
 12472 0e5f 08000000 		.4byte	.LVL341
 12473 0e63 0A000000 		.4byte	.LFE171
 12474 0e67 0100     		.2byte	0x1
 12475 0e69 50       		.byte	0x50
 12476 0e6a 00000000 		.4byte	0
 12477 0e6e 00000000 		.4byte	0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 324


 12478              	.LLST98:
 12479 0e72 02000000 		.4byte	.LVL338
 12480 0e76 04000000 		.4byte	.LVL339
 12481 0e7a 0100     		.2byte	0x1
 12482 0e7c 50       		.byte	0x50
 12483 0e7d 04000000 		.4byte	.LVL339
 12484 0e81 06000000 		.4byte	.LVL340
 12485 0e85 0400     		.2byte	0x4
 12486 0e87 F3       		.byte	0xf3
 12487 0e88 01       		.uleb128 0x1
 12488 0e89 50       		.byte	0x50
 12489 0e8a 9F       		.byte	0x9f
 12490 0e8b 00000000 		.4byte	0
 12491 0e8f 00000000 		.4byte	0
 12492              	.LLST99:
 12493 0e93 02000000 		.4byte	.LVL343
 12494 0e97 04000000 		.4byte	.LVL344
 12495 0e9b 0100     		.2byte	0x1
 12496 0e9d 50       		.byte	0x50
 12497 0e9e 00000000 		.4byte	0
 12498 0ea2 00000000 		.4byte	0
 12499              	.LLST100:
 12500 0ea6 00000000 		.4byte	.LVL345
 12501 0eaa 0C000000 		.4byte	.LVL346
 12502 0eae 0100     		.2byte	0x1
 12503 0eb0 50       		.byte	0x50
 12504 0eb1 00000000 		.4byte	0
 12505 0eb5 00000000 		.4byte	0
 12506              	.LLST101:
 12507 0eb9 00000000 		.4byte	.LVL345
 12508 0ebd 0E000000 		.4byte	.LVL347
 12509 0ec1 0100     		.2byte	0x1
 12510 0ec3 51       		.byte	0x51
 12511 0ec4 0E000000 		.4byte	.LVL347
 12512 0ec8 12000000 		.4byte	.LVL348
 12513 0ecc 0300     		.2byte	0x3
 12514 0ece 71       		.byte	0x71
 12515 0ecf 6E       		.sleb128 -18
 12516 0ed0 9F       		.byte	0x9f
 12517 0ed1 12000000 		.4byte	.LVL348
 12518 0ed5 1C000000 		.4byte	.LFE174
 12519 0ed9 0400     		.2byte	0x4
 12520 0edb F3       		.byte	0xf3
 12521 0edc 01       		.uleb128 0x1
 12522 0edd 51       		.byte	0x51
 12523 0ede 9F       		.byte	0x9f
 12524 0edf 00000000 		.4byte	0
 12525 0ee3 00000000 		.4byte	0
 12526              	.LLST102:
 12527 0ee7 0C000000 		.4byte	.LVL346
 12528 0eeb 14000000 		.4byte	.LVL349
 12529 0eef 0100     		.2byte	0x1
 12530 0ef1 50       		.byte	0x50
 12531 0ef2 00000000 		.4byte	0
 12532 0ef6 00000000 		.4byte	0
 12533              	.LLST103:
 12534 0efa 00000000 		.4byte	.LVL350
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 325


 12535 0efe 0C000000 		.4byte	.LVL351
 12536 0f02 0100     		.2byte	0x1
 12537 0f04 50       		.byte	0x50
 12538 0f05 16000000 		.4byte	.LVL355
 12539 0f09 18000000 		.4byte	.LVL356
 12540 0f0d 0100     		.2byte	0x1
 12541 0f0f 50       		.byte	0x50
 12542 0f10 18000000 		.4byte	.LVL356
 12543 0f14 20000000 		.4byte	.LFE175
 12544 0f18 0400     		.2byte	0x4
 12545 0f1a F3       		.byte	0xf3
 12546 0f1b 01       		.uleb128 0x1
 12547 0f1c 50       		.byte	0x50
 12548 0f1d 9F       		.byte	0x9f
 12549 0f1e 00000000 		.4byte	0
 12550 0f22 00000000 		.4byte	0
 12551              	.LLST104:
 12552 0f26 00000000 		.4byte	.LVL350
 12553 0f2a 0E000000 		.4byte	.LVL352
 12554 0f2e 0100     		.2byte	0x1
 12555 0f30 51       		.byte	0x51
 12556 0f31 0E000000 		.4byte	.LVL352
 12557 0f35 16000000 		.4byte	.LVL355
 12558 0f39 0300     		.2byte	0x3
 12559 0f3b 71       		.byte	0x71
 12560 0f3c 6E       		.sleb128 -18
 12561 0f3d 9F       		.byte	0x9f
 12562 0f3e 16000000 		.4byte	.LVL355
 12563 0f42 20000000 		.4byte	.LFE175
 12564 0f46 0100     		.2byte	0x1
 12565 0f48 51       		.byte	0x51
 12566 0f49 00000000 		.4byte	0
 12567 0f4d 00000000 		.4byte	0
 12568              	.LLST105:
 12569 0f51 00000000 		.4byte	.LVL350
 12570 0f55 14000000 		.4byte	.LVL354
 12571 0f59 0200     		.2byte	0x2
 12572 0f5b 30       		.byte	0x30
 12573 0f5c 9F       		.byte	0x9f
 12574 0f5d 14000000 		.4byte	.LVL354
 12575 0f61 16000000 		.4byte	.LVL355
 12576 0f65 0100     		.2byte	0x1
 12577 0f67 50       		.byte	0x50
 12578 0f68 16000000 		.4byte	.LVL355
 12579 0f6c 18000000 		.4byte	.LVL356
 12580 0f70 0200     		.2byte	0x2
 12581 0f72 30       		.byte	0x30
 12582 0f73 9F       		.byte	0x9f
 12583 0f74 18000000 		.4byte	.LVL356
 12584 0f78 20000000 		.4byte	.LFE175
 12585 0f7c 0100     		.2byte	0x1
 12586 0f7e 50       		.byte	0x50
 12587 0f7f 00000000 		.4byte	0
 12588 0f83 00000000 		.4byte	0
 12589              	.LLST106:
 12590 0f87 0C000000 		.4byte	.LVL351
 12591 0f8b 12000000 		.4byte	.LVL353
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 326


 12592 0f8f 0100     		.2byte	0x1
 12593 0f91 50       		.byte	0x50
 12594 0f92 00000000 		.4byte	0
 12595 0f96 00000000 		.4byte	0
 12596              	.LLST107:
 12597 0f9a 00000000 		.4byte	.LVL357
 12598 0f9e 10000000 		.4byte	.LVL359
 12599 0fa2 0100     		.2byte	0x1
 12600 0fa4 50       		.byte	0x50
 12601 0fa5 00000000 		.4byte	0
 12602 0fa9 00000000 		.4byte	0
 12603              	.LLST108:
 12604 0fad 00000000 		.4byte	.LVL357
 12605 0fb1 47000000 		.4byte	.LVL362-1
 12606 0fb5 0100     		.2byte	0x1
 12607 0fb7 51       		.byte	0x51
 12608 0fb8 47000000 		.4byte	.LVL362-1
 12609 0fbc 56000000 		.4byte	.LVL364
 12610 0fc0 0100     		.2byte	0x1
 12611 0fc2 54       		.byte	0x54
 12612 0fc3 56000000 		.4byte	.LVL364
 12613 0fc7 5B000000 		.4byte	.LVL365-1
 12614 0fcb 0100     		.2byte	0x1
 12615 0fcd 51       		.byte	0x51
 12616 0fce 5B000000 		.4byte	.LVL365-1
 12617 0fd2 70000000 		.4byte	.LVL368
 12618 0fd6 0100     		.2byte	0x1
 12619 0fd8 54       		.byte	0x54
 12620 0fd9 70000000 		.4byte	.LVL368
 12621 0fdd 74000000 		.4byte	.LFE178
 12622 0fe1 0400     		.2byte	0x4
 12623 0fe3 F3       		.byte	0xf3
 12624 0fe4 01       		.uleb128 0x1
 12625 0fe5 51       		.byte	0x51
 12626 0fe6 9F       		.byte	0x9f
 12627 0fe7 00000000 		.4byte	0
 12628 0feb 00000000 		.4byte	0
 12629              	.LLST109:
 12630 0fef 00000000 		.4byte	.LVL357
 12631 0ff3 0C000000 		.4byte	.LVL358
 12632 0ff7 0100     		.2byte	0x1
 12633 0ff9 52       		.byte	0x52
 12634 0ffa 0C000000 		.4byte	.LVL358
 12635 0ffe 70000000 		.4byte	.LVL368
 12636 1002 0100     		.2byte	0x1
 12637 1004 56       		.byte	0x56
 12638 1005 70000000 		.4byte	.LVL368
 12639 1009 74000000 		.4byte	.LFE178
 12640 100d 0400     		.2byte	0x4
 12641 100f F3       		.byte	0xf3
 12642 1010 01       		.uleb128 0x1
 12643 1011 52       		.byte	0x52
 12644 1012 9F       		.byte	0x9f
 12645 1013 00000000 		.4byte	0
 12646 1017 00000000 		.4byte	0
 12647              	.LLST110:
 12648 101b 00000000 		.4byte	.LVL357
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 327


 12649 101f 3A000000 		.4byte	.LVL360
 12650 1023 0100     		.2byte	0x1
 12651 1025 53       		.byte	0x53
 12652 1026 3A000000 		.4byte	.LVL360
 12653 102a 3E000000 		.4byte	.LVL361
 12654 102e 0400     		.2byte	0x4
 12655 1030 F3       		.byte	0xf3
 12656 1031 01       		.uleb128 0x1
 12657 1032 53       		.byte	0x53
 12658 1033 9F       		.byte	0x9f
 12659 1034 3E000000 		.4byte	.LVL361
 12660 1038 47000000 		.4byte	.LVL362-1
 12661 103c 0100     		.2byte	0x1
 12662 103e 53       		.byte	0x53
 12663 103f 47000000 		.4byte	.LVL362-1
 12664 1043 56000000 		.4byte	.LVL364
 12665 1047 0400     		.2byte	0x4
 12666 1049 F3       		.byte	0xf3
 12667 104a 01       		.uleb128 0x1
 12668 104b 53       		.byte	0x53
 12669 104c 9F       		.byte	0x9f
 12670 104d 56000000 		.4byte	.LVL364
 12671 1051 5B000000 		.4byte	.LVL365-1
 12672 1055 0100     		.2byte	0x1
 12673 1057 53       		.byte	0x53
 12674 1058 5B000000 		.4byte	.LVL365-1
 12675 105c 74000000 		.4byte	.LFE178
 12676 1060 0400     		.2byte	0x4
 12677 1062 F3       		.byte	0xf3
 12678 1063 01       		.uleb128 0x1
 12679 1064 53       		.byte	0x53
 12680 1065 9F       		.byte	0x9f
 12681 1066 00000000 		.4byte	0
 12682 106a 00000000 		.4byte	0
 12683              	.LLST111:
 12684 106e 10000000 		.4byte	.LVL359
 12685 1072 70000000 		.4byte	.LVL368
 12686 1076 0100     		.2byte	0x1
 12687 1078 55       		.byte	0x55
 12688 1079 00000000 		.4byte	0
 12689 107d 00000000 		.4byte	0
 12690              	.LLST112:
 12691 1081 00000000 		.4byte	.LVL369
 12692 1085 28000000 		.4byte	.LVL373
 12693 1089 0100     		.2byte	0x1
 12694 108b 50       		.byte	0x50
 12695 108c 28000000 		.4byte	.LVL373
 12696 1090 54000000 		.4byte	.LVL377
 12697 1094 0100     		.2byte	0x1
 12698 1096 57       		.byte	0x57
 12699 1097 54000000 		.4byte	.LVL377
 12700 109b 56000000 		.4byte	.LVL378
 12701 109f 0100     		.2byte	0x1
 12702 10a1 50       		.byte	0x50
 12703 10a2 56000000 		.4byte	.LVL378
 12704 10a6 5C000000 		.4byte	.LFE179
 12705 10aa 0400     		.2byte	0x4
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 328


 12706 10ac F3       		.byte	0xf3
 12707 10ad 01       		.uleb128 0x1
 12708 10ae 50       		.byte	0x50
 12709 10af 9F       		.byte	0x9f
 12710 10b0 00000000 		.4byte	0
 12711 10b4 00000000 		.4byte	0
 12712              	.LLST113:
 12713 10b8 00000000 		.4byte	.LVL369
 12714 10bc 28000000 		.4byte	.LVL373
 12715 10c0 0100     		.2byte	0x1
 12716 10c2 51       		.byte	0x51
 12717 10c3 28000000 		.4byte	.LVL373
 12718 10c7 54000000 		.4byte	.LVL377
 12719 10cb 0100     		.2byte	0x1
 12720 10cd 55       		.byte	0x55
 12721 10ce 54000000 		.4byte	.LVL377
 12722 10d2 56000000 		.4byte	.LVL378
 12723 10d6 0100     		.2byte	0x1
 12724 10d8 51       		.byte	0x51
 12725 10d9 56000000 		.4byte	.LVL378
 12726 10dd 5C000000 		.4byte	.LFE179
 12727 10e1 0400     		.2byte	0x4
 12728 10e3 F3       		.byte	0xf3
 12729 10e4 01       		.uleb128 0x1
 12730 10e5 51       		.byte	0x51
 12731 10e6 9F       		.byte	0x9f
 12732 10e7 00000000 		.4byte	0
 12733 10eb 00000000 		.4byte	0
 12734              	.LLST114:
 12735 10ef 00000000 		.4byte	.LVL369
 12736 10f3 28000000 		.4byte	.LVL373
 12737 10f7 0100     		.2byte	0x1
 12738 10f9 52       		.byte	0x52
 12739 10fa 28000000 		.4byte	.LVL373
 12740 10fe 54000000 		.4byte	.LVL377
 12741 1102 0400     		.2byte	0x4
 12742 1104 F3       		.byte	0xf3
 12743 1105 01       		.uleb128 0x1
 12744 1106 52       		.byte	0x52
 12745 1107 9F       		.byte	0x9f
 12746 1108 54000000 		.4byte	.LVL377
 12747 110c 56000000 		.4byte	.LVL378
 12748 1110 0100     		.2byte	0x1
 12749 1112 52       		.byte	0x52
 12750 1113 56000000 		.4byte	.LVL378
 12751 1117 5C000000 		.4byte	.LFE179
 12752 111b 0400     		.2byte	0x4
 12753 111d F3       		.byte	0xf3
 12754 111e 01       		.uleb128 0x1
 12755 111f 52       		.byte	0x52
 12756 1120 9F       		.byte	0x9f
 12757 1121 00000000 		.4byte	0
 12758 1125 00000000 		.4byte	0
 12759              	.LLST115:
 12760 1129 3A000000 		.4byte	.LVL374
 12761 112d 54000000 		.4byte	.LVL377
 12762 1131 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 329


 12763 1133 56       		.byte	0x56
 12764 1134 00000000 		.4byte	0
 12765 1138 00000000 		.4byte	0
 12766              	.LLST116:
 12767 113c 26000000 		.4byte	.LVL372
 12768 1140 54000000 		.4byte	.LVL377
 12769 1144 0100     		.2byte	0x1
 12770 1146 5A       		.byte	0x5a
 12771 1147 00000000 		.4byte	0
 12772 114b 00000000 		.4byte	0
 12773              	.LLST117:
 12774 114f 04000000 		.4byte	.LVL370
 12775 1153 28000000 		.4byte	.LVL373
 12776 1157 0200     		.2byte	0x2
 12777 1159 30       		.byte	0x30
 12778 115a 9F       		.byte	0x9f
 12779 115b 28000000 		.4byte	.LVL373
 12780 115f 54000000 		.4byte	.LVL377
 12781 1163 0100     		.2byte	0x1
 12782 1165 54       		.byte	0x54
 12783 1166 54000000 		.4byte	.LVL377
 12784 116a 56000000 		.4byte	.LVL378
 12785 116e 0200     		.2byte	0x2
 12786 1170 30       		.byte	0x30
 12787 1171 9F       		.byte	0x9f
 12788 1172 56000000 		.4byte	.LVL378
 12789 1176 5C000000 		.4byte	.LFE179
 12790 117a 0100     		.2byte	0x1
 12791 117c 54       		.byte	0x54
 12792 117d 00000000 		.4byte	0
 12793 1181 00000000 		.4byte	0
 12794              	.LLST118:
 12795 1185 08000000 		.4byte	.LVL371
 12796 1189 28000000 		.4byte	.LVL373
 12797 118d 0100     		.2byte	0x1
 12798 118f 51       		.byte	0x51
 12799 1190 28000000 		.4byte	.LVL373
 12800 1194 54000000 		.4byte	.LVL377
 12801 1198 0100     		.2byte	0x1
 12802 119a 55       		.byte	0x55
 12803 119b 00000000 		.4byte	0
 12804 119f 00000000 		.4byte	0
 12805              	.LLST119:
 12806 11a3 28000000 		.4byte	.LVL373
 12807 11a7 54000000 		.4byte	.LVL377
 12808 11ab 0100     		.2byte	0x1
 12809 11ad 55       		.byte	0x55
 12810 11ae 00000000 		.4byte	0
 12811 11b2 00000000 		.4byte	0
 12812              	.LLST120:
 12813 11b6 00000000 		.4byte	.LVL379
 12814 11ba 0B000000 		.4byte	.LVL381-1
 12815 11be 0100     		.2byte	0x1
 12816 11c0 50       		.byte	0x50
 12817 11c1 0B000000 		.4byte	.LVL381-1
 12818 11c5 9A000000 		.4byte	.LVL398
 12819 11c9 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 330


 12820 11cb 57       		.byte	0x57
 12821 11cc 9A000000 		.4byte	.LVL398
 12822 11d0 A4000000 		.4byte	.LFE159
 12823 11d4 0400     		.2byte	0x4
 12824 11d6 F3       		.byte	0xf3
 12825 11d7 01       		.uleb128 0x1
 12826 11d8 50       		.byte	0x50
 12827 11d9 9F       		.byte	0x9f
 12828 11da 00000000 		.4byte	0
 12829 11de 00000000 		.4byte	0
 12830              	.LLST121:
 12831 11e2 00000000 		.4byte	.LVL379
 12832 11e6 0B000000 		.4byte	.LVL381-1
 12833 11ea 0100     		.2byte	0x1
 12834 11ec 51       		.byte	0x51
 12835 11ed 0B000000 		.4byte	.LVL381-1
 12836 11f1 1A000000 		.4byte	.LVL382
 12837 11f5 0100     		.2byte	0x1
 12838 11f7 54       		.byte	0x54
 12839 11f8 1A000000 		.4byte	.LVL382
 12840 11fc 90000000 		.4byte	.LVL395
 12841 1200 0400     		.2byte	0x4
 12842 1202 F3       		.byte	0xf3
 12843 1203 01       		.uleb128 0x1
 12844 1204 51       		.byte	0x51
 12845 1205 9F       		.byte	0x9f
 12846 1206 90000000 		.4byte	.LVL395
 12847 120a 92000000 		.4byte	.LVL396
 12848 120e 0100     		.2byte	0x1
 12849 1210 54       		.byte	0x54
 12850 1211 92000000 		.4byte	.LVL396
 12851 1215 A4000000 		.4byte	.LFE159
 12852 1219 0400     		.2byte	0x4
 12853 121b F3       		.byte	0xf3
 12854 121c 01       		.uleb128 0x1
 12855 121d 51       		.byte	0x51
 12856 121e 9F       		.byte	0x9f
 12857 121f 00000000 		.4byte	0
 12858 1223 00000000 		.4byte	0
 12859              	.LLST122:
 12860 1227 00000000 		.4byte	.LVL379
 12861 122b 0B000000 		.4byte	.LVL381-1
 12862 122f 0100     		.2byte	0x1
 12863 1231 52       		.byte	0x52
 12864 1232 0B000000 		.4byte	.LVL381-1
 12865 1236 9A000000 		.4byte	.LVL398
 12866 123a 0100     		.2byte	0x1
 12867 123c 56       		.byte	0x56
 12868 123d 9A000000 		.4byte	.LVL398
 12869 1241 A4000000 		.4byte	.LFE159
 12870 1245 0400     		.2byte	0x4
 12871 1247 F3       		.byte	0xf3
 12872 1248 01       		.uleb128 0x1
 12873 1249 52       		.byte	0x52
 12874 124a 9F       		.byte	0x9f
 12875 124b 00000000 		.4byte	0
 12876 124f 00000000 		.4byte	0
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 331


 12877              	.LLST123:
 12878 1253 08000000 		.4byte	.LVL380
 12879 1257 1A000000 		.4byte	.LVL382
 12880 125b 0200     		.2byte	0x2
 12881 125d 30       		.byte	0x30
 12882 125e 9F       		.byte	0x9f
 12883 125f 1A000000 		.4byte	.LVL382
 12884 1263 90000000 		.4byte	.LVL395
 12885 1267 0100     		.2byte	0x1
 12886 1269 54       		.byte	0x54
 12887 126a 90000000 		.4byte	.LVL395
 12888 126e 92000000 		.4byte	.LVL396
 12889 1272 0200     		.2byte	0x2
 12890 1274 30       		.byte	0x30
 12891 1275 9F       		.byte	0x9f
 12892 1276 92000000 		.4byte	.LVL396
 12893 127a 9A000000 		.4byte	.LVL398
 12894 127e 0100     		.2byte	0x1
 12895 1280 54       		.byte	0x54
 12896 1281 9A000000 		.4byte	.LVL398
 12897 1285 A4000000 		.4byte	.LFE159
 12898 1289 0100     		.2byte	0x1
 12899 128b 50       		.byte	0x50
 12900 128c 00000000 		.4byte	0
 12901 1290 00000000 		.4byte	0
 12902              	.LLST124:
 12903 1294 08000000 		.4byte	.LVL380
 12904 1298 1A000000 		.4byte	.LVL382
 12905 129c 0200     		.2byte	0x2
 12906 129e 37       		.byte	0x37
 12907 129f 9F       		.byte	0x9f
 12908 12a0 1A000000 		.4byte	.LVL382
 12909 12a4 42000000 		.4byte	.LVL386
 12910 12a8 0100     		.2byte	0x1
 12911 12aa 55       		.byte	0x55
 12912 12ab 90000000 		.4byte	.LVL395
 12913 12af 92000000 		.4byte	.LVL396
 12914 12b3 0200     		.2byte	0x2
 12915 12b5 37       		.byte	0x37
 12916 12b6 9F       		.byte	0x9f
 12917 12b7 00000000 		.4byte	0
 12918 12bb 00000000 		.4byte	0
 12919              	.LLST125:
 12920 12bf 00000000 		.4byte	.LVL401
 12921 12c3 1C000000 		.4byte	.LVL402
 12922 12c7 0100     		.2byte	0x1
 12923 12c9 50       		.byte	0x50
 12924 12ca 1C000000 		.4byte	.LVL402
 12925 12ce 7A000000 		.4byte	.LVL412
 12926 12d2 0100     		.2byte	0x1
 12927 12d4 55       		.byte	0x55
 12928 12d5 7A000000 		.4byte	.LVL412
 12929 12d9 A9000000 		.4byte	.LVL413-1
 12930 12dd 0100     		.2byte	0x1
 12931 12df 50       		.byte	0x50
 12932 12e0 A9000000 		.4byte	.LVL413-1
 12933 12e4 CA000000 		.4byte	.LVL418
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 332


 12934 12e8 0100     		.2byte	0x1
 12935 12ea 55       		.byte	0x55
 12936 12eb 00000000 		.4byte	0
 12937 12ef 00000000 		.4byte	0
 12938              	.LLST126:
 12939 12f3 20000000 		.4byte	.LVL403
 12940 12f7 2D000000 		.4byte	.LVL404-1
 12941 12fb 0100     		.2byte	0x1
 12942 12fd 50       		.byte	0x50
 12943 12fe 2D000000 		.4byte	.LVL404-1
 12944 1302 C6000000 		.4byte	.LVL417
 12945 1306 0100     		.2byte	0x1
 12946 1308 54       		.byte	0x54
 12947 1309 00000000 		.4byte	0
 12948 130d 00000000 		.4byte	0
 12949              	.LLST127:
 12950 1311 54000000 		.4byte	.LVL405
 12951 1315 58000000 		.4byte	.LVL406
 12952 1319 0300     		.2byte	0x3
 12953 131b 08       		.byte	0x8
 12954 131c 42       		.byte	0x42
 12955 131d 9F       		.byte	0x9f
 12956 131e 58000000 		.4byte	.LVL406
 12957 1322 5C000000 		.4byte	.LVL407
 12958 1326 0300     		.2byte	0x3
 12959 1328 08       		.byte	0x8
 12960 1329 53       		.byte	0x53
 12961 132a 9F       		.byte	0x9f
 12962 132b 5C000000 		.4byte	.LVL407
 12963 132f 60000000 		.4byte	.LVL408
 12964 1333 0300     		.2byte	0x3
 12965 1335 08       		.byte	0x8
 12966 1336 44       		.byte	0x44
 12967 1337 9F       		.byte	0x9f
 12968 1338 60000000 		.4byte	.LVL408
 12969 133c 64000000 		.4byte	.LVL409
 12970 1340 0200     		.2byte	0x2
 12971 1342 30       		.byte	0x30
 12972 1343 9F       		.byte	0x9f
 12973 1344 66000000 		.4byte	.LVL410
 12974 1348 B8000000 		.4byte	.LVL416
 12975 134c 0100     		.2byte	0x1
 12976 134e 56       		.byte	0x56
 12977 134f 00000000 		.4byte	0
 12978 1353 00000000 		.4byte	0
 12979              	.LLST128:
 12980 1357 00000000 		.4byte	.LVL420
 12981 135b 09000000 		.4byte	.LVL421-1
 12982 135f 0100     		.2byte	0x1
 12983 1361 50       		.byte	0x50
 12984 1362 09000000 		.4byte	.LVL421-1
 12985 1366 78000000 		.4byte	.LVL427
 12986 136a 0100     		.2byte	0x1
 12987 136c 55       		.byte	0x55
 12988 136d 78000000 		.4byte	.LVL427
 12989 1371 80000000 		.4byte	.LFE188
 12990 1375 0400     		.2byte	0x4
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 333


 12991 1377 F3       		.byte	0xf3
 12992 1378 01       		.uleb128 0x1
 12993 1379 50       		.byte	0x50
 12994 137a 9F       		.byte	0x9f
 12995 137b 00000000 		.4byte	0
 12996 137f 00000000 		.4byte	0
 12997              	.LLST129:
 12998 1383 00000000 		.4byte	.LVL420
 12999 1387 09000000 		.4byte	.LVL421-1
 13000 138b 0100     		.2byte	0x1
 13001 138d 51       		.byte	0x51
 13002 138e 09000000 		.4byte	.LVL421-1
 13003 1392 4A000000 		.4byte	.LVL425
 13004 1396 0100     		.2byte	0x1
 13005 1398 54       		.byte	0x54
 13006 1399 4A000000 		.4byte	.LVL425
 13007 139d 80000000 		.4byte	.LFE188
 13008 13a1 0400     		.2byte	0x4
 13009 13a3 F3       		.byte	0xf3
 13010 13a4 01       		.uleb128 0x1
 13011 13a5 51       		.byte	0x51
 13012 13a6 9F       		.byte	0x9f
 13013 13a7 00000000 		.4byte	0
 13014 13ab 00000000 		.4byte	0
 13015              	.LLST130:
 13016 13af 4A000000 		.4byte	.LVL425
 13017 13b3 78000000 		.4byte	.LVL427
 13018 13b7 0100     		.2byte	0x1
 13019 13b9 54       		.byte	0x54
 13020 13ba 78000000 		.4byte	.LVL427
 13021 13be 80000000 		.4byte	.LFE188
 13022 13c2 0100     		.2byte	0x1
 13023 13c4 50       		.byte	0x50
 13024 13c5 00000000 		.4byte	0
 13025 13c9 00000000 		.4byte	0
 13026              	.LLST131:
 13027 13cd 00000000 		.4byte	.LVL428
 13028 13d1 0D000000 		.4byte	.LVL429-1
 13029 13d5 0100     		.2byte	0x1
 13030 13d7 50       		.byte	0x50
 13031 13d8 0D000000 		.4byte	.LVL429-1
 13032 13dc 9C000000 		.4byte	.LVL439
 13033 13e0 0100     		.2byte	0x1
 13034 13e2 57       		.byte	0x57
 13035 13e3 9C000000 		.4byte	.LVL439
 13036 13e7 A4000000 		.4byte	.LFE189
 13037 13eb 0400     		.2byte	0x4
 13038 13ed F3       		.byte	0xf3
 13039 13ee 01       		.uleb128 0x1
 13040 13ef 50       		.byte	0x50
 13041 13f0 9F       		.byte	0x9f
 13042 13f1 00000000 		.4byte	0
 13043 13f5 00000000 		.4byte	0
 13044              	.LLST132:
 13045 13f9 00000000 		.4byte	.LVL428
 13046 13fd 0D000000 		.4byte	.LVL429-1
 13047 1401 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 334


 13048 1403 51       		.byte	0x51
 13049 1404 0D000000 		.4byte	.LVL429-1
 13050 1408 80000000 		.4byte	.LVL433
 13051 140c 0100     		.2byte	0x1
 13052 140e 55       		.byte	0x55
 13053 140f 80000000 		.4byte	.LVL433
 13054 1413 86000000 		.4byte	.LVL436
 13055 1417 0400     		.2byte	0x4
 13056 1419 F3       		.byte	0xf3
 13057 141a 01       		.uleb128 0x1
 13058 141b 51       		.byte	0x51
 13059 141c 9F       		.byte	0x9f
 13060 141d 86000000 		.4byte	.LVL436
 13061 1421 88000000 		.4byte	.LVL437
 13062 1425 0100     		.2byte	0x1
 13063 1427 55       		.byte	0x55
 13064 1428 88000000 		.4byte	.LVL437
 13065 142c A4000000 		.4byte	.LFE189
 13066 1430 0400     		.2byte	0x4
 13067 1432 F3       		.byte	0xf3
 13068 1433 01       		.uleb128 0x1
 13069 1434 51       		.byte	0x51
 13070 1435 9F       		.byte	0x9f
 13071 1436 00000000 		.4byte	0
 13072 143a 00000000 		.4byte	0
 13073              	.LLST133:
 13074 143e 00000000 		.4byte	.LVL428
 13075 1442 0D000000 		.4byte	.LVL429-1
 13076 1446 0100     		.2byte	0x1
 13077 1448 52       		.byte	0x52
 13078 1449 0D000000 		.4byte	.LVL429-1
 13079 144d 84000000 		.4byte	.LVL435
 13080 1451 0100     		.2byte	0x1
 13081 1453 54       		.byte	0x54
 13082 1454 84000000 		.4byte	.LVL435
 13083 1458 86000000 		.4byte	.LVL436
 13084 145c 0400     		.2byte	0x4
 13085 145e F3       		.byte	0xf3
 13086 145f 01       		.uleb128 0x1
 13087 1460 52       		.byte	0x52
 13088 1461 9F       		.byte	0x9f
 13089 1462 86000000 		.4byte	.LVL436
 13090 1466 88000000 		.4byte	.LVL437
 13091 146a 0100     		.2byte	0x1
 13092 146c 54       		.byte	0x54
 13093 146d 88000000 		.4byte	.LVL437
 13094 1471 A4000000 		.4byte	.LFE189
 13095 1475 0400     		.2byte	0x4
 13096 1477 F3       		.byte	0xf3
 13097 1478 01       		.uleb128 0x1
 13098 1479 52       		.byte	0x52
 13099 147a 9F       		.byte	0x9f
 13100 147b 00000000 		.4byte	0
 13101 147f 00000000 		.4byte	0
 13102              	.LLST134:
 13103 1483 00000000 		.4byte	.LVL428
 13104 1487 0D000000 		.4byte	.LVL429-1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 335


 13105 148b 0100     		.2byte	0x1
 13106 148d 53       		.byte	0x53
 13107 148e 0D000000 		.4byte	.LVL429-1
 13108 1492 9C000000 		.4byte	.LVL439
 13109 1496 0100     		.2byte	0x1
 13110 1498 56       		.byte	0x56
 13111 1499 9C000000 		.4byte	.LVL439
 13112 149d A4000000 		.4byte	.LFE189
 13113 14a1 0400     		.2byte	0x4
 13114 14a3 F3       		.byte	0xf3
 13115 14a4 01       		.uleb128 0x1
 13116 14a5 53       		.byte	0x53
 13117 14a6 9F       		.byte	0x9f
 13118 14a7 00000000 		.4byte	0
 13119 14ab 00000000 		.4byte	0
 13120              	.LLST135:
 13121 14af 82000000 		.4byte	.LVL434
 13122 14b3 86000000 		.4byte	.LVL436
 13123 14b7 0200     		.2byte	0x2
 13124 14b9 31       		.byte	0x31
 13125 14ba 9F       		.byte	0x9f
 13126 14bb 88000000 		.4byte	.LVL437
 13127 14bf 9C000000 		.4byte	.LVL439
 13128 14c3 0100     		.2byte	0x1
 13129 14c5 54       		.byte	0x54
 13130 14c6 9C000000 		.4byte	.LVL439
 13131 14ca A4000000 		.4byte	.LFE189
 13132 14ce 0100     		.2byte	0x1
 13133 14d0 50       		.byte	0x50
 13134 14d1 00000000 		.4byte	0
 13135 14d5 00000000 		.4byte	0
 13136              	.LLST136:
 13137 14d9 00000000 		.4byte	.LVL440
 13138 14dd 21000000 		.4byte	.LVL445-1
 13139 14e1 0100     		.2byte	0x1
 13140 14e3 50       		.byte	0x50
 13141 14e4 21000000 		.4byte	.LVL445-1
 13142 14e8 D6000000 		.4byte	.LVL454
 13143 14ec 0100     		.2byte	0x1
 13144 14ee 54       		.byte	0x54
 13145 14ef D6000000 		.4byte	.LVL454
 13146 14f3 E4000000 		.4byte	.LFE190
 13147 14f7 0400     		.2byte	0x4
 13148 14f9 F3       		.byte	0xf3
 13149 14fa 01       		.uleb128 0x1
 13150 14fb 50       		.byte	0x50
 13151 14fc 9F       		.byte	0x9f
 13152 14fd 00000000 		.4byte	0
 13153 1501 00000000 		.4byte	0
 13154              	.LLST137:
 13155 1505 00000000 		.4byte	.LVL440
 13156 1509 21000000 		.4byte	.LVL445-1
 13157 150d 0100     		.2byte	0x1
 13158 150f 51       		.byte	0x51
 13159 1510 21000000 		.4byte	.LVL445-1
 13160 1514 46000000 		.4byte	.LVL447
 13161 1518 0100     		.2byte	0x1
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 336


 13162 151a 56       		.byte	0x56
 13163 151b 46000000 		.4byte	.LVL447
 13164 151f 4C000000 		.4byte	.LVL448
 13165 1523 0400     		.2byte	0x4
 13166 1525 F3       		.byte	0xf3
 13167 1526 01       		.uleb128 0x1
 13168 1527 51       		.byte	0x51
 13169 1528 9F       		.byte	0x9f
 13170 1529 4C000000 		.4byte	.LVL448
 13171 152d 6C000000 		.4byte	.LVL449
 13172 1531 0100     		.2byte	0x1
 13173 1533 56       		.byte	0x56
 13174 1534 6C000000 		.4byte	.LVL449
 13175 1538 E4000000 		.4byte	.LFE190
 13176 153c 0400     		.2byte	0x4
 13177 153e F3       		.byte	0xf3
 13178 153f 01       		.uleb128 0x1
 13179 1540 51       		.byte	0x51
 13180 1541 9F       		.byte	0x9f
 13181 1542 00000000 		.4byte	0
 13182 1546 00000000 		.4byte	0
 13183              	.LLST138:
 13184 154a 00000000 		.4byte	.LVL440
 13185 154e 21000000 		.4byte	.LVL445-1
 13186 1552 0100     		.2byte	0x1
 13187 1554 52       		.byte	0x52
 13188 1555 21000000 		.4byte	.LVL445-1
 13189 1559 E4000000 		.4byte	.LFE190
 13190 155d 0400     		.2byte	0x4
 13191 155f F3       		.byte	0xf3
 13192 1560 01       		.uleb128 0x1
 13193 1561 52       		.byte	0x52
 13194 1562 9F       		.byte	0x9f
 13195 1563 00000000 		.4byte	0
 13196 1567 00000000 		.4byte	0
 13197              	.LLST139:
 13198 156b 00000000 		.4byte	.LVL440
 13199 156f 14000000 		.4byte	.LVL442
 13200 1573 0100     		.2byte	0x1
 13201 1575 53       		.byte	0x53
 13202 1576 14000000 		.4byte	.LVL442
 13203 157a 16000000 		.4byte	.LVL443
 13204 157e 0400     		.2byte	0x4
 13205 1580 F3       		.byte	0xf3
 13206 1581 01       		.uleb128 0x1
 13207 1582 53       		.byte	0x53
 13208 1583 9F       		.byte	0x9f
 13209 1584 16000000 		.4byte	.LVL443
 13210 1588 21000000 		.4byte	.LVL445-1
 13211 158c 0100     		.2byte	0x1
 13212 158e 53       		.byte	0x53
 13213 158f 21000000 		.4byte	.LVL445-1
 13214 1593 D6000000 		.4byte	.LVL454
 13215 1597 0100     		.2byte	0x1
 13216 1599 57       		.byte	0x57
 13217 159a D6000000 		.4byte	.LVL454
 13218 159e E4000000 		.4byte	.LFE190
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 337


 13219 15a2 0400     		.2byte	0x4
 13220 15a4 F3       		.byte	0xf3
 13221 15a5 01       		.uleb128 0x1
 13222 15a6 53       		.byte	0x53
 13223 15a7 9F       		.byte	0x9f
 13224 15a8 00000000 		.4byte	0
 13225 15ac 00000000 		.4byte	0
 13226              	.LLST140:
 13227 15b0 1E000000 		.4byte	.LVL444
 13228 15b4 D6000000 		.4byte	.LVL454
 13229 15b8 0100     		.2byte	0x1
 13230 15ba 54       		.byte	0x54
 13231 15bb D6000000 		.4byte	.LVL454
 13232 15bf E4000000 		.4byte	.LFE190
 13233 15c3 0400     		.2byte	0x4
 13234 15c5 F3       		.byte	0xf3
 13235 15c6 01       		.uleb128 0x1
 13236 15c7 50       		.byte	0x50
 13237 15c8 9F       		.byte	0x9f
 13238 15c9 00000000 		.4byte	0
 13239 15cd 00000000 		.4byte	0
 13240              	.LLST141:
 13241 15d1 02000000 		.4byte	.LVL441
 13242 15d5 6C000000 		.4byte	.LVL449
 13243 15d9 0200     		.2byte	0x2
 13244 15db 31       		.byte	0x31
 13245 15dc 9F       		.byte	0x9f
 13246 15dd 6C000000 		.4byte	.LVL449
 13247 15e1 D6000000 		.4byte	.LVL454
 13248 15e5 0100     		.2byte	0x1
 13249 15e7 55       		.byte	0x55
 13250 15e8 D6000000 		.4byte	.LVL454
 13251 15ec E4000000 		.4byte	.LFE190
 13252 15f0 0100     		.2byte	0x1
 13253 15f2 50       		.byte	0x50
 13254 15f3 00000000 		.4byte	0
 13255 15f7 00000000 		.4byte	0
 13256              	.LLST142:
 13257 15fb 2E000000 		.4byte	.LVL446
 13258 15ff 77000000 		.4byte	.LVL450-1
 13259 1603 0100     		.2byte	0x1
 13260 1605 53       		.byte	0x53
 13261 1606 00000000 		.4byte	0
 13262 160a 00000000 		.4byte	0
 13263              	.LLST143:
 13264 160e 00000000 		.4byte	.LVL455
 13265 1612 25000000 		.4byte	.LVL459-1
 13266 1616 0100     		.2byte	0x1
 13267 1618 50       		.byte	0x50
 13268 1619 25000000 		.4byte	.LVL459-1
 13269 161d 12010000 		.4byte	.LVL471
 13270 1621 0100     		.2byte	0x1
 13271 1623 54       		.byte	0x54
 13272 1624 12010000 		.4byte	.LVL471
 13273 1628 20010000 		.4byte	.LFE191
 13274 162c 0400     		.2byte	0x4
 13275 162e F3       		.byte	0xf3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 338


 13276 162f 01       		.uleb128 0x1
 13277 1630 50       		.byte	0x50
 13278 1631 9F       		.byte	0x9f
 13279 1632 00000000 		.4byte	0
 13280 1636 00000000 		.4byte	0
 13281              	.LLST144:
 13282 163a 00000000 		.4byte	.LVL455
 13283 163e 25000000 		.4byte	.LVL459-1
 13284 1642 0100     		.2byte	0x1
 13285 1644 51       		.byte	0x51
 13286 1645 25000000 		.4byte	.LVL459-1
 13287 1649 B6000000 		.4byte	.LVL464
 13288 164d 0100     		.2byte	0x1
 13289 164f 58       		.byte	0x58
 13290 1650 B6000000 		.4byte	.LVL464
 13291 1654 E0000000 		.4byte	.LVL467
 13292 1658 0400     		.2byte	0x4
 13293 165a F3       		.byte	0xf3
 13294 165b 01       		.uleb128 0x1
 13295 165c 51       		.byte	0x51
 13296 165d 9F       		.byte	0x9f
 13297 165e E0000000 		.4byte	.LVL467
 13298 1662 EA000000 		.4byte	.LVL468
 13299 1666 0100     		.2byte	0x1
 13300 1668 58       		.byte	0x58
 13301 1669 EA000000 		.4byte	.LVL468
 13302 166d 20010000 		.4byte	.LFE191
 13303 1671 0400     		.2byte	0x4
 13304 1673 F3       		.byte	0xf3
 13305 1674 01       		.uleb128 0x1
 13306 1675 51       		.byte	0x51
 13307 1676 9F       		.byte	0x9f
 13308 1677 00000000 		.4byte	0
 13309 167b 00000000 		.4byte	0
 13310              	.LLST145:
 13311 167f 00000000 		.4byte	.LVL455
 13312 1683 25000000 		.4byte	.LVL459-1
 13313 1687 0100     		.2byte	0x1
 13314 1689 52       		.byte	0x52
 13315 168a 25000000 		.4byte	.LVL459-1
 13316 168e 20010000 		.4byte	.LFE191
 13317 1692 0400     		.2byte	0x4
 13318 1694 F3       		.byte	0xf3
 13319 1695 01       		.uleb128 0x1
 13320 1696 52       		.byte	0x52
 13321 1697 9F       		.byte	0x9f
 13322 1698 00000000 		.4byte	0
 13323 169c 00000000 		.4byte	0
 13324              	.LLST146:
 13325 16a0 00000000 		.4byte	.LVL455
 13326 16a4 18000000 		.4byte	.LVL457
 13327 16a8 0100     		.2byte	0x1
 13328 16aa 53       		.byte	0x53
 13329 16ab 18000000 		.4byte	.LVL457
 13330 16af 1A000000 		.4byte	.LVL458
 13331 16b3 0400     		.2byte	0x4
 13332 16b5 F3       		.byte	0xf3
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 339


 13333 16b6 01       		.uleb128 0x1
 13334 16b7 53       		.byte	0x53
 13335 16b8 9F       		.byte	0x9f
 13336 16b9 1A000000 		.4byte	.LVL458
 13337 16bd 25000000 		.4byte	.LVL459-1
 13338 16c1 0100     		.2byte	0x1
 13339 16c3 53       		.byte	0x53
 13340 16c4 25000000 		.4byte	.LVL459-1
 13341 16c8 12010000 		.4byte	.LVL471
 13342 16cc 0100     		.2byte	0x1
 13343 16ce 59       		.byte	0x59
 13344 16cf 12010000 		.4byte	.LVL471
 13345 16d3 20010000 		.4byte	.LFE191
 13346 16d7 0400     		.2byte	0x4
 13347 16d9 F3       		.byte	0xf3
 13348 16da 01       		.uleb128 0x1
 13349 16db 53       		.byte	0x53
 13350 16dc 9F       		.byte	0x9f
 13351 16dd 00000000 		.4byte	0
 13352 16e1 00000000 		.4byte	0
 13353              	.LLST147:
 13354 16e5 00000000 		.4byte	.LVL455
 13355 16e9 12010000 		.4byte	.LVL471
 13356 16ed 0200     		.2byte	0x2
 13357 16ef 91       		.byte	0x91
 13358 16f0 00       		.sleb128 0
 13359 16f1 12010000 		.4byte	.LVL471
 13360 16f5 20010000 		.4byte	.LFE191
 13361 16f9 0200     		.2byte	0x2
 13362 16fb 7D       		.byte	0x7d
 13363 16fc 00       		.sleb128 0
 13364 16fd 00000000 		.4byte	0
 13365 1701 00000000 		.4byte	0
 13366              	.LLST148:
 13367 1705 26000000 		.4byte	.LVL459
 13368 1709 12010000 		.4byte	.LVL471
 13369 170d 0100     		.2byte	0x1
 13370 170f 54       		.byte	0x54
 13371 1710 12010000 		.4byte	.LVL471
 13372 1714 20010000 		.4byte	.LFE191
 13373 1718 0400     		.2byte	0x4
 13374 171a F3       		.byte	0xf3
 13375 171b 01       		.uleb128 0x1
 13376 171c 50       		.byte	0x50
 13377 171d 9F       		.byte	0x9f
 13378 171e 00000000 		.4byte	0
 13379 1722 00000000 		.4byte	0
 13380              	.LLST149:
 13381 1726 4C000000 		.4byte	.LVL460
 13382 172a 96000000 		.4byte	.LVL462
 13383 172e 0100     		.2byte	0x1
 13384 1730 53       		.byte	0x53
 13385 1731 00000000 		.4byte	0
 13386 1735 00000000 		.4byte	0
 13387              	.LLST150:
 13388 1739 06000000 		.4byte	.LVL456
 13389 173d 90000000 		.4byte	.LVL461
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 340


 13390 1741 0200     		.2byte	0x2
 13391 1743 31       		.byte	0x31
 13392 1744 9F       		.byte	0x9f
 13393 1745 90000000 		.4byte	.LVL461
 13394 1749 12010000 		.4byte	.LVL471
 13395 174d 0100     		.2byte	0x1
 13396 174f 55       		.byte	0x55
 13397 1750 12010000 		.4byte	.LVL471
 13398 1754 20010000 		.4byte	.LFE191
 13399 1758 0100     		.2byte	0x1
 13400 175a 50       		.byte	0x50
 13401 175b 00000000 		.4byte	0
 13402 175f 00000000 		.4byte	0
 13403              	.LLST151:
 13404 1763 08010000 		.4byte	.LVL469
 13405 1767 0C010000 		.4byte	.LVL470
 13406 176b 0100     		.2byte	0x1
 13407 176d 57       		.byte	0x57
 13408 176e 00000000 		.4byte	0
 13409 1772 00000000 		.4byte	0
 13410              	.LLST152:
 13411 1776 00000000 		.4byte	.LVL472
 13412 177a 1D000000 		.4byte	.LVL474-1
 13413 177e 0100     		.2byte	0x1
 13414 1780 50       		.byte	0x50
 13415 1781 1D000000 		.4byte	.LVL474-1
 13416 1785 C0000000 		.4byte	.LVL483
 13417 1789 0100     		.2byte	0x1
 13418 178b 54       		.byte	0x54
 13419 178c C0000000 		.4byte	.LVL483
 13420 1790 CC000000 		.4byte	.LFE192
 13421 1794 0400     		.2byte	0x4
 13422 1796 F3       		.byte	0xf3
 13423 1797 01       		.uleb128 0x1
 13424 1798 50       		.byte	0x50
 13425 1799 9F       		.byte	0x9f
 13426 179a 00000000 		.4byte	0
 13427 179e 00000000 		.4byte	0
 13428              	.LLST153:
 13429 17a2 00000000 		.4byte	.LVL472
 13430 17a6 1D000000 		.4byte	.LVL474-1
 13431 17aa 0100     		.2byte	0x1
 13432 17ac 51       		.byte	0x51
 13433 17ad 1D000000 		.4byte	.LVL474-1
 13434 17b1 C0000000 		.4byte	.LVL483
 13435 17b5 0100     		.2byte	0x1
 13436 17b7 55       		.byte	0x55
 13437 17b8 C0000000 		.4byte	.LVL483
 13438 17bc CC000000 		.4byte	.LFE192
 13439 17c0 0400     		.2byte	0x4
 13440 17c2 F3       		.byte	0xf3
 13441 17c3 01       		.uleb128 0x1
 13442 17c4 51       		.byte	0x51
 13443 17c5 9F       		.byte	0x9f
 13444 17c6 00000000 		.4byte	0
 13445 17ca 00000000 		.4byte	0
 13446              	.LLST154:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 341


 13447 17ce 1E000000 		.4byte	.LVL474
 13448 17d2 C0000000 		.4byte	.LVL483
 13449 17d6 0100     		.2byte	0x1
 13450 17d8 54       		.byte	0x54
 13451 17d9 C0000000 		.4byte	.LVL483
 13452 17dd CC000000 		.4byte	.LFE192
 13453 17e1 0400     		.2byte	0x4
 13454 17e3 F3       		.byte	0xf3
 13455 17e4 01       		.uleb128 0x1
 13456 17e5 50       		.byte	0x50
 13457 17e6 9F       		.byte	0x9f
 13458 17e7 00000000 		.4byte	0
 13459 17eb 00000000 		.4byte	0
 13460              	.LLST155:
 13461 17ef 38000000 		.4byte	.LVL475
 13462 17f3 4A000000 		.4byte	.LVL476
 13463 17f7 0100     		.2byte	0x1
 13464 17f9 53       		.byte	0x53
 13465 17fa 00000000 		.4byte	0
 13466 17fe 00000000 		.4byte	0
 13467              	.LLST156:
 13468 1802 BA000000 		.4byte	.LVL481
 13469 1806 BE000000 		.4byte	.LVL482
 13470 180a 0100     		.2byte	0x1
 13471 180c 56       		.byte	0x56
 13472 180d 00000000 		.4byte	0
 13473 1811 00000000 		.4byte	0
 13474              	.LLST157:
 13475 1815 00000000 		.4byte	.LVL484
 13476 1819 0C000000 		.4byte	.LVL485
 13477 181d 0100     		.2byte	0x1
 13478 181f 50       		.byte	0x50
 13479 1820 00000000 		.4byte	0
 13480 1824 00000000 		.4byte	0
 13481              	.LLST158:
 13482 1828 0C000000 		.4byte	.LVL485
 13483 182c 22000000 		.4byte	.LVL488
 13484 1830 0100     		.2byte	0x1
 13485 1832 54       		.byte	0x54
 13486 1833 24000000 		.4byte	.LVL489
 13487 1837 26000000 		.4byte	.LVL490
 13488 183b 0100     		.2byte	0x1
 13489 183d 54       		.byte	0x54
 13490 183e 00000000 		.4byte	0
 13491 1842 00000000 		.4byte	0
 13492              	.LLST159:
 13493 1846 20000000 		.4byte	.LVL487
 13494 184a 24000000 		.4byte	.LVL489
 13495 184e 0200     		.2byte	0x2
 13496 1850 31       		.byte	0x31
 13497 1851 9F       		.byte	0x9f
 13498 1852 26000000 		.4byte	.LVL490
 13499 1856 2E000000 		.4byte	.LVL492
 13500 185a 0100     		.2byte	0x1
 13501 185c 54       		.byte	0x54
 13502 185d 2E000000 		.4byte	.LVL492
 13503 1861 34000000 		.4byte	.LFE193
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 342


 13504 1865 0100     		.2byte	0x1
 13505 1867 50       		.byte	0x50
 13506 1868 00000000 		.4byte	0
 13507 186c 00000000 		.4byte	0
 13508              		.section	.debug_aranges,"",%progbits
 13509 0000 E4010000 		.4byte	0x1e4
 13510 0004 0200     		.2byte	0x2
 13511 0006 00000000 		.4byte	.Ldebug_info0
 13512 000a 04       		.byte	0x4
 13513 000b 00       		.byte	0
 13514 000c 0000     		.2byte	0
 13515 000e 0000     		.2byte	0
 13516 0010 00000000 		.4byte	.LFB148
 13517 0014 4C000000 		.4byte	.LFE148-.LFB148
 13518 0018 00000000 		.4byte	.LFB180
 13519 001c 14000000 		.4byte	.LFE180-.LFB180
 13520 0020 00000000 		.4byte	.LFB182
 13521 0024 2C000000 		.4byte	.LFE182-.LFB182
 13522 0028 00000000 		.4byte	.LFB181
 13523 002c 12000000 		.4byte	.LFE181-.LFB181
 13524 0030 00000000 		.4byte	.LFB138
 13525 0034 9E000000 		.4byte	.LFE138-.LFB138
 13526 0038 00000000 		.4byte	.LFB176
 13527 003c 58000000 		.4byte	.LFE176-.LFB176
 13528 0040 00000000 		.4byte	.LFB139
 13529 0044 AC000000 		.4byte	.LFE139-.LFB139
 13530 0048 00000000 		.4byte	.LFB177
 13531 004c 44000000 		.4byte	.LFE177-.LFB177
 13532 0050 00000000 		.4byte	.LFB173
 13533 0054 28000000 		.4byte	.LFE173-.LFB173
 13534 0058 00000000 		.4byte	.LFB194
 13535 005c 68000000 		.4byte	.LFE194-.LFB194
 13536 0060 00000000 		.4byte	.LFB185
 13537 0064 22000000 		.4byte	.LFE185-.LFB185
 13538 0068 00000000 		.4byte	.LFB137
 13539 006c 62000000 		.4byte	.LFE137-.LFB137
 13540 0070 00000000 		.4byte	.LFB140
 13541 0074 B0000000 		.4byte	.LFE140-.LFB140
 13542 0078 00000000 		.4byte	.LFB143
 13543 007c 78000000 		.4byte	.LFE143-.LFB143
 13544 0080 00000000 		.4byte	.LFB144
 13545 0084 20000000 		.4byte	.LFE144-.LFB144
 13546 0088 00000000 		.4byte	.LFB145
 13547 008c 30000000 		.4byte	.LFE145-.LFB145
 13548 0090 00000000 		.4byte	.LFB146
 13549 0094 DC000000 		.4byte	.LFE146-.LFB146
 13550 0098 00000000 		.4byte	.LFB149
 13551 009c 88000000 		.4byte	.LFE149-.LFB149
 13552 00a0 00000000 		.4byte	.LFB150
 13553 00a4 A4000000 		.4byte	.LFE150-.LFB150
 13554 00a8 00000000 		.4byte	.LFB151
 13555 00ac 7C000000 		.4byte	.LFE151-.LFB151
 13556 00b0 00000000 		.4byte	.LFB152
 13557 00b4 24000000 		.4byte	.LFE152-.LFB152
 13558 00b8 00000000 		.4byte	.LFB153
 13559 00bc 14000000 		.4byte	.LFE153-.LFB153
 13560 00c0 00000000 		.4byte	.LFB155
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 343


 13561 00c4 0C000000 		.4byte	.LFE155-.LFB155
 13562 00c8 00000000 		.4byte	.LFB156
 13563 00cc 14000000 		.4byte	.LFE156-.LFB156
 13564 00d0 00000000 		.4byte	.LFB157
 13565 00d4 0C000000 		.4byte	.LFE157-.LFB157
 13566 00d8 00000000 		.4byte	.LFB158
 13567 00dc 28000000 		.4byte	.LFE158-.LFB158
 13568 00e0 00000000 		.4byte	.LFB160
 13569 00e4 FC000000 		.4byte	.LFE160-.LFB160
 13570 00e8 00000000 		.4byte	.LFB154
 13571 00ec F0000000 		.4byte	.LFE154-.LFB154
 13572 00f0 00000000 		.4byte	.LFB141
 13573 00f4 AC000000 		.4byte	.LFE141-.LFB141
 13574 00f8 00000000 		.4byte	.LFB142
 13575 00fc 50000000 		.4byte	.LFE142-.LFB142
 13576 0100 00000000 		.4byte	.LFB161
 13577 0104 C8000000 		.4byte	.LFE161-.LFB161
 13578 0108 00000000 		.4byte	.LFB147
 13579 010c B8000000 		.4byte	.LFE147-.LFB147
 13580 0110 00000000 		.4byte	.LFB162
 13581 0114 34000000 		.4byte	.LFE162-.LFB162
 13582 0118 00000000 		.4byte	.LFB163
 13583 011c 5C000000 		.4byte	.LFE163-.LFB163
 13584 0120 00000000 		.4byte	.LFB164
 13585 0124 3C000000 		.4byte	.LFE164-.LFB164
 13586 0128 00000000 		.4byte	.LFB165
 13587 012c 88000000 		.4byte	.LFE165-.LFB165
 13588 0130 00000000 		.4byte	.LFB166
 13589 0134 84000000 		.4byte	.LFE166-.LFB166
 13590 0138 00000000 		.4byte	.LFB167
 13591 013c 34000000 		.4byte	.LFE167-.LFB167
 13592 0140 00000000 		.4byte	.LFB168
 13593 0144 14000000 		.4byte	.LFE168-.LFB168
 13594 0148 00000000 		.4byte	.LFB169
 13595 014c 80000000 		.4byte	.LFE169-.LFB169
 13596 0150 00000000 		.4byte	.LFB170
 13597 0154 10000000 		.4byte	.LFE170-.LFB170
 13598 0158 00000000 		.4byte	.LFB171
 13599 015c 0A000000 		.4byte	.LFE171-.LFB171
 13600 0160 00000000 		.4byte	.LFB172
 13601 0164 06000000 		.4byte	.LFE172-.LFB172
 13602 0168 00000000 		.4byte	.LFB174
 13603 016c 1C000000 		.4byte	.LFE174-.LFB174
 13604 0170 00000000 		.4byte	.LFB175
 13605 0174 20000000 		.4byte	.LFE175-.LFB175
 13606 0178 00000000 		.4byte	.LFB178
 13607 017c 74000000 		.4byte	.LFE178-.LFB178
 13608 0180 00000000 		.4byte	.LFB179
 13609 0184 5C000000 		.4byte	.LFE179-.LFB179
 13610 0188 00000000 		.4byte	.LFB159
 13611 018c A4000000 		.4byte	.LFE159-.LFB159
 13612 0190 00000000 		.4byte	.LFB183
 13613 0194 0C000000 		.4byte	.LFE183-.LFB183
 13614 0198 00000000 		.4byte	.LFB184
 13615 019c 20000000 		.4byte	.LFE184-.LFB184
 13616 01a0 00000000 		.4byte	.LFB186
 13617 01a4 D4000000 		.4byte	.LFE186-.LFB186
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 344


 13618 01a8 00000000 		.4byte	.LFB187
 13619 01ac 20000000 		.4byte	.LFE187-.LFB187
 13620 01b0 00000000 		.4byte	.LFB188
 13621 01b4 80000000 		.4byte	.LFE188-.LFB188
 13622 01b8 00000000 		.4byte	.LFB189
 13623 01bc A4000000 		.4byte	.LFE189-.LFB189
 13624 01c0 00000000 		.4byte	.LFB190
 13625 01c4 E4000000 		.4byte	.LFE190-.LFB190
 13626 01c8 00000000 		.4byte	.LFB191
 13627 01cc 20010000 		.4byte	.LFE191-.LFB191
 13628 01d0 00000000 		.4byte	.LFB192
 13629 01d4 CC000000 		.4byte	.LFE192-.LFB192
 13630 01d8 00000000 		.4byte	.LFB193
 13631 01dc 34000000 		.4byte	.LFE193-.LFB193
 13632 01e0 00000000 		.4byte	0
 13633 01e4 00000000 		.4byte	0
 13634              		.section	.debug_ranges,"",%progbits
 13635              	.Ldebug_ranges0:
 13636 0000 0E000000 		.4byte	.LBB126
 13637 0004 58000000 		.4byte	.LBE126
 13638 0008 5C000000 		.4byte	.LBB130
 13639 000c DA000000 		.4byte	.LBE130
 13640 0010 00000000 		.4byte	0
 13641 0014 00000000 		.4byte	0
 13642 0018 4C000000 		.4byte	.LBB140
 13643 001c 62000000 		.4byte	.LBE140
 13644 0020 66000000 		.4byte	.LBB141
 13645 0024 6E000000 		.4byte	.LBE141
 13646 0028 76000000 		.4byte	.LBB142
 13647 002c 8C000000 		.4byte	.LBE142
 13648 0030 00000000 		.4byte	0
 13649 0034 00000000 		.4byte	0
 13650 0038 00000000 		.4byte	.LFB148
 13651 003c 4C000000 		.4byte	.LFE148
 13652 0040 00000000 		.4byte	.LFB180
 13653 0044 14000000 		.4byte	.LFE180
 13654 0048 00000000 		.4byte	.LFB182
 13655 004c 2C000000 		.4byte	.LFE182
 13656 0050 00000000 		.4byte	.LFB181
 13657 0054 12000000 		.4byte	.LFE181
 13658 0058 00000000 		.4byte	.LFB138
 13659 005c 9E000000 		.4byte	.LFE138
 13660 0060 00000000 		.4byte	.LFB176
 13661 0064 58000000 		.4byte	.LFE176
 13662 0068 00000000 		.4byte	.LFB139
 13663 006c AC000000 		.4byte	.LFE139
 13664 0070 00000000 		.4byte	.LFB177
 13665 0074 44000000 		.4byte	.LFE177
 13666 0078 00000000 		.4byte	.LFB173
 13667 007c 28000000 		.4byte	.LFE173
 13668 0080 00000000 		.4byte	.LFB194
 13669 0084 68000000 		.4byte	.LFE194
 13670 0088 00000000 		.4byte	.LFB185
 13671 008c 22000000 		.4byte	.LFE185
 13672 0090 00000000 		.4byte	.LFB137
 13673 0094 62000000 		.4byte	.LFE137
 13674 0098 00000000 		.4byte	.LFB140
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 345


 13675 009c B0000000 		.4byte	.LFE140
 13676 00a0 00000000 		.4byte	.LFB143
 13677 00a4 78000000 		.4byte	.LFE143
 13678 00a8 00000000 		.4byte	.LFB144
 13679 00ac 20000000 		.4byte	.LFE144
 13680 00b0 00000000 		.4byte	.LFB145
 13681 00b4 30000000 		.4byte	.LFE145
 13682 00b8 00000000 		.4byte	.LFB146
 13683 00bc DC000000 		.4byte	.LFE146
 13684 00c0 00000000 		.4byte	.LFB149
 13685 00c4 88000000 		.4byte	.LFE149
 13686 00c8 00000000 		.4byte	.LFB150
 13687 00cc A4000000 		.4byte	.LFE150
 13688 00d0 00000000 		.4byte	.LFB151
 13689 00d4 7C000000 		.4byte	.LFE151
 13690 00d8 00000000 		.4byte	.LFB152
 13691 00dc 24000000 		.4byte	.LFE152
 13692 00e0 00000000 		.4byte	.LFB153
 13693 00e4 14000000 		.4byte	.LFE153
 13694 00e8 00000000 		.4byte	.LFB155
 13695 00ec 0C000000 		.4byte	.LFE155
 13696 00f0 00000000 		.4byte	.LFB156
 13697 00f4 14000000 		.4byte	.LFE156
 13698 00f8 00000000 		.4byte	.LFB157
 13699 00fc 0C000000 		.4byte	.LFE157
 13700 0100 00000000 		.4byte	.LFB158
 13701 0104 28000000 		.4byte	.LFE158
 13702 0108 00000000 		.4byte	.LFB160
 13703 010c FC000000 		.4byte	.LFE160
 13704 0110 00000000 		.4byte	.LFB154
 13705 0114 F0000000 		.4byte	.LFE154
 13706 0118 00000000 		.4byte	.LFB141
 13707 011c AC000000 		.4byte	.LFE141
 13708 0120 00000000 		.4byte	.LFB142
 13709 0124 50000000 		.4byte	.LFE142
 13710 0128 00000000 		.4byte	.LFB161
 13711 012c C8000000 		.4byte	.LFE161
 13712 0130 00000000 		.4byte	.LFB147
 13713 0134 B8000000 		.4byte	.LFE147
 13714 0138 00000000 		.4byte	.LFB162
 13715 013c 34000000 		.4byte	.LFE162
 13716 0140 00000000 		.4byte	.LFB163
 13717 0144 5C000000 		.4byte	.LFE163
 13718 0148 00000000 		.4byte	.LFB164
 13719 014c 3C000000 		.4byte	.LFE164
 13720 0150 00000000 		.4byte	.LFB165
 13721 0154 88000000 		.4byte	.LFE165
 13722 0158 00000000 		.4byte	.LFB166
 13723 015c 84000000 		.4byte	.LFE166
 13724 0160 00000000 		.4byte	.LFB167
 13725 0164 34000000 		.4byte	.LFE167
 13726 0168 00000000 		.4byte	.LFB168
 13727 016c 14000000 		.4byte	.LFE168
 13728 0170 00000000 		.4byte	.LFB169
 13729 0174 80000000 		.4byte	.LFE169
 13730 0178 00000000 		.4byte	.LFB170
 13731 017c 10000000 		.4byte	.LFE170
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 346


 13732 0180 00000000 		.4byte	.LFB171
 13733 0184 0A000000 		.4byte	.LFE171
 13734 0188 00000000 		.4byte	.LFB172
 13735 018c 06000000 		.4byte	.LFE172
 13736 0190 00000000 		.4byte	.LFB174
 13737 0194 1C000000 		.4byte	.LFE174
 13738 0198 00000000 		.4byte	.LFB175
 13739 019c 20000000 		.4byte	.LFE175
 13740 01a0 00000000 		.4byte	.LFB178
 13741 01a4 74000000 		.4byte	.LFE178
 13742 01a8 00000000 		.4byte	.LFB179
 13743 01ac 5C000000 		.4byte	.LFE179
 13744 01b0 00000000 		.4byte	.LFB159
 13745 01b4 A4000000 		.4byte	.LFE159
 13746 01b8 00000000 		.4byte	.LFB183
 13747 01bc 0C000000 		.4byte	.LFE183
 13748 01c0 00000000 		.4byte	.LFB184
 13749 01c4 20000000 		.4byte	.LFE184
 13750 01c8 00000000 		.4byte	.LFB186
 13751 01cc D4000000 		.4byte	.LFE186
 13752 01d0 00000000 		.4byte	.LFB187
 13753 01d4 20000000 		.4byte	.LFE187
 13754 01d8 00000000 		.4byte	.LFB188
 13755 01dc 80000000 		.4byte	.LFE188
 13756 01e0 00000000 		.4byte	.LFB189
 13757 01e4 A4000000 		.4byte	.LFE189
 13758 01e8 00000000 		.4byte	.LFB190
 13759 01ec E4000000 		.4byte	.LFE190
 13760 01f0 00000000 		.4byte	.LFB191
 13761 01f4 20010000 		.4byte	.LFE191
 13762 01f8 00000000 		.4byte	.LFB192
 13763 01fc CC000000 		.4byte	.LFE192
 13764 0200 00000000 		.4byte	.LFB193
 13765 0204 34000000 		.4byte	.LFE193
 13766 0208 00000000 		.4byte	0
 13767 020c 00000000 		.4byte	0
 13768              		.section	.debug_line,"",%progbits
 13769              	.Ldebug_line0:
 13770 0000 8B0E0000 		.section	.debug_str,"MS",%progbits,1
 13770      02005D03 
 13770      00000201 
 13770      FB0E0D00 
 13770      01010101 
 13771              	.LASF260:
 13772 0000 764C6973 		.ascii	"vListInsert\000"
 13772      74496E73 
 13772      65727400 
 13773              	.LASF38:
 13774 000c 75784E75 		.ascii	"uxNumberOfItems\000"
 13774      6D626572 
 13774      4F664974 
 13774      656D7300 
 13775              	.LASF258:
 13776 001c 76506F72 		.ascii	"vPortExitCritical\000"
 13776      74457869 
 13776      74437269 
 13776      74696361 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 347


 13776      6C00
 13777              	.LASF197:
 13778 002e 7072764C 		.ascii	"prvListTasksWithinSingleList\000"
 13778      69737454 
 13778      61736B73 
 13778      57697468 
 13778      696E5369 
 13779              	.LASF16:
 13780 004b 63686172 		.ascii	"char\000"
 13780      00
 13781              	.LASF262:
 13782 0050 7374726C 		.ascii	"strlen\000"
 13782      656E00
 13783              	.LASF266:
 13784 0057 78506F72 		.ascii	"xPortStartScheduler\000"
 13784      74537461 
 13784      72745363 
 13784      68656475 
 13784      6C657200 
 13785              	.LASF80:
 13786 006b 75785072 		.ascii	"uxPriority\000"
 13786      696F7269 
 13786      747900
 13787              	.LASF164:
 13788 0076 7078436F 		.ascii	"pxConstList\000"
 13788      6E73744C 
 13788      69737400 
 13789              	.LASF126:
 13790 0082 70785374 		.ascii	"pxStateList\000"
 13790      6174654C 
 13790      69737400 
 13791              	.LASF46:
 13792 008e 65537573 		.ascii	"eSuspended\000"
 13792      70656E64 
 13792      656400
 13793              	.LASF76:
 13794 0099 74736B54 		.ascii	"tskTaskControlBlock\000"
 13794      61736B43 
 13794      6F6E7472 
 13794      6F6C426C 
 13794      6F636B00 
 13795              	.LASF153:
 13796 00ad 75785065 		.ascii	"uxPendedCounts\000"
 13796      6E646564 
 13796      436F756E 
 13796      747300
 13797              	.LASF52:
 13798 00bc 65496E63 		.ascii	"eIncrement\000"
 13798      72656D65 
 13798      6E7400
 13799              	.LASF218:
 13800 00c7 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 13800      7473546F 
 13800      436C6561 
 13800      724F6E45 
 13800      78697400 
 13801              	.LASF102:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 348


 13802 00db 70727649 		.ascii	"prvInitialiseNewTask\000"
 13802      6E697469 
 13802      616C6973 
 13802      654E6577 
 13802      5461736B 
 13803              	.LASF208:
 13804 00f0 78546173 		.ascii	"xTaskGetSchedulerState\000"
 13804      6B476574 
 13804      53636865 
 13804      64756C65 
 13804      72537461 
 13805              	.LASF227:
 13806 0107 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 13806      67686572 
 13806      5072696F 
 13806      72697479 
 13806      5461736B 
 13807              	.LASF50:
 13808 0121 654E6F41 		.ascii	"eNoAction\000"
 13808      6374696F 
 13808      6E00
 13809              	.LASF55:
 13810 012b 654E6F74 		.ascii	"eNotifyAction\000"
 13810      69667941 
 13810      6374696F 
 13810      6E00
 13811              	.LASF0:
 13812 0139 756E7369 		.ascii	"unsigned int\000"
 13812      676E6564 
 13812      20696E74 
 13812      00
 13813              	.LASF168:
 13814 0146 70784576 		.ascii	"pxEventList\000"
 13814      656E744C 
 13814      69737400 
 13815              	.LASF242:
 13816 0152 78536368 		.ascii	"xSchedulerRunning\000"
 13816      6564756C 
 13816      65725275 
 13816      6E6E696E 
 13816      6700
 13817              	.LASF39:
 13818 0164 7078496E 		.ascii	"pxIndex\000"
 13818      64657800 
 13819              	.LASF24:
 13820 016c 53746163 		.ascii	"StackType_t\000"
 13820      6B547970 
 13820      655F7400 
 13821              	.LASF56:
 13822 0178 7854494D 		.ascii	"xTIME_OUT\000"
 13822      455F4F55 
 13822      5400
 13823              	.LASF237:
 13824 0182 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 13824      6C657465 
 13824      64546173 
 13824      6B735761 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 349


 13824      6974696E 
 13825              	.LASF10:
 13826 019f 5F5F696E 		.ascii	"__int32_t\000"
 13826      7433325F 
 13826      7400
 13827              	.LASF34:
 13828 01a9 784C4953 		.ascii	"xLIST_ITEM\000"
 13828      545F4954 
 13828      454D00
 13829              	.LASF230:
 13830 01b4 70785265 		.ascii	"pxReadyTasksLists\000"
 13830      61647954 
 13830      61736B73 
 13830      4C697374 
 13830      7300
 13831              	.LASF205:
 13832 01c6 70756C54 		.ascii	"pulTotalRunTime\000"
 13832      6F74616C 
 13832      52756E54 
 13832      696D6500 
 13833              	.LASF268:
 13834 01d6 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 13834      6C696361 
 13834      74696F6E 
 13834      53746163 
 13834      6B4F7665 
 13835              	.LASF37:
 13836 01f4 784C4953 		.ascii	"xLIST\000"
 13836      5400
 13837              	.LASF225:
 13838 01fa 75634F72 		.ascii	"ucOriginalNotifyState\000"
 13838      6967696E 
 13838      616C4E6F 
 13838      74696679 
 13838      53746174 
 13839              	.LASF140:
 13840 0210 75785361 		.ascii	"uxSavedInterruptStatus\000"
 13840      76656449 
 13840      6E746572 
 13840      72757074 
 13840      53746174 
 13841              	.LASF148:
 13842 0227 78546173 		.ascii	"xTaskIncrementTick\000"
 13842      6B496E63 
 13842      72656D65 
 13842      6E745469 
 13842      636B00
 13843              	.LASF70:
 13844 023a 75784375 		.ascii	"uxCurrentPriority\000"
 13844      7272656E 
 13844      74507269 
 13844      6F726974 
 13844      7900
 13845              	.LASF210:
 13846 024c 70635772 		.ascii	"pcWriteBuffer\000"
 13846      69746542 
 13846      75666665 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 350


 13846      7200
 13847              	.LASF231:
 13848 025a 7844656C 		.ascii	"xDelayedTaskList1\000"
 13848      61796564 
 13848      5461736B 
 13848      4C697374 
 13848      3100
 13849              	.LASF232:
 13850 026c 7844656C 		.ascii	"xDelayedTaskList2\000"
 13850      61796564 
 13850      5461736B 
 13850      4C697374 
 13850      3200
 13851              	.LASF62:
 13852 027e 756C4C65 		.ascii	"ulLengthInBytes\000"
 13852      6E677468 
 13852      496E4279 
 13852      74657300 
 13853              	.LASF57:
 13854 028e 784F7665 		.ascii	"xOverflowCount\000"
 13854      72666C6F 
 13854      77436F75 
 13854      6E7400
 13855              	.LASF256:
 13856 029d 76506F72 		.ascii	"vPortEnterCritical\000"
 13856      74456E74 
 13856      65724372 
 13856      69746963 
 13856      616C00
 13857              	.LASF68:
 13858 02b0 78546173 		.ascii	"xTaskNumber\000"
 13858      6B4E756D 
 13858      62657200 
 13859              	.LASF82:
 13860 02bc 75785443 		.ascii	"uxTCBNumber\000"
 13860      424E756D 
 13860      62657200 
 13861              	.LASF270:
 13862 02c8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 13862      43313120 
 13862      352E342E 
 13862      31203230 
 13862      31363036 
 13863 02fb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 13863      20726576 
 13863      6973696F 
 13863      6E203233 
 13863      37373135 
 13864 032e 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 13864      70202D6D 
 13864      6670753D 
 13864      66707634 
 13864      2D73702D 
 13865 0361 65637469 		.ascii	"ections -ffat-lto-objects\000"
 13865      6F6E7320 
 13865      2D666661 
 13865      742D6C74 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 351


 13865      6F2D6F62 
 13866              	.LASF63:
 13867 037b 756C5061 		.ascii	"ulParameters\000"
 13867      72616D65 
 13867      74657273 
 13867      00
 13868              	.LASF125:
 13869 0388 65526574 		.ascii	"eReturn\000"
 13869      75726E00 
 13870              	.LASF193:
 13871 0390 76546173 		.ascii	"vTaskGetInfo\000"
 13871      6B476574 
 13871      496E666F 
 13871      00
 13872              	.LASF128:
 13873 039d 75785265 		.ascii	"uxReturn\000"
 13873      7475726E 
 13873      00
 13874              	.LASF275:
 13875 03a6 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 13875      736B4765 
 13875      744E756D 
 13875      6265724F 
 13875      66546173 
 13876              	.LASF265:
 13877 03bd 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 13877      65724372 
 13877      65617465 
 13877      54696D65 
 13877      72546173 
 13878              	.LASF47:
 13879 03d3 6544656C 		.ascii	"eDeleted\000"
 13879      65746564 
 13879      00
 13880              	.LASF87:
 13881 03dc 74736B54 		.ascii	"tskTCB\000"
 13881      434200
 13882              	.LASF226:
 13883 03e3 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 13883      6B47656E 
 13883      65726963 
 13883      4E6F7469 
 13883      66794672 
 13884              	.LASF20:
 13885 03fd 75696E74 		.ascii	"uint32_t\000"
 13885      33325F74 
 13885      00
 13886              	.LASF261:
 13887 0406 73747263 		.ascii	"strcpy\000"
 13887      707900
 13888              	.LASF86:
 13889 040d 75634E6F 		.ascii	"ucNotifyState\000"
 13889      74696679 
 13889      53746174 
 13889      6500
 13890              	.LASF259:
 13891 041b 75784C69 		.ascii	"uxListRemove\000"
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 352


 13891      73745265 
 13891      6D6F7665 
 13891      00
 13892              	.LASF136:
 13893 0428 78596965 		.ascii	"xYieldRequired\000"
 13893      6C645265 
 13893      71756972 
 13893      656400
 13894              	.LASF90:
 13895 0437 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 13895      6967696E 
 13895      616C4241 
 13895      53455052 
 13895      4900
 13896              	.LASF127:
 13897 0449 75785461 		.ascii	"uxTaskPriorityGet\000"
 13897      736B5072 
 13897      696F7269 
 13897      74794765 
 13897      7400
 13898              	.LASF220:
 13899 045b 78546173 		.ascii	"xTaskGenericNotify\000"
 13899      6B47656E 
 13899      65726963 
 13899      4E6F7469 
 13899      667900
 13900              	.LASF21:
 13901 046e 666C6F61 		.ascii	"float\000"
 13901      7400
 13902              	.LASF173:
 13903 0474 7078556E 		.ascii	"pxUnblockedTCB\000"
 13903      626C6F63 
 13903      6B656454 
 13903      434200
 13904              	.LASF121:
 13905 0483 75735374 		.ascii	"usStackDepth\000"
 13905      61636B44 
 13905      65707468 
 13905      00
 13906              	.LASF214:
 13907 0490 78436C65 		.ascii	"xClearCountOnExit\000"
 13907      6172436F 
 13907      756E744F 
 13907      6E457869 
 13907      7400
 13908              	.LASF14:
 13909 04a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 13909      206C6F6E 
 13909      6720756E 
 13909      7369676E 
 13909      65642069 
 13910              	.LASF181:
 13911 04b9 78456C61 		.ascii	"xElapsedTime\000"
 13911      70736564 
 13911      54696D65 
 13911      00
 13912              	.LASF238:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 353


 13913 04c6 78537573 		.ascii	"xSuspendedTaskList\000"
 13913      70656E64 
 13913      65645461 
 13913      736B4C69 
 13913      737400
 13914              	.LASF91:
 13915 04d9 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 13915      74526169 
 13915      73654241 
 13915      53455052 
 13915      4900
 13916              	.LASF145:
 13917 04eb 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 13917      6B476574 
 13917      5469636B 
 13917      436F756E 
 13917      7446726F 
 13918              	.LASF130:
 13919 0504 75785361 		.ascii	"uxSavedInterruptState\000"
 13919      76656449 
 13919      6E746572 
 13919      72757074 
 13919      53746174 
 13920              	.LASF217:
 13921 051a 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 13921      7473546F 
 13921      436C6561 
 13921      724F6E45 
 13921      6E747279 
 13922              	.LASF235:
 13923 052f 7850656E 		.ascii	"xPendingReadyList\000"
 13923      64696E67 
 13923      52656164 
 13923      794C6973 
 13923      7400
 13924              	.LASF30:
 13925 0541 70785072 		.ascii	"pxPrevious\000"
 13925      6576696F 
 13925      757300
 13926              	.LASF176:
 13927 054c 76546173 		.ascii	"vTaskSetTimeOutState\000"
 13927      6B536574 
 13927      54696D65 
 13927      4F757453 
 13927      74617465 
 13928              	.LASF118:
 13929 0561 78436F6E 		.ascii	"xConstTickCount\000"
 13929      73745469 
 13929      636B436F 
 13929      756E7400 
 13930              	.LASF8:
 13931 0571 5F5F7569 		.ascii	"__uint16_t\000"
 13931      6E743136 
 13931      5F7400
 13932              	.LASF191:
 13933 057c 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 13933      736B4765 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 354


 13933      74546872 
 13933      6561644C 
 13933      6F63616C 
 13934              	.LASF192:
 13935 059f 70765265 		.ascii	"pvReturn\000"
 13935      7475726E 
 13935      00
 13936              	.LASF150:
 13937 05a8 70785465 		.ascii	"pxTemp\000"
 13937      6D7000
 13938              	.LASF263:
 13939 05af 7076506F 		.ascii	"pvPortMalloc\000"
 13939      72744D61 
 13939      6C6C6F63 
 13939      00
 13940              	.LASF182:
 13941 05bc 76546173 		.ascii	"vTaskSuspendAll\000"
 13941      6B537573 
 13941      70656E64 
 13941      416C6C00 
 13942              	.LASF211:
 13943 05cc 63537461 		.ascii	"cStatus\000"
 13943      74757300 
 13944              	.LASF200:
 13945 05d4 70784E65 		.ascii	"pxNextTCB\000"
 13945      78745443 
 13945      4200
 13946              	.LASF84:
 13947 05de 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 13947      72656164 
 13947      4C6F6361 
 13947      6C53746F 
 13947      72616765 
 13948              	.LASF224:
 13949 05fb 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 13949      72657669 
 13949      6F75734E 
 13949      6F746966 
 13949      69636174 
 13950              	.LASF195:
 13951 0618 78476574 		.ascii	"xGetFreeStackSpace\000"
 13951      46726565 
 13951      53746163 
 13951      6B537061 
 13951      636500
 13952              	.LASF4:
 13953 062b 73697A65 		.ascii	"size_t\000"
 13953      5F7400
 13954              	.LASF180:
 13955 0632 70785469 		.ascii	"pxTicksToWait\000"
 13955      636B7354 
 13955      6F576169 
 13955      7400
 13956              	.LASF35:
 13957 0640 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 13957      495F4C49 
 13957      53545F49 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 355


 13957      54454D00 
 13958              	.LASF171:
 13959 0650 78576169 		.ascii	"xWaitIndefinitely\000"
 13959      74496E64 
 13959      6566696E 
 13959      6974656C 
 13959      7900
 13960              	.LASF240:
 13961 0662 78546963 		.ascii	"xTickCount\000"
 13961      6B436F75 
 13961      6E7400
 13962              	.LASF113:
 13963 066d 70727649 		.ascii	"prvIdleTask\000"
 13963      646C6554 
 13963      61736B00 
 13964              	.LASF142:
 13965 0679 76546173 		.ascii	"vTaskEndScheduler\000"
 13965      6B456E64 
 13965      53636865 
 13965      64756C65 
 13965      7200
 13966              	.LASF257:
 13967 068b 764C6973 		.ascii	"vListInsertEnd\000"
 13967      74496E73 
 13967      65727445 
 13967      6E6400
 13968              	.LASF249:
 13969 069a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 13969      52784275 
 13969      66666572 
 13969      00
 13970              	.LASF92:
 13971 06a7 76506F72 		.ascii	"vPortSetBASEPRI\000"
 13971      74536574 
 13971      42415345 
 13971      50524900 
 13972              	.LASF188:
 13973 06b7 78546173 		.ascii	"xTaskToSet\000"
 13973      6B546F53 
 13973      657400
 13974              	.LASF234:
 13975 06c2 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 13975      6572666C 
 13975      6F774465 
 13975      6C617965 
 13975      64546173 
 13976              	.LASF23:
 13977 06dc 5461736B 		.ascii	"TaskFunction_t\000"
 13977      46756E63 
 13977      74696F6E 
 13977      5F7400
 13978              	.LASF229:
 13979 06eb 78546173 		.ascii	"xTaskNotifyStateClear\000"
 13979      6B4E6F74 
 13979      69667953 
 13979      74617465 
 13979      436C6561 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 356


 13980              	.LASF158:
 13981 0701 76546173 		.ascii	"vTaskDelay\000"
 13981      6B44656C 
 13981      617900
 13982              	.LASF17:
 13983 070c 75696E74 		.ascii	"uint8_t\000"
 13983      385F7400 
 13984              	.LASF75:
 13985 0714 5461736B 		.ascii	"TaskStatus_t\000"
 13985      53746174 
 13985      75735F74 
 13985      00
 13986              	.LASF85:
 13987 0721 756C4E6F 		.ascii	"ulNotifiedValue\000"
 13987      74696669 
 13987      65645661 
 13987      6C756500 
 13988              	.LASF174:
 13989 0731 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 13989      6B52656D 
 13989      6F766546 
 13989      726F6D55 
 13989      6E6F7264 
 13990              	.LASF236:
 13991 0753 78546173 		.ascii	"xTasksWaitingTermination\000"
 13991      6B735761 
 13991      6974696E 
 13991      67546572 
 13991      6D696E61 
 13992              	.LASF172:
 13993 076c 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 13993      6B52656D 
 13993      6F766546 
 13993      726F6D45 
 13993      76656E74 
 13994              	.LASF66:
 13995 0785 7848616E 		.ascii	"xHandle\000"
 13995      646C6500 
 13996              	.LASF33:
 13997 078d 4C697374 		.ascii	"ListItem_t\000"
 13997      4974656D 
 13997      5F7400
 13998              	.LASF194:
 13999 0798 70785461 		.ascii	"pxTaskStatus\000"
 13999      736B5374 
 13999      61747573 
 13999      00
 14000              	.LASF54:
 14001 07a5 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 14001      56616C75 
 14001      65576974 
 14001      686F7574 
 14001      4F766572 
 14002              	.LASF89:
 14003 07bf 756C4E65 		.ascii	"ulNewBASEPRI\000"
 14003      77424153 
 14003      45505249 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 357


 14003      00
 14004              	.LASF26:
 14005 07cc 55426173 		.ascii	"UBaseType_t\000"
 14005      65547970 
 14005      655F7400 
 14006              	.LASF105:
 14007 07d8 756C5374 		.ascii	"ulStackDepth\000"
 14007      61636B44 
 14007      65707468 
 14007      00
 14008              	.LASF51:
 14009 07e5 65536574 		.ascii	"eSetBits\000"
 14009      42697473 
 14009      00
 14010              	.LASF40:
 14011 07ee 784C6973 		.ascii	"xListEnd\000"
 14011      74456E64 
 14011      00
 14012              	.LASF213:
 14013 07f7 756C5461 		.ascii	"ulTaskNotifyTake\000"
 14013      736B4E6F 
 14013      74696679 
 14013      54616B65 
 14013      00
 14014              	.LASF170:
 14015 0808 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 14015      6B506C61 
 14015      63654F6E 
 14015      4576656E 
 14015      744C6973 
 14016              	.LASF36:
 14017 0828 4D696E69 		.ascii	"MiniListItem_t\000"
 14017      4C697374 
 14017      4974656D 
 14017      5F7400
 14018              	.LASF216:
 14019 0837 78546173 		.ascii	"xTaskNotifyWait\000"
 14019      6B4E6F74 
 14019      69667957 
 14019      61697400 
 14020              	.LASF123:
 14021 0847 78546173 		.ascii	"xTaskCreate\000"
 14021      6B437265 
 14021      61746500 
 14022              	.LASF111:
 14023 0853 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 14023      64644E65 
 14023      77546173 
 14023      6B546F52 
 14023      65616479 
 14024              	.LASF100:
 14025 086c 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 14025      65736574 
 14025      4E657874 
 14025      5461736B 
 14025      556E626C 
 14026              	.LASF44:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 358


 14027 0888 65526561 		.ascii	"eReady\000"
 14027      647900
 14028              	.LASF124:
 14029 088f 65546173 		.ascii	"eTaskGetState\000"
 14029      6B476574 
 14029      53746174 
 14029      6500
 14030              	.LASF108:
 14031 089d 70784E65 		.ascii	"pxNewTCB\000"
 14031      77544342 
 14031      00
 14032              	.LASF206:
 14033 08a6 75785175 		.ascii	"uxQueue\000"
 14033      65756500 
 14034              	.LASF103:
 14035 08ae 70785461 		.ascii	"pxTaskCode\000"
 14035      736B436F 
 14035      646500
 14036              	.LASF64:
 14037 08b9 4D656D6F 		.ascii	"MemoryRegion_t\000"
 14037      72795265 
 14037      67696F6E 
 14037      5F7400
 14038              	.LASF246:
 14039 08c8 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 14039      74546173 
 14039      6B556E62 
 14039      6C6F636B 
 14039      54696D65 
 14040              	.LASF273:
 14041 08dd 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 14041      72745261 
 14041      69736542 
 14041      41534550 
 14041      524900
 14042              	.LASF254:
 14043 08f0 7078506F 		.ascii	"pxPortInitialiseStack\000"
 14043      7274496E 
 14043      69746961 
 14043      6C697365 
 14043      53746163 
 14044              	.LASF1:
 14045 0906 6C6F6E67 		.ascii	"long long int\000"
 14045      206C6F6E 
 14045      6720696E 
 14045      7400
 14046              	.LASF71:
 14047 0914 75784261 		.ascii	"uxBasePriority\000"
 14047      73655072 
 14047      696F7269 
 14047      747900
 14048              	.LASF215:
 14049 0923 756C5265 		.ascii	"ulReturn\000"
 14049      7475726E 
 14049      00
 14050              	.LASF203:
 14051 092c 75785461 		.ascii	"uxTaskGetSystemState\000"
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 359


 14051      736B4765 
 14051      74537973 
 14051      74656D53 
 14051      74617465 
 14052              	.LASF120:
 14053 0941 70634275 		.ascii	"pcBuffer\000"
 14053      66666572 
 14053      00
 14054              	.LASF149:
 14055 094a 78537769 		.ascii	"xSwitchRequired\000"
 14055      74636852 
 14055      65717569 
 14055      72656400 
 14056              	.LASF25:
 14057 095a 42617365 		.ascii	"BaseType_t\000"
 14057      54797065 
 14057      5F7400
 14058              	.LASF162:
 14059 0965 756C4368 		.ascii	"ulCheckValue\000"
 14059      65636B56 
 14059      616C7565 
 14059      00
 14060              	.LASF58:
 14061 0972 7854696D 		.ascii	"xTimeOnEntering\000"
 14061      654F6E45 
 14061      6E746572 
 14061      696E6700 
 14062              	.LASF133:
 14063 0982 75784E65 		.ascii	"uxNewPriority\000"
 14063      77507269 
 14063      6F726974 
 14063      7900
 14064              	.LASF104:
 14065 0990 70634E61 		.ascii	"pcName\000"
 14065      6D6500
 14066              	.LASF29:
 14067 0997 70784E65 		.ascii	"pxNext\000"
 14067      787400
 14068              	.LASF252:
 14069 099e 6D656D73 		.ascii	"memset\000"
 14069      657400
 14070              	.LASF177:
 14071 09a5 70785469 		.ascii	"pxTimeOut\000"
 14071      6D654F75 
 14071      7400
 14072              	.LASF129:
 14073 09af 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 14073      736B5072 
 14073      696F7269 
 14073      74794765 
 14073      7446726F 
 14074              	.LASF99:
 14075 09c8 756C436F 		.ascii	"ulCount\000"
 14075      756E7400 
 14076              	.LASF98:
 14077 09d0 70756353 		.ascii	"pucStackByte\000"
 14077      7461636B 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 360


 14077      42797465 
 14077      00
 14078              	.LASF59:
 14079 09dd 54696D65 		.ascii	"TimeOut_t\000"
 14079      4F75745F 
 14079      7400
 14080              	.LASF178:
 14081 09e7 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 14081      6B496E74 
 14081      65726E61 
 14081      6C536574 
 14081      54696D65 
 14082              	.LASF83:
 14083 0a04 75785461 		.ascii	"uxTaskNumber\000"
 14083      736B4E75 
 14083      6D626572 
 14083      00
 14084              	.LASF42:
 14085 0a11 5461736B 		.ascii	"TaskHandle_t\000"
 14085      48616E64 
 14085      6C655F74 
 14085      00
 14086              	.LASF223:
 14087 0a1e 65416374 		.ascii	"eAction\000"
 14087      696F6E00 
 14088              	.LASF274:
 14089 0a26 756C4E65 		.ascii	"ulNewMaskValue\000"
 14089      774D6173 
 14089      6B56616C 
 14089      756500
 14090              	.LASF202:
 14091 0a35 75785461 		.ascii	"uxTask\000"
 14091      736B00
 14092              	.LASF212:
 14093 0a3c 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 14093      736B5265 
 14093      73657445 
 14093      76656E74 
 14093      4974656D 
 14094              	.LASF132:
 14095 0a56 76546173 		.ascii	"vTaskPrioritySet\000"
 14095      6B507269 
 14095      6F726974 
 14095      79536574 
 14095      00
 14096              	.LASF60:
 14097 0a67 784D454D 		.ascii	"xMEMORY_REGION\000"
 14097      4F52595F 
 14097      52454749 
 14097      4F4E00
 14098              	.LASF49:
 14099 0a76 65546173 		.ascii	"eTaskState\000"
 14099      6B537461 
 14099      746500
 14100              	.LASF41:
 14101 0a81 4C697374 		.ascii	"List_t\000"
 14101      5F7400
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 361


 14102              	.LASF147:
 14103 0a88 78546173 		.ascii	"xTaskToQuery\000"
 14103      6B546F51 
 14103      75657279 
 14103      00
 14104              	.LASF27:
 14105 0a95 5469636B 		.ascii	"TickType_t\000"
 14105      54797065 
 14105      5F7400
 14106              	.LASF221:
 14107 0aa0 78546173 		.ascii	"xTaskToNotify\000"
 14107      6B546F4E 
 14107      6F746966 
 14107      7900
 14108              	.LASF97:
 14109 0aae 78546173 		.ascii	"xTask\000"
 14109      6B00
 14110              	.LASF157:
 14111 0ab4 7853686F 		.ascii	"xShouldDelay\000"
 14111      756C6444 
 14111      656C6179 
 14111      00
 14112              	.LASF2:
 14113 0ac1 6C6F6E67 		.ascii	"long double\000"
 14113      20646F75 
 14113      626C6500 
 14114              	.LASF269:
 14115 0acd 73707269 		.ascii	"sprintf\000"
 14115      6E746600 
 14116              	.LASF18:
 14117 0ad5 75696E74 		.ascii	"uint16_t\000"
 14117      31365F74 
 14117      00
 14118              	.LASF131:
 14119 0ade 76546173 		.ascii	"vTaskDelete\000"
 14119      6B44656C 
 14119      65746500 
 14120              	.LASF160:
 14121 0aea 76546173 		.ascii	"vTaskSwitchContext\000"
 14121      6B537769 
 14121      74636843 
 14121      6F6E7465 
 14121      787400
 14122              	.LASF245:
 14123 0afd 784E756D 		.ascii	"xNumOfOverflows\000"
 14123      4F664F76 
 14123      6572666C 
 14123      6F777300 
 14124              	.LASF32:
 14125 0b0d 7076436F 		.ascii	"pvContainer\000"
 14125      6E746169 
 14125      6E657200 
 14126              	.LASF247:
 14127 0b19 7849646C 		.ascii	"xIdleTaskHandle\000"
 14127      65546173 
 14127      6B48616E 
 14127      646C6500 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 362


 14128              	.LASF6:
 14129 0b29 756E7369 		.ascii	"unsigned char\000"
 14129      676E6564 
 14129      20636861 
 14129      7200
 14130              	.LASF167:
 14131 0b37 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 14131      6B506C61 
 14131      63654F6E 
 14131      4576656E 
 14131      744C6973 
 14132              	.LASF73:
 14133 0b4d 70785374 		.ascii	"pxStackBase\000"
 14133      61636B42 
 14133      61736500 
 14134              	.LASF7:
 14135 0b59 73686F72 		.ascii	"short int\000"
 14135      7420696E 
 14135      7400
 14136              	.LASF69:
 14137 0b63 65437572 		.ascii	"eCurrentState\000"
 14137      72656E74 
 14137      53746174 
 14137      6500
 14138              	.LASF253:
 14139 0b71 764C6973 		.ascii	"vListInitialiseItem\000"
 14139      74496E69 
 14139      7469616C 
 14139      69736549 
 14139      74656D00 
 14140              	.LASF106:
 14141 0b85 70765061 		.ascii	"pvParameters\000"
 14141      72616D65 
 14141      74657273 
 14141      00
 14142              	.LASF28:
 14143 0b92 78497465 		.ascii	"xItemValue\000"
 14143      6D56616C 
 14143      756500
 14144              	.LASF11:
 14145 0b9d 6C6F6E67 		.ascii	"long int\000"
 14145      20696E74 
 14145      00
 14146              	.LASF65:
 14147 0ba6 78544153 		.ascii	"xTASK_STATUS\000"
 14147      4B5F5354 
 14147      41545553 
 14147      00
 14148              	.LASF272:
 14149 0bb3 433A5C55 		.ascii	"C:\\Users\\adris\\OneDrive\\Documentos\\GitHub\\Tra"
 14149      73657273 
 14149      5C616472 
 14149      69735C4F 
 14149      6E654472 
 14150 0be0 62616A6F 		.ascii	"bajo_micros\\Trabajo_micros\\Trabajo_micros_workspa"
 14150      5F6D6963 
 14150      726F735C 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 363


 14150      54726162 
 14150      616A6F5F 
 14151 0c11 63655C54 		.ascii	"ce\\Trabajo_v02_Sist_Meca.cydsn\000"
 14151      72616261 
 14151      6A6F5F76 
 14151      30325F53 
 14151      6973745F 
 14152              	.LASF151:
 14153 0c30 78546173 		.ascii	"xTaskResumeAll\000"
 14153      6B526573 
 14153      756D6541 
 14153      6C6C00
 14154              	.LASF228:
 14155 0c3f 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 14155      6B4E6F74 
 14155      69667947 
 14155      69766546 
 14155      726F6D49 
 14156              	.LASF233:
 14157 0c56 70784465 		.ascii	"pxDelayedTaskList\000"
 14157      6C617965 
 14157      64546173 
 14157      6B4C6973 
 14157      7400
 14158              	.LASF143:
 14159 0c68 78546173 		.ascii	"xTaskGetTickCount\000"
 14159      6B476574 
 14159      5469636B 
 14159      436F756E 
 14159      7400
 14160              	.LASF95:
 14161 0c7a 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 14161      61736B49 
 14161      73546173 
 14161      6B537573 
 14161      70656E64 
 14162              	.LASF185:
 14163 0c91 76546173 		.ascii	"vTaskSetTaskNumber\000"
 14163      6B536574 
 14163      5461736B 
 14163      4E756D62 
 14163      657200
 14164              	.LASF81:
 14165 0ca4 70785374 		.ascii	"pxStack\000"
 14165      61636B00 
 14166              	.LASF122:
 14167 0cac 78546173 		.ascii	"xTaskToDelete\000"
 14167      6B546F44 
 14167      656C6574 
 14167      6500
 14168              	.LASF222:
 14169 0cba 756C5661 		.ascii	"ulValue\000"
 14169      6C756500 
 14170              	.LASF166:
 14171 0cc2 78546173 		.ascii	"xTaskToSuspend\000"
 14171      6B546F53 
 14171      75737065 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 364


 14171      6E6400
 14172              	.LASF179:
 14173 0cd1 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 14173      6B436865 
 14173      636B466F 
 14173      7254696D 
 14173      654F7574 
 14174              	.LASF267:
 14175 0ce6 76506F72 		.ascii	"vPortEndScheduler\000"
 14175      74456E64 
 14175      53636865 
 14175      64756C65 
 14175      7200
 14176              	.LASF251:
 14177 0cf8 76506F72 		.ascii	"vPortFree\000"
 14177      74467265 
 14177      6500
 14178              	.LASF241:
 14179 0d02 7578546F 		.ascii	"uxTopReadyPriority\000"
 14179      70526561 
 14179      64795072 
 14179      696F7269 
 14179      747900
 14180              	.LASF155:
 14181 0d15 70785072 		.ascii	"pxPreviousWakeTime\000"
 14181      6576696F 
 14181      75735761 
 14181      6B655469 
 14181      6D6500
 14182              	.LASF53:
 14183 0d28 65536574 		.ascii	"eSetValueWithOverwrite\000"
 14183      56616C75 
 14183      65576974 
 14183      684F7665 
 14183      72777269 
 14184              	.LASF5:
 14185 0d3f 5F5F7569 		.ascii	"__uint8_t\000"
 14185      6E74385F 
 14185      7400
 14186              	.LASF189:
 14187 0d49 78496E64 		.ascii	"xIndex\000"
 14187      657800
 14188              	.LASF79:
 14189 0d50 78457665 		.ascii	"xEventListItem\000"
 14189      6E744C69 
 14189      73744974 
 14189      656D00
 14190              	.LASF139:
 14191 0d5f 78546173 		.ascii	"xTaskResumeFromISR\000"
 14191      6B526573 
 14191      756D6546 
 14191      726F6D49 
 14191      535200
 14192              	.LASF219:
 14193 0d72 70756C4E 		.ascii	"pulNotificationValue\000"
 14193      6F746966 
 14193      69636174 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 365


 14193      696F6E56 
 14193      616C7565 
 14194              	.LASF93:
 14195 0d87 78526574 		.ascii	"xReturn\000"
 14195      75726E00 
 14196              	.LASF15:
 14197 0d8f 73697A65 		.ascii	"sizetype\000"
 14197      74797065 
 14197      00
 14198              	.LASF183:
 14199 0d98 76546173 		.ascii	"vTaskMissedYield\000"
 14199      6B4D6973 
 14199      73656459 
 14199      69656C64 
 14199      00
 14200              	.LASF243:
 14201 0da9 75785065 		.ascii	"uxPendedTicks\000"
 14201      6E646564 
 14201      5469636B 
 14201      7300
 14202              	.LASF13:
 14203 0db7 6C6F6E67 		.ascii	"long unsigned int\000"
 14203      20756E73 
 14203      69676E65 
 14203      6420696E 
 14203      7400
 14204              	.LASF196:
 14205 0dc9 65537461 		.ascii	"eState\000"
 14205      746500
 14206              	.LASF198:
 14207 0dd0 70785461 		.ascii	"pxTaskStatusArray\000"
 14207      736B5374 
 14207      61747573 
 14207      41727261 
 14207      7900
 14208              	.LASF146:
 14209 0de2 70635461 		.ascii	"pcTaskGetName\000"
 14209      736B4765 
 14209      744E616D 
 14209      6500
 14210              	.LASF19:
 14211 0df0 696E7433 		.ascii	"int32_t\000"
 14211      325F7400 
 14212              	.LASF144:
 14213 0df8 78546963 		.ascii	"xTicks\000"
 14213      6B7300
 14214              	.LASF141:
 14215 0dff 76546173 		.ascii	"vTaskStartScheduler\000"
 14215      6B537461 
 14215      72745363 
 14215      68656475 
 14215      6C657200 
 14216              	.LASF204:
 14217 0e13 75784172 		.ascii	"uxArraySize\000"
 14217      72617953 
 14217      697A6500 
 14218              	.LASF116:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 366


 14219 0e1f 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 14219      426C6F63 
 14219      6B496E64 
 14219      6566696E 
 14219      6974656C 
 14220              	.LASF43:
 14221 0e35 6552756E 		.ascii	"eRunning\000"
 14221      6E696E67 
 14221      00
 14222              	.LASF161:
 14223 0e3e 70756C53 		.ascii	"pulStack\000"
 14223      7461636B 
 14223      00
 14224              	.LASF72:
 14225 0e47 756C5275 		.ascii	"ulRunTimeCounter\000"
 14225      6E54696D 
 14225      65436F75 
 14225      6E746572 
 14225      00
 14226              	.LASF61:
 14227 0e58 70764261 		.ascii	"pvBaseAddress\000"
 14227      73654164 
 14227      64726573 
 14227      7300
 14228              	.LASF159:
 14229 0e66 78546963 		.ascii	"xTicksToDelay\000"
 14229      6B73546F 
 14229      44656C61 
 14229      7900
 14230              	.LASF67:
 14231 0e74 70635461 		.ascii	"pcTaskName\000"
 14231      736B4E61 
 14231      6D6500
 14232              	.LASF169:
 14233 0e7f 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 14233      6B506C61 
 14233      63654F6E 
 14233      556E6F72 
 14233      64657265 
 14234              	.LASF12:
 14235 0e9e 5F5F7569 		.ascii	"__uint32_t\000"
 14235      6E743332 
 14235      5F7400
 14236              	.LASF255:
 14237 0ea9 764C6973 		.ascii	"vListInitialise\000"
 14237      74496E69 
 14237      7469616C 
 14237      69736500 
 14238              	.LASF264:
 14239 0eb9 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 14239      7456616C 
 14239      69646174 
 14239      65496E74 
 14239      65727275 
 14240              	.LASF48:
 14241 0ed8 65496E76 		.ascii	"eInvalid\000"
 14241      616C6964 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 367


 14241      00
 14242              	.LASF163:
 14243 0ee1 7578546F 		.ascii	"uxTopPriority\000"
 14243      70507269 
 14243      6F726974 
 14243      7900
 14244              	.LASF154:
 14245 0eef 76546173 		.ascii	"vTaskDelayUntil\000"
 14245      6B44656C 
 14245      6179556E 
 14245      74696C00 
 14246              	.LASF114:
 14247 0eff 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 14247      64644375 
 14247      7272656E 
 14247      74546173 
 14247      6B546F44 
 14248              	.LASF135:
 14249 0f1e 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 14249      696F7269 
 14249      74795573 
 14249      65644F6E 
 14249      456E7472 
 14250              	.LASF88:
 14251 0f34 5443425F 		.ascii	"TCB_t\000"
 14251      7400
 14252              	.LASF115:
 14253 0f3a 78546963 		.ascii	"xTicksToWait\000"
 14253      6B73546F 
 14253      57616974 
 14253      00
 14254              	.LASF31:
 14255 0f47 70764F77 		.ascii	"pvOwner\000"
 14255      6E657200 
 14256              	.LASF101:
 14257 0f4f 70727644 		.ascii	"prvDeleteTCB\000"
 14257      656C6574 
 14257      65544342 
 14257      00
 14258              	.LASF45:
 14259 0f5c 65426C6F 		.ascii	"eBlocked\000"
 14259      636B6564 
 14259      00
 14260              	.LASF165:
 14261 0f65 76546173 		.ascii	"vTaskSuspend\000"
 14261      6B537573 
 14261      70656E64 
 14261      00
 14262              	.LASF271:
 14263 0f72 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 14263      72617465 
 14263      645F536F 
 14263      75726365 
 14263      5C50536F 
 14264 0fa0 315C536F 		.ascii	"1\\Source\\tasks.c\000"
 14264      75726365 
 14264      5C746173 
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 368


 14264      6B732E63 
 14264      00
 14265              	.LASF152:
 14266 0fb1 78416C72 		.ascii	"xAlreadyYielded\000"
 14266      65616479 
 14266      5969656C 
 14266      64656400 
 14267              	.LASF207:
 14268 0fc1 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 14268      6B476574 
 14268      43757272 
 14268      656E7454 
 14268      61736B48 
 14269              	.LASF201:
 14270 0fdb 70784669 		.ascii	"pxFirstTCB\000"
 14270      72737454 
 14270      434200
 14271              	.LASF96:
 14272 0fe6 70727654 		.ascii	"prvTaskCheckFreeStackSpace\000"
 14272      61736B43 
 14272      6865636B 
 14272      46726565 
 14272      53746163 
 14273              	.LASF184:
 14274 1001 75785461 		.ascii	"uxTaskGetTaskNumber\000"
 14274      736B4765 
 14274      74546173 
 14274      6B4E756D 
 14274      62657200 
 14275              	.LASF109:
 14276 1015 78526567 		.ascii	"xRegions\000"
 14276      696F6E73 
 14276      00
 14277              	.LASF250:
 14278 101e 70784375 		.ascii	"pxCurrentTCB\000"
 14278      7272656E 
 14278      74544342 
 14278      00
 14279              	.LASF74:
 14280 102b 75735374 		.ascii	"usStackHighWaterMark\000"
 14280      61636B48 
 14280      69676857 
 14280      61746572 
 14280      4D61726B 
 14281              	.LASF187:
 14282 1040 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 14282      6B536574 
 14282      54687265 
 14282      61644C6F 
 14282      63616C53 
 14283              	.LASF239:
 14284 1062 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 14284      7272656E 
 14284      744E756D 
 14284      6265724F 
 14284      66546173 
 14285              	.LASF156:
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 369


 14286 1079 7854696D 		.ascii	"xTimeIncrement\000"
 14286      65496E63 
 14286      72656D65 
 14286      6E7400
 14287              	.LASF3:
 14288 1088 7369676E 		.ascii	"signed char\000"
 14288      65642063 
 14288      68617200 
 14289              	.LASF9:
 14290 1094 73686F72 		.ascii	"short unsigned int\000"
 14290      7420756E 
 14290      7369676E 
 14290      65642069 
 14290      6E7400
 14291              	.LASF117:
 14292 10a7 7854696D 		.ascii	"xTimeToWake\000"
 14292      65546F57 
 14292      616B6500 
 14293              	.LASF78:
 14294 10b3 78537461 		.ascii	"xStateListItem\000"
 14294      74654C69 
 14294      73744974 
 14294      656D00
 14295              	.LASF94:
 14296 10c2 70785443 		.ascii	"pxTCB\000"
 14296      4200
 14297              	.LASF209:
 14298 10c8 76546173 		.ascii	"vTaskList\000"
 14298      6B4C6973 
 14298      7400
 14299              	.LASF22:
 14300 10d2 646F7562 		.ascii	"double\000"
 14300      6C6500
 14301              	.LASF248:
 14302 10d9 75785363 		.ascii	"uxSchedulerSuspended\000"
 14302      68656475 
 14302      6C657253 
 14302      75737065 
 14302      6E646564 
 14303              	.LASF77:
 14304 10ee 7078546F 		.ascii	"pxTopOfStack\000"
 14304      704F6653 
 14304      7461636B 
 14304      00
 14305              	.LASF137:
 14306 10fb 76546173 		.ascii	"vTaskResume\000"
 14306      6B526573 
 14306      756D6500 
 14307              	.LASF110:
 14308 1107 70727649 		.ascii	"prvInitialiseTaskLists\000"
 14308      6E697469 
 14308      616C6973 
 14308      65546173 
 14308      6B4C6973 
 14309              	.LASF199:
 14310 111e 70784C69 		.ascii	"pxList\000"
 14310      737400
ARM GAS  C:\Users\adris\AppData\Local\Temp\cck2ENiE.s 			page 370


 14311              	.LASF175:
 14312 1125 70784576 		.ascii	"pxEventListItem\000"
 14312      656E744C 
 14312      69737449 
 14312      74656D00 
 14313              	.LASF190:
 14314 1135 70765661 		.ascii	"pvValue\000"
 14314      6C756500 
 14315              	.LASF119:
 14316 113d 70727657 		.ascii	"prvWriteNameToBuffer\000"
 14316      72697465 
 14316      4E616D65 
 14316      546F4275 
 14316      66666572 
 14317              	.LASF107:
 14318 1152 70784372 		.ascii	"pxCreatedTask\000"
 14318      65617465 
 14318      64546173 
 14318      6B00
 14319              	.LASF112:
 14320 1160 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 14320      6865636B 
 14320      5461736B 
 14320      73576169 
 14320      74696E67 
 14321              	.LASF186:
 14322 1180 75784861 		.ascii	"uxHandle\000"
 14322      6E646C65 
 14322      00
 14323              	.LASF138:
 14324 1189 78546173 		.ascii	"xTaskToResume\000"
 14324      6B546F52 
 14324      6573756D 
 14324      6500
 14325              	.LASF134:
 14326 1197 75784375 		.ascii	"uxCurrentBasePriority\000"
 14326      7272656E 
 14326      74426173 
 14326      65507269 
 14326      6F726974 
 14327              	.LASF244:
 14328 11ad 78596965 		.ascii	"xYieldPending\000"
 14328      6C645065 
 14328      6E64696E 
 14328      6700
 14329              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
